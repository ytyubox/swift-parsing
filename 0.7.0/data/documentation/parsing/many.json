{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Separator","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Terminator","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"For example, given a comma-separated string of numbers, one could parse out an array of"},{"type":"text","text":" "},{"type":"text","text":"integers:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let intsParser = Many {","  Int.parser()","} separator: {","  \",\"","}","","var input = \"1,2,3\"[...]","try intsParser.parse(&input)  \/\/ [1, 2, 3]","input                         \/\/ \"\""]},{"inlineContent":[{"text":"In addition to an element and separator parser, a “terminator” parser that is run after the element","type":"text"},{"text":" ","type":"text"},{"text":"parser has run as many times as possible. This can be useful for proving that the ","type":"text"},{"code":"Many","type":"codeVoice"},{"text":" parser has","type":"text"},{"text":" ","type":"text"},{"text":"consumed everything you expect:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let intsParser = Many {","  Int.parser()","} separator: {","  \",\"","} terminator: {","  \"---\"","}","","var input = \"1,2,3---\"[...]","try intsParser.parse(&input)  \/\/ [1, 2, 3]","input                         \/\/ \"\""]},{"inlineContent":[{"type":"text","text":"The outputs of the element parser do not need to be accumulated in an array. More generally one can"},{"type":"text","text":" "},{"type":"text","text":"specify a closure that customizes how outputs are accumulated, much like "},{"type":"codeVoice","code":"Sequence.reduce(into:_)"},{"type":"text","text":". We"},{"type":"text","text":" "},{"type":"text","text":"could, for example, sum the numbers as we parse them instead of accumulating each value in an array:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let sumParser = Many(into: 0, +=) {","  Int.parser()","} separator: {","  \",\"","}","","var input = \"1,2,3\"[...]","try sumParser.parse(&input)  \/\/ 6","input                        \/\/ \"\""]},{"inlineContent":[{"type":"text","text":"This parser fails if the terminator parser fails. For example, if we required our comma-separated"},{"type":"text","text":" "},{"type":"text","text":"integer parser to be terminated by "},{"type":"codeVoice","code":"\"---\""},{"type":"text","text":", but we parsed a list that contained a non-integer we would"},{"type":"text","text":" "},{"type":"text","text":"get an error:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let intsParser = Many {","  Int.parser()","} separator: {","  \",\"","} terminator: {","  \"---\"","}","var input = \"1,2,Hello---\"[...]","try intsParser.parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:5","\/\/ 1 | 1,2,Hello---","\/\/   |     ^ expected integer"]}],"kind":"content"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:terminator:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/element","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/terminator","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations"],"title":"Default Implementations","generated":true}],"sections":[],"abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"schemaVersion":{"major":0,"minor":2,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/many"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"struct","externalID":"s:7Parsing4ManyV","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"navigatorTitle":[{"kind":"identifier","text":"Many"}],"role":"symbol","modules":[{"name":"Parsing"}],"title":"Many"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Many/updateAccumulatingResult":{"url":"\/documentation\/parsing\/many\/updateaccumulatingresult","type":"topic","abstract":[],"title":"updateAccumulatingResult","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateAccumulatingResult","kind":"identifier"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:atMost:element:separator:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/many\/init(atleast:atmost:element:separator:)","type":"topic","abstract":[],"title":"init(atLeast:atMost:element:separator:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:separator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:atMost:element:terminator:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/many\/init(atleast:atmost:element:terminator:)","type":"topic","abstract":[],"title":"init(atLeast:atMost:element:terminator:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/initialResult":{"url":"\/documentation\/parsing\/many\/initialresult","type":"topic","abstract":[],"title":"initialResult","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initialResult","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:atMost:_:element:terminator:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Terminator.Input"},{"text":".","type":"text"}]},"url":"\/documentation\/parsing\/many\/init(into:atleast:atmost:_:element:terminator:)","type":"topic","abstract":[],"title":"init(into:atLeast:atMost:_:element:terminator:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/maximum":{"url":"\/documentation\/parsing\/many\/maximum","type":"topic","abstract":[],"title":"maximum","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximum","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/minimum":{"role":"symbol","type":"topic","title":"minimum","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","url":"\/documentation\/parsing\/many\/minimum","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimum","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations","abstract":[],"title":"Parser Implementations","url":"\/documentation\/parsing\/many\/parser-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:atMost:_:element:separator:terminator:)":{"title":"init(into:atLeast:atMost:_:element:separator:terminator:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:separator:terminator:)","type":"topic","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser at least and at most the given"},{"type":"text","text":" "},{"type":"text","text":"number of times, accumulating the outputs into a result with a given closure."}],"url":"\/documentation\/parsing\/many\/init(into:atleast:atmost:_:element:separator:terminator:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/element":{"url":"\/documentation\/parsing\/many\/element","type":"topic","abstract":[],"title":"element","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"element","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/element"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","title":"Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:atMost:element:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"[Element.Output]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/parsing\/many\/init(atleast:atmost:element:)","type":"topic","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser at least and at most the given"},{"type":"text","text":" "},{"type":"text","text":"number of times, accumulating the outputs in an array."}],"title":"init(atLeast:atMost:element:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/separator":{"url":"\/documentation\/parsing\/many\/separator","type":"topic","abstract":[],"title":"separator","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"separator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:atMost:element:separator:terminator:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:separator:terminator:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" is "},{"code":"[Element.Output]","type":"codeVoice"},{"type":"text","text":", "},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Terminator","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Element.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Separator.Input","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Separator.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Terminator.Input","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser at least and at most the given"},{"type":"text","text":" "},{"type":"text","text":"number of times, accumulating the outputs in an array."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"title":"init(atLeast:atMost:element:separator:terminator:)","type":"topic","url":"\/documentation\/parsing\/many\/init(atleast:atmost:element:separator:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:atMost:_:element:separator:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Terminator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Element.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Separator.Input","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/many\/init(into:atleast:atmost:_:element:separator:)","type":"topic","abstract":[],"title":"init(into:atLeast:atMost:_:element:separator:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:separator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/terminator":{"fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"terminator","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Terminator"}],"type":"topic","title":"terminator","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/terminator","kind":"symbol","url":"\/documentation\/parsing\/many\/terminator","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:atMost:_:element:)":{"url":"\/documentation\/parsing\/many\/init(into:atleast:atmost:_:element:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(into:atLeast:atMost:_:element:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:)","kind":"symbol","type":"topic","abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs into a result with a given closure.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/parse(_:)":{"url":"\/documentation\/parsing\/many\/parse(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"title":"parse(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}],"title":"Many","url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value."}],"url":"\/documentation\/parsing\/parser","title":"Parser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol"}}}