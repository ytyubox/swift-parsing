{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This parser forwards its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","isActive":true,"type":"reference"},{"text":" method to an arbitrary underlying parser having the same","type":"text"},{"text":" ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" types, hiding the specifics of the underlying ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","type":"reference","isActive":true},{"text":" to wrap a parser whose type has details you donâ€™t want to expose across API","type":"text"},{"text":" ","type":"text"},{"text":"boundaries, such as different modules. When you use type erasure this way, you can change the","type":"text"},{"text":" ","type":"text"},{"text":"underlying parser over time without affecting existing clients.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"major":0,"patch":0,"minor":2},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-1pdke","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-71nto"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/Parser-Implementations"],"generated":true,"title":"Default Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"},"kind":"symbol","sections":[],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"externalID":"s:7Parsing9AnyParserV","modules":[{"name":"Parsing"}],"roleHeading":"Structure","symbolKind":"struct","role":"symbol","title":"AnyParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparser"]}],"abstract":[{"text":"A type-erased parser of ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-1pdke":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/anyparser\/init(_:)-1pdke","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-1pdke","kind":"symbol","role":"symbol","type":"topic","title":"init(_:)","abstract":[{"text":"Creates a parser that wraps the given closure in its ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)"},{"text":" method.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-71nto":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","type":"topic","abstract":[{"text":"Creates a type-erasing parser to wrap the given parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-71nto","role":"symbol","url":"\/documentation\/parsing\/anyparser\/init(_:)-71nto","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/eraseToAnyParser()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/anyparser\/erasetoanyparser()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/eraseToAnyParser()","kind":"symbol","role":"symbol","type":"topic","title":"eraseToAnyParser()","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","title":"Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"type":"topic","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","title":"AnyParser","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/Parser-Implementations":{"title":"Parser Implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/Parser-Implementations","type":"topic","url":"\/documentation\/parsing\/anyparser\/parser-implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/parse(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}],"url":"\/documentation\/parsing\/anyparser\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","kind":"symbol","role":"symbol","type":"topic","title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value."}],"url":"\/documentation\/parsing\/parser","title":"Parser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol"}}}