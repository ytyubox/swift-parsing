{"schemaVersion":{"major":0,"patch":0,"minor":2},"abstract":[{"text":"Provides support for ","type":"text"},{"type":"codeVoice","code":"if #available"},{"type":"text","text":" statements in "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"},{"type":"text","text":" blocks, producing a void"},{"type":"text","text":" "},{"type":"text","text":"parser for a given void parser."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildLimitedAvailability","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parser","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"OptionalVoid","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"kind":"symbol","metadata":{"externalID":"s:7Parsing13ParserBuilderO24buildLimitedAvailabilityyAA7ParsersO12OptionalVoidVy_xGxSgAA0B0Rzyt6OutputRtzlFZ","symbolKind":"method","role":"symbol","title":"buildLimitedAvailability(_:)","roleHeading":"Type Method","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildLimitedAvailability"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV","text":"OptionalVoid"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"modules":[{"name":"Parsing"}]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/buildLimitedAvailability(_:)-8o1cq","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/buildlimitedavailability(_:)-8o1cq"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/buildLimitedAvailability(_:)-8o1cq":{"abstract":[{"type":"text","text":"Provides support for "},{"type":"codeVoice","code":"if #available"},{"type":"text","text":" statements in "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"reference"},{"type":"text","text":" blocks, producing a void"},{"type":"text","text":" "},{"type":"text","text":"parser for a given void parser."}],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/buildlimitedavailability(_:)-8o1cq","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildLimitedAvailability","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV","text":"OptionalVoid","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"buildLimitedAvailability(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/buildLimitedAvailability(_:)-8o1cq"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","title":"Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"abstract":[{"type":"text","text":"A custom parameter attribute that constructs a parser that attempts to run a number of parsers,"},{"type":"text","text":" "},{"type":"text","text":"one after the other, and accumulates their outputs."}],"url":"\/documentation\/parsing\/parserbuilder","title":"ParserBuilder","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value."}],"url":"\/documentation\/parsing\/parser","title":"Parser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"url":"\/documentation\/parsing\/parsers\/optionalvoid","navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}],"title":"Parsers.OptionalVoid","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","role":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a given void parser, succeeding with void."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"kind":"symbol","title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"role":"symbol"}}}