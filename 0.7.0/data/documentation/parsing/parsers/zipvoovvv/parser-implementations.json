{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV"]]},"schemaVersion":{"minor":2,"patch":0,"major":0},"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/compactMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/filter(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/flatMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/pipe(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/pullback(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/replaceError(with:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/Parser-Implementations","interfaceLanguage":"swift"},"kind":"article","sections":[],"metadata":{"modules":[{"name":"Parsing"}],"title":"Parser Implementations","role":"collectionGroup"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/zipvoovvv\/parser-implementations"]}],"abstract":[{"type":"text","text":"No overview available."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV/map(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/zipvoovvv\/map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/map(_:)","kind":"symbol","role":"symbol","type":"topic","title":"map(_:)","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"kind":"symbol","title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV/eraseToAnyParser()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/zipvoovvv\/erasetoanyparser()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/eraseToAnyParser()","kind":"symbol","role":"symbol","type":"topic","title":"eraseToAnyParser()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV/flatMap(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parsers\/zipvoovvv\/flatmap(_:)","role":"symbol","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/flatMap(_:)","title":"flatMap(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV/pullback(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pullback","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/zipvoovvv\/pullback(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/pullback(_:)","kind":"symbol","role":"symbol","type":"topic","title":"pullback(_:)","abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV/replaceError(with:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parsers\/zipvoovvv\/replaceerror(with:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/replaceError(with:)","kind":"symbol","role":"symbol","type":"topic","title":"replaceError(with:)","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV/compactMap(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier","text":"CompactMap"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parsers\/zipvoovvv\/compactmap(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/compactMap(_:)","kind":"symbol","role":"symbol","type":"topic","title":"compactMap(_:)","abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV/filter(_:)":{"title":"filter(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/zipvoovvv\/filter(_:)","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/filter(_:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","title":"Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV","abstract":[],"navigatorTitle":[{"text":"ZipVOOVVV","kind":"identifier"}],"title":"Parsers.ZipVOOVVV","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ZipVOOVVV","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/zipvoovvv"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOOVVV/pipe(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pipe","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/zipvoovvv\/pipe(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOOVVV\/pipe(_:)","kind":"symbol","role":"symbol","type":"topic","title":"pipe(_:)","abstract":[{"text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns","type":"text"},{"text":" ","type":"text"},{"text":"the output of the given parser.","type":"text"}]}}}