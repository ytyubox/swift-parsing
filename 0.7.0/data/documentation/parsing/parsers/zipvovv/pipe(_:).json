{"metadata":{"role":"symbol","externalID":"s:7Parsing6ParserPAAE4pipeyAA7ParsersO4PipeVy_xqd__Gqd__yXEAaBRd__5InputQyd__6OutputRtzlF::SYNTHESIZED::s:7Parsing7ParsersO7ZipVOVVV","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier","text":"Pipe"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"pipe(_:)","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVV\/pipe(_:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVV","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVV\/Parser-Implementations"]]},"sections":[],"kind":"symbol","schemaVersion":{"minor":2,"major":0,"patch":0},"abstract":[{"text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns","type":"text"},{"text":" ","type":"text"},{"text":"the output of the given parser.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/zipvovv\/pipe(_:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pipe","preciseIdentifier":"s:7Parsing7ParsersO4PipeV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A parser that pipes this parserâ€™s output into another parser.  @inlinable"}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"downstream","content":[{"inlineContent":[{"text":"A parser that parses the output of this parser.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"For example, we can try to parse an integer of exactly 4 digits by piping the output of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","type":"reference"},{"text":" into an ","type":"text"},{"code":"Int.parser()","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let year = Prefix(4).pipe { Int.parser() }","","try year.parse(\"2022\")  \/\/ 2022","try year.parse(\"0123\")  \/\/ 123"]},{"inlineContent":[{"type":"text","text":"This parser fails if either the upstream or downstream parser fails. For example:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["try year.parse(\"123\")","\/\/ error: unexpected input","\/\/  --> input:1:4","\/\/ 1 | 123","\/\/   |    ^ expected 1 more element","","try year.parse(\"fail!\")","\/\/ error: unexpected input","\/\/  --> input:1:1-4","\/\/ 1 | fail!","\/\/   | ^^^^ pipe: expected integer"]}],"kind":"content"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOVV/pipe(_:)":{"url":"\/documentation\/parsing\/parsers\/zipvovv\/pipe(_:)","abstract":[{"text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"title":"pipe(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVV\/pipe(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pipe","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value."}],"url":"\/documentation\/parsing\/parser","title":"Parser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","title":"Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"type":"topic","abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"url":"\/documentation\/parsing\/parsers\/pipe","title":"Parsers.Pipe","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOVV/Parser-Implementations":{"url":"\/documentation\/parsing\/parsers\/zipvovv\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVV\/Parser-Implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Parser Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOVV":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ZipVOVV","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/zipvovv","navigatorTitle":[{"text":"ZipVOVV","kind":"identifier"}],"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVV","title":"Parsers.ZipVOVV","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","title":"Prefix","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"kind":"symbol","url":"\/documentation\/parsing\/prefix","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"kind":"symbol","title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"role":"symbol"}}}