{"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"metadata":{"externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:7Parsing7ParsersO5ZipVOV","extendedModule":"Parsing","title":"replaceError(with:)","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"modules":[{"name":"Parsing"}],"role":"symbol"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVO","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVO\/Parser-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"A parser that never fails.","type":"text"}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"output","content":[{"inlineContent":[{"text":"An output to return should the upstream parser fail.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Useful for providing a default output for a parser.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, we could create a parser that parses a plus or minus sign and maps the result to","type":"text"},{"text":" ","type":"text"},{"text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:","type":"text"}],"type":"paragraph"},{"code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Notably this parser is non-throwing:","type":"text"}],"type":"paragraph"},{"code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important","type":"text"},{"text":" ","type":"text"},{"text":"for building up complex parsers that cannot fail.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"minor":2,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVO\/replaceError(with:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/parsers\/zipvo\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVO/Parser-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVO\/Parser-Implementations","url":"\/documentation\/parsing\/parsers\/zipvo\/parser-implementations","kind":"article","type":"topic","title":"Parser Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"kind":"symbol","title":"Parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"kind":"symbol","title":"Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVO":{"navigatorTitle":[{"kind":"identifier","text":"ZipVO"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVO","kind":"symbol","title":"Parsers.ZipVO","type":"topic","url":"\/documentation\/parsing\/parsers\/zipvo","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVO"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"type":"topic","title":"Parsers.ReplaceError","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","url":"\/documentation\/parsing\/parsers\/replaceerror","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVO/replaceError(with:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVO\/replaceError(with:)","url":"\/documentation\/parsing\/parsers\/zipvo\/replaceerror(with:)","role":"symbol","kind":"symbol","type":"topic","title":"replaceError(with:)"}}}