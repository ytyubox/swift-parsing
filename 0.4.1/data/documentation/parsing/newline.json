{"abstract":[{"type":"text","text":"A parser that consumes a single newline from the beginning of the input."}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"schemaVersion":{"patch":0,"major":0,"minor":2},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/newline"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s4UTF8a","kind":"typeIdentifier","text":"UTF8"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","kind":"typeIdentifier","text":"CodeUnit"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"It will consume both line feeds ("},{"type":"codeVoice","code":"\"\\n\""},{"type":"text","text":") and carriage returns with line feeds ("},{"type":"codeVoice","code":"\"\\r\\n\""},{"type":"text","text":")."}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-7vzmw","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-xyrv"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/Parser-Implementations"],"generated":true,"title":"Default Implementations"}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"role":"symbol","title":"Newline","modules":[{"name":"Parsing"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"externalID":"s:7Parsing7NewlineV","roleHeading":"Structure"},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/Parser-Implementations":{"type":"topic","title":"Parser Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/Parser-Implementations","url":"\/documentation\/parsing\/newline\/parser-implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-xyrv":{"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/newline\/init()-xyrv","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-xyrv","title":"init()","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"role":"symbol","url":"\/documentation\/parsing\/newline\/parse(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/parse(_:)","title":"parse(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-7vzmw":{"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/newline\/init()-7vzmw","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-7vzmw","title":"init()","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"kind":"symbol","title":"Newline","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a single newline from the beginning of the input."}],"url":"\/documentation\/parsing\/newline","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}]}}}