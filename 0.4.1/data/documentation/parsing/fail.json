{"abstract":[{"type":"text","text":"A parser that always fails, no matter the input."}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":2,"patch":0,"major":0},"metadata":{"symbolKind":"struct","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"title":"Fail","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:7Parsing4FailV","modules":[{"name":"Parsing"}],"role":"symbol"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()-4vfy9","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()-64xg9","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()-8m1tg"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/Parser-Implementations"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fail"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"codeListing","syntax":"swift","code":["Fail<Substring, Int>().parse(\"123 Hello\") \/\/ (output: nil, rest: \"123 Hello\")"]}]}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"role":"symbol","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","kind":"symbol","url":"\/documentation\/parsing\/fail","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that always fails, no matter the input."}],"type":"topic","title":"Fail"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/init()-64xg9":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()-64xg9","url":"\/documentation\/parsing\/fail\/init()-64xg9","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}]},"type":"topic","kind":"symbol","title":"init()"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/init()-8m1tg":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()-8m1tg","url":"\/documentation\/parsing\/fail\/init()-8m1tg","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"type":"topic","kind":"symbol","title":"init()"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/parse(_:)","url":"\/documentation\/parsing\/fail\/parse(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","kind":"symbol","title":"parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/init()-4vfy9":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()-4vfy9","url":"\/documentation\/parsing\/fail\/init()-4vfy9","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","kind":"symbol","title":"init()"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/Parser-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/Parser-Implementations","kind":"article","url":"\/documentation\/parsing\/fail\/parser-implementations","abstract":[],"type":"topic","title":"Parser Implementations"}}}