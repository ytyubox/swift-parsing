{"metadata":{"modules":[{"name":"Parsing"}],"roleHeading":"Structure","externalID":"s:7Parsing4ManyV","navigatorTitle":[{"text":"Many","kind":"identifier"}],"title":"Many","role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}]},"schemaVersion":{"major":0,"patch":0,"minor":2},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"kind":"symbol","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:separator:_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/element","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/upstream-swift.property"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Upstream-swift.typealias"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations"],"title":"Default Implementations","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Separator","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"For example, given a comma-separated string of numbers, one could parse out an array of","type":"text"},{"text":" ","type":"text"},{"text":"integers:","type":"text"}]},{"code":["var input = \"1,2,3\"[...]","let output = Many(Int.parser(), separator: \",\").parse(&input)","precondition(input == \"\")","precondition(output == [1, 2, 3])"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most general version of "},{"type":"codeVoice","code":"Many"},{"type":"text","text":" takes a closure that can customize how outputs accumulate,"},{"type":"text","text":" "},{"type":"text","text":"much like "},{"type":"codeVoice","code":"Sequence.reduce(into:_)"},{"type":"text","text":". We could, for example, sum the numbers as we parse them"},{"type":"text","text":" "},{"type":"text","text":"instead of accumulating each value in an array:"}]},{"code":["let sumParser = Many(","  Int.parser(of: Substring.self),","  into: 0,","  separator: \",\",","  +=",")","var input = \"1,2,3\"[...]","let output = Many(Int.parser(), into: 0, separator: \",\").parse(&input)","precondition(input == \"\")","precondition(output == 6)"],"type":"codeListing","syntax":null}]}],"variants":[{"paths":["\/documentation\/parsing\/many"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Many/parse(_:)":{"type":"topic","kind":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/many\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/Parser-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations","url":"\/documentation\/parsing\/many\/parser-implementations","role":"collectionGroup","type":"topic","kind":"article","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/initialResult":{"type":"topic","kind":"symbol","title":"initialResult","url":"\/documentation\/parsing\/many\/initialresult","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"initialResult"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/separator":{"type":"topic","kind":"symbol","title":"separator","url":"\/documentation\/parsing\/many\/separator","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":"?"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:atLeast:atMost:)":{"type":"topic","kind":"symbol","title":"init(_:atLeast:atMost:)","url":"\/documentation\/parsing\/many\/init(_:atleast:atmost:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs in an array.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/maximum":{"type":"topic","kind":"symbol","title":"maximum","url":"\/documentation\/parsing\/many\/maximum","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/updateAccumulatingResult":{"type":"topic","kind":"symbol","title":"updateAccumulatingResult","url":"\/documentation\/parsing\/many\/updateaccumulatingresult","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateAccumulatingResult"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","url":"\/documentation\/parsing\/many","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"navigatorTitle":[{"kind":"identifier","text":"Many"}],"type":"topic","kind":"symbol","title":"Many"},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:atLeast:atMost:separator:)":{"type":"topic","kind":"symbol","title":"init(_:atLeast:atMost:separator:)","url":"\/documentation\/parsing\/many\/init(_:atleast:atmost:separator:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs in an array.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:separator:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:atLeast:atMost:separator:_:)":{"type":"topic","kind":"symbol","title":"init(_:into:atLeast:atMost:separator:_:)","url":"\/documentation\/parsing\/many\/init(_:into:atleast:atmost:separator:_:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs into a result with a given closure.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:separator:_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/Upstream-swift.typealias":{"type":"topic","kind":"symbol","title":"Many.Upstream","url":"\/documentation\/parsing\/many\/upstream-swift.typealias","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Upstream-swift.typealias","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Upstream"}],"deprecated":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Upstream"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":".","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/minimum":{"type":"topic","kind":"symbol","title":"minimum","url":"\/documentation\/parsing\/many\/minimum","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/upstream-swift.property":{"type":"topic","kind":"symbol","title":"upstream","url":"\/documentation\/parsing\/many\/upstream-swift.property","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/upstream-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"upstream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Many","preciseIdentifier":"s:7Parsing4ManyV"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Upstream"}],"deprecated":true,"role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:atLeast:atMost:_:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","title":"init(_:into:atLeast:atMost:_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:_:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs into a result with a given closure.","type":"text"}],"url":"\/documentation\/parsing\/many\/init(_:into:atleast:atmost:_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/element":{"type":"topic","url":"\/documentation\/parsing\/many\/element","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"element"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/element","role":"symbol","abstract":[],"kind":"symbol","title":"element"}}}