{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/startswith"]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]}],"abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/count","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/possiblePrefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/startsWith"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/Parser-Implementations"]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"externalID":"s:7Parsing10StartsWithV","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"roleHeading":"Structure","role":"symbol","modules":[{"name":"Parsing"}],"title":"StartsWith"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"platforms":["Linux"]}]},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.starts(with:)"},{"type":"text","text":", and tests that the input it is parsing"},{"type":"text","text":" "},{"type":"text","text":"starts with a given subsequence by calling this method under the hood."}],"type":"paragraph"},{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", it consumes this prefix and returns ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["StartsWith(\"Hello, \").parse(\"Hello, Blob!\"[...]) \/\/ (output: (), rest: \"Blob!\")"]},{"inlineContent":[{"text":"If ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", it fails and leaves input intact:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["StartsWith(\"Hello, \").parse(\"Goodnight, Blob!\"[...]) \/\/ (output: nil, rest: \"Goodnight, Blob!\")"]},{"inlineContent":[{"text":"This parser returns ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" and ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"text":" the sequence of elements it consumes because the sequence","type":"text"},{"text":" ","type":"text"},{"text":"is already known at the time the parser is created (it is the value quite literally passed to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","type":"reference"},{"text":"). This means ","type":"text"},{"type":"codeVoice","code":"StartsWith"},{"text":" plays nicely when chained into the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","type":"reference"},{"text":" operation, which will discard the ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" output.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"In many circumstances you can elide the ","type":"text"},{"code":"StartsWith","type":"codeVoice"},{"text":" parser entirely and just use the collection as the","type":"text"},{"text":" ","type":"text"},{"text":"parser. For example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\"Hello, \".parse(\"Hello, Blob!\"[...]) \/\/ (output: (), rest: \"Blob!\")"]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":2},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","abstract":[],"type":"topic","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/parse(_:)","title":"parse(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"?"}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/startswith\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:)":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"abstract":[{"text":"Initializes a parser that successfully returns ","type":"text"},{"code":"Void","type":"codeVoice"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"type":"text","text":"are equivalent to the elements in another sequence."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","title":"init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"PossiblePrefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/startswith\/init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-1fw8y":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","title":"take(_:)","type":"topic","url":"\/documentation\/parsing\/parser\/take(_:)-1fw8y","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, taking only the output of the"},{"type":"text","text":" "},{"type":"text","text":"given parser."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO9SkipFirstV","text":"SkipFirst"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:by:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/startswith\/init(_:by:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Initializes a parser that successfully returns "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" when the initial elements of its input"},{"text":" ","type":"text"},{"text":"are equivalent to the elements in another sequence, using the given predicate as the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"equivalence test."}],"title":"init(_:by:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/possiblePrefix":{"abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"possiblePrefix"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s13AnyCollectionV","kind":"typeIdentifier","text":"AnyCollection"},{"kind":"text","text":"<"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"possiblePrefix","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/possiblePrefix","type":"topic","url":"\/documentation\/parsing\/startswith\/possibleprefix"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"role":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","kind":"symbol","url":"\/documentation\/parsing\/startswith","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"type":"topic","title":"StartsWith"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/count":{"abstract":[],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"count"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"count","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/count","type":"topic","url":"\/documentation\/parsing\/startswith\/count"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/Parser-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/Parser-Implementations","kind":"article","url":"\/documentation\/parsing\/startswith\/parser-implementations","abstract":[],"type":"topic","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/startsWith":{"url":"\/documentation\/parsing\/startswith\/startswith","kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/startsWith","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startsWith","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"startsWith","type":"topic","role":"symbol"}}}