{"variants":[{"paths":["\/documentation\/casepaths\/casepath\/map(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"map(_:)","externalID":"s:7Parsing10ConversionPAAE3mapyAA11ConversionsO3MapVy_xqd__Gqd__AaBRd__5InputQyd__6OutputRtzlF::SYNTHESIZED::s:9CasePaths0A4PathV","extendedModule":"Parsing","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"CasePaths"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/Conversion-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"downstream","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","text":"Conversion","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing10ConversionP"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A conversion that transforms the input of this conversion into the output of the","type":"text"},{"text":" ","type":"text"},{"text":"given conversion.","type":"text"}],"type":"paragraph"}]},{"parameters":[{"name":"downstream","content":[{"type":"paragraph","inlineContent":[{"text":"A conversion that transforms the output of this conversion into some","type":"text"},{"text":" ","type":"text"},{"text":"new output.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"When provided with a conversion from this conversion’s output type to some new output type,","type":"text"},{"text":" ","type":"text"},{"text":"this method can return a new conversion from this conversion’s input type to the given","type":"text"},{"text":" ","type":"text"},{"text":"conversion’s output type by calling their ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/apply(_:)","type":"reference"},{"text":" functions and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/unapply(_:)","type":"reference"},{"text":" ","type":"text"},{"text":"functions one after the other.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This method is similar to ","type":"text"},{"type":"codeVoice","code":"Sequence.map"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Optional.map"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Result.map"},{"text":" in the Swift","type":"text"},{"text":" ","type":"text"},{"text":"standard library, as well as ","type":"text"},{"type":"codeVoice","code":"Publisher.map"},{"text":" in the Combine framework. This method is also","type":"text"},{"text":" ","type":"text"},{"text":"similar to the ","type":"text"},{"type":"codeVoice","code":"map"},{"text":" functions on ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", especially","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Parser\/map(_:)-18m9d"},{"text":", which takes a conversion.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Returns a conversion that transforms the output of this conversion with a given downstream"},{"type":"text","text":" "},{"type":"text","text":"conversion."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/map(_:)"},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/unapply(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/unapply(_:)","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"text":"(","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/casepaths\/casepath\/unapply(_:)","title":"unapply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"title":"Conversions.Map","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","navigatorTitle":[{"kind":"identifier","text":"Map"}],"abstract":[{"type":"text","text":"A conversion that composes two conversions together by composing their"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)"},{"type":"text","text":" functions and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)"},{"type":"text","text":" functions together."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"url":"\/documentation\/parsing\/conversions\/map","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","role":"symbol","title":"Conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"kind":"symbol","title":"unapply(_:)","role":"symbol","url":"\/documentation\/parsing\/conversion\/unapply(_:)","required":true,"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"kind":"symbol","title":"apply(_:)","role":"symbol","url":"\/documentation\/parsing\/conversion\/apply(_:)","required":true,"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/map(_:)":{"type":"topic","url":"\/documentation\/casepaths\/casepath\/map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"map(_:)","role":"symbol","abstract":[{"text":"Returns a conversion that transforms the output of this conversion with a given downstream","type":"text"},{"text":" ","type":"text"},{"text":"conversion.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"}],"title":"CasePath","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"url":"\/documentation\/casepaths\/casepath","type":"topic","abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/Conversion-Implementations":{"title":"Conversion Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/Conversion-Implementations","role":"collectionGroup","url":"\/documentation\/casepaths\/casepath\/conversion-implementations","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths":{"abstract":[],"kind":"symbol","role":"collection","title":"CasePaths","url":"\/documentation\/casepaths","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/apply(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/apply(_:)","kind":"symbol","title":"apply(_:)","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"url":"\/documentation\/casepaths\/casepath\/apply(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"}],"role":"symbol"}}}