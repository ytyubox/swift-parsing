{"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"Conversions.Parser","role":"symbol","symbolKind":"struct","roleHeading":"Structure","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing11ConversionsO6ParserV","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/parser"]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","preciseIdentifier":"s:7Parsing13ParserPrinterP","text":"ParserPrinter"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","preciseIdentifier":"s:7Parsing21PrependableCollectionP","text":"PrependableCollection"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Conversion\/parse(_:)-swift.type.method"},{"text":" operation, which constructs this type.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"abstract":[{"text":"A conversion from a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","isActive":true,"type":"reference"},{"text":"’s input to its output.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/parser"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"],"type":"conformsTo"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser":{"title":"Conversions.Parser","abstract":[{"type":"text","text":"A conversion from a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","isActive":true},{"type":"text","text":"’s input to its output."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/conversions\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/init(parser:)":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)","role":"symbol","kind":"symbol","title":"init(parser:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/conversions\/parser\/init(parser:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/parser":{"url":"\/documentation\/parsing\/conversions\/parser\/parser","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parser","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/parser","abstract":[],"title":"parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/Conversion-Implementations":{"url":"\/documentation\/parsing\/conversions\/parser\/conversion-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations","role":"collectionGroup","title":"Conversion Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","role":"symbol","title":"Conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","role":"symbol","url":"\/documentation\/parsing\/parserprinter","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/apply(_:)":{"abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"kind":"symbol","title":"apply(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/conversions\/parser\/apply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrependableCollection"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/prependablecollection","abstract":[{"type":"text","text":"A collection that supports empty initialization and the ability to prepend a sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements of elements to itself."}],"title":"PrependableCollection","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrependableCollection"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/unapply(_:)":{"abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"kind":"symbol","title":"unapply(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"text":"(","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/conversions\/parser\/unapply(_:)"}}}