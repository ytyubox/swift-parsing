{"metadata":{"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","navigatorTitle":[{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"identifier"}],"externalID":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"identifier"}],"title":"Conversions.FixedWidthIntegerToBinaryFloatingPoint","roleHeading":"Structure","symbolKind":"struct","role":"symbol"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/apply(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/unapply(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/Conversion-Implementations"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:s17FixedWidthIntegerP","text":"FixedWidthInteger","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"BinaryFloatingPoint","preciseIdentifier":"s:SB","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually use","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property"},{"text":" operation, which constructs this type.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"],"type":"conformsTo"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint","interfaceLanguage":"swift"},"abstract":[{"text":"A conversion from an ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" to a ","type":"text"},{"type":"codeVoice","code":"Double"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/Conversion-Implementations":{"title":"Conversion Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/Conversion-Implementations","abstract":[],"type":"topic","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/conversion-implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","role":"symbol","title":"Conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/unapply(_:)":{"title":"unapply(_:)","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/unapply(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"}],"abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/unapply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/double-swift.type.property":{"url":"\/documentation\/parsing\/conversion\/double-swift.type.property","role":"symbol","title":"double","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"double","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.FixedWidthIntegerToBinaryFloatingPoint<Int, Double>"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"A conversion from an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" to a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":"."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/apply(_:)":{"title":"apply(_:)","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/apply(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/apply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint":{"url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FixedWidthIntegerToBinaryFloatingPoint"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FixedWidthIntegerToBinaryFloatingPoint"}],"title":"Conversions.FixedWidthIntegerToBinaryFloatingPoint","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint","abstract":[{"type":"text","text":"A conversion from an "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" to a "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}]}}}