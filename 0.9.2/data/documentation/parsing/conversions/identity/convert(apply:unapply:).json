{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing13AnyConversionV","text":"AnyConversion"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]}]},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that attempts to convert an input into an output. ","type":"text"},{"type":"codeVoice","code":"apply"},{"text":" is executed","type":"text"},{"text":" ","type":"text"},{"text":"each time the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity\/apply(_:)"},{"text":" method is called on the resulting conversion. If the closure","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}],"type":"paragraph"}],"name":"apply"},{"content":[{"inlineContent":[{"text":"A closure that attempts to convert an output into an input. ","type":"text"},{"code":"unapply","type":"codeVoice"},{"text":" is executed","type":"text"},{"text":" ","type":"text"},{"text":"each time the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity\/unapply(_:)","isActive":true,"type":"reference"},{"text":" method is called on the resulting conversion. If the closure","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}],"type":"paragraph"}],"name":"unapply"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Useful for experimenting with conversions in a lightweight manner, without the ceremony of","type":"text"},{"text":" ","type":"text"},{"text":"defining a dedicated type.","type":"text"}]},{"type":"codeListing","code":["struct Amount {","  var cents: Int","}","","let amount = Parse(","  .convert(","    apply: { dollars, cents in Amount(cents: dollars * 100 + cents) },","    unapply: { amount in amount.cents.quotientAndRemainder(dividingBy: 100) }","  )",") {","  Digits()","  \".\"","  Digits(2)","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If performance is a concern, you should define a custom type that conforms to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},{"text":" ","type":"text"},{"text":"instead, which avoids the overhead of escaping closures, gives the compiler the ability to","type":"text"},{"text":" ","type":"text"},{"text":"better optimize, and puts your in a better position to test the conversion.","type":"text"}]},{"type":"codeListing","code":["struct AmountConversion: Conversion {","  func apply(_ dollarsAndCents: (Int, Int)) -> Amount {","    return Amount(cents: dollarsAndCents.0 * 100 + dollarsAndCents.1)","  }","","  func unapply(_ amount: Amount) -> (Int, Int) {","    amount.cents.quotientAndRemainder(dividingBy: 100)","  }","}","","let amount = Parse(AmountConversion()) {","  Digits()","  \".\"","  Digits(2)","}"],"syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"A conversion that invokes the given apply and unapply functions.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/conversions\/identity\/convert(apply:unapply:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity\/convert(apply:unapply:)"},"metadata":{"externalID":"s:7Parsing10ConversionPAAE7convert5apply7unapplyAA03AnyB0Vyqd__qd_0_Gqd_0_Sgqd__c_qd__Sgqd_0_ctAIRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO8IdentityV","extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"Parsing"}],"title":"convert(apply:unapply:)","roleHeading":"Type Method","symbolKind":"method","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity\/Conversion-Implementations"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Identity/convert(apply:unapply:)":{"abstract":[{"type":"text","text":"A conversion that invokes the given apply and unapply functions."}],"title":"convert(apply:unapply:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity\/convert(apply:unapply:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/conversions\/identity\/convert(apply:unapply:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Identity/Conversion-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity\/Conversion-Implementations","abstract":[],"role":"collectionGroup","type":"topic","title":"Conversion Implementations","url":"\/documentation\/parsing\/conversions\/identity\/conversion-implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Identity":{"url":"\/documentation\/parsing\/conversions\/identity","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Identity"}],"navigatorTitle":[{"kind":"identifier","text":"Identity"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity","title":"Conversions.Identity","kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A type-erased ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","isActive":true},{"type":"text","text":"."}],"type":"topic","role":"symbol","title":"AnyConversion","navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion","url":"\/documentation\/parsing\/anyconversion"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Identity/unapply(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity\/unapply(_:)","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"role":"symbol","type":"topic","title":"unapply(_:)","url":"\/documentation\/parsing\/conversions\/identity\/unapply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Identity/apply(_:)":{"title":"apply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/parsing\/conversions\/identity\/apply(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity\/apply(_:)","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","role":"symbol","title":"Conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]}}}