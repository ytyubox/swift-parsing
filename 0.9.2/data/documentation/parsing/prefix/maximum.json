{"variants":[{"paths":["\/documentation\/parsing\/prefix\/maximum"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maximum","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximum","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"title":"maximum","roleHeading":"Instance Property","symbolKind":"property","role":"symbol","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6PrefixV7maximumSiSgvp","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximum","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/prefix","type":"topic","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"title":"Prefix","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/maximum":{"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/prefix\/maximum","title":"maximum","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maximum","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximum","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"}}}