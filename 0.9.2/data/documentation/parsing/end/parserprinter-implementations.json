{"sections":[],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/ParserPrinter-Implementations"},"metadata":{"modules":[{"name":"Parsing"}],"role":"collectionGroup","title":"ParserPrinter Implementations"},"variants":[{"paths":["\/documentation\/parsing\/end\/parserprinter-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"]]},"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/print()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/print(into:)"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/End/eraseToAnyParserPrinter()":{"title":"eraseToAnyParserPrinter()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/eraseToAnyParserPrinter()","role":"symbol","url":"\/documentation\/parsing\/end\/erasetoanyparserprinter()","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End/print()":{"abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/print()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/end\/print()","title":"print()","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End/print(into:)":{"url":"\/documentation\/parsing\/end\/print(into:)","abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/print(into:)","kind":"symbol","role":"symbol","title":"print(into:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","navigatorTitle":[{"kind":"identifier","text":"End"}],"url":"\/documentation\/parsing\/end","title":"End","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"type":"topic","abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/End/print(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/print(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"url":"\/documentation\/parsing\/end\/print(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","title":"print(_:)","type":"topic","abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}]}}}