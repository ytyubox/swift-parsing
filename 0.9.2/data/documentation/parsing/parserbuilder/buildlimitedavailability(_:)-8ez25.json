{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildLimitedAvailability"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"? "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","text":"Parser"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Provides support for ","type":"text"},{"type":"codeVoice","code":"if #available"},{"text":" statements in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"},{"text":" blocks, producing an","type":"text"},{"text":" ","type":"text"},{"text":"optional parser.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"metadata":{"role":"symbol","title":"buildLimitedAvailability(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildLimitedAvailability","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?"}],"modules":[{"name":"Parsing"}],"roleHeading":"Type Method","externalID":"s:7Parsing13ParserBuilderO24buildLimitedAvailabilityyxSgAeA0B0RzlFZ","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/buildLimitedAvailability(_:)-8ez25"},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/buildlimitedavailability(_:)-8ez25"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/buildLimitedAvailability(_:)-8ez25":{"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/buildlimitedavailability(_:)-8ez25","abstract":[{"text":"Provides support for ","type":"text"},{"type":"codeVoice","code":"if #available"},{"text":" statements in ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"},{"text":" blocks, producing an","type":"text"},{"text":" ","type":"text"},{"text":"optional parser.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildLimitedAvailability","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/buildLimitedAvailability(_:)-8ez25","kind":"symbol","type":"topic","title":"buildLimitedAvailability(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"type":"topic","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"title":"Parse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parse","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"title":"ParserBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"topic","kind":"symbol","role":"symbol"}}}