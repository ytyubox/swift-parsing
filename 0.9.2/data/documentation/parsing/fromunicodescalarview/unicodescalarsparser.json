{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView"]]},"metadata":{"role":"symbol","platforms":[],"externalID":"s:7Parsing21FromUnicodeScalarViewV20unicodeScalarsParserq_vp","symbolKind":"property","modules":[{"name":"Parsing"}],"title":"unicodeScalarsParser","roleHeading":"Instance Property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeScalarsParser","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnicodeScalarsParser","kind":"typeIdentifier"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","deprecationSummary":[{"inlineContent":[{"text":"Use 'From(.unicodeScalars)' instead.","type":"text"}],"type":"paragraph"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeScalarsParser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnicodeScalarsParser"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fromunicodescalarview\/unicodescalarsparser"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView\/unicodeScalarsParser","interfaceLanguage":"swift"},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"url":"\/documentation\/parsing\/fromunicodescalarview","navigatorTitle":[{"kind":"identifier","text":"FromUnicodeScalarView"}],"deprecated":true,"kind":"symbol","title":"FromUnicodeScalarView","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUnicodeScalarView"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView/unicodeScalarsParser":{"url":"\/documentation\/parsing\/fromunicodescalarview\/unicodescalarsparser","deprecated":true,"kind":"symbol","title":"unicodeScalarsParser","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView\/unicodeScalarsParser","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"unicodeScalarsParser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnicodeScalarsParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"}}}