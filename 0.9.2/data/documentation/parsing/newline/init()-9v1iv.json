{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}]}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'Whitespace(1, .vertical)' instead"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-9v1iv","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Parsing","symbolKind":"init","platforms":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" is "},{"code":"Conversions.Identity<Substring.UTF8View>","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"modules":[{"name":"Parsing"}],"roleHeading":"Initializer","externalID":"s:7Parsing7NewlineVA2A11ConversionsO8IdentityVy_Ss8UTF8ViewVGRszrlEACyAJGycfc","title":"init()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/newline\/init()-9v1iv"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"role":"symbol","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"abstract":[],"deprecated":true,"title":"Newline","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","url":"\/documentation\/parsing\/newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-9v1iv":{"kind":"symbol","deprecated":true,"abstract":[],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.Identity<Substring.UTF8View>"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/newline\/init()-9v1iv","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-9v1iv","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"}}}