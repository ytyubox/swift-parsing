{"metadata":{"role":"symbol","roleHeading":"Enumeration","externalID":"s:7Parsing7ParsersO","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"symbolKind":"enum","title":"Parsers","modules":[{"name":"Parsing"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"],"title":"Enumerations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The various operators defined as extensions on "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" implement their functionality as"},{"type":"text","text":" "},{"type":"text","text":"classes or structures that extend this enumeration. For example, the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","isActive":true},{"text":" ","type":"text"},{"text":"operator returns a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map"},{"text":" parser.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConversion":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapConversion"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MapConversion"}],"title":"Parsers.MapConversion","role":"symbol","url":"\/documentation\/parsing\/parsers\/mapconversion","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given conversion."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"role":"symbol","title":"Parsers.FlatMap","abstract":[{"type":"text","text":"A parser that transforms the output of another parser into a new parser."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}],"navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","kind":"symbol","url":"\/documentation\/parsing\/parsers\/flatmap"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntParser","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"IntParser","kind":"identifier"}],"title":"Parsers.IntParser","role":"symbol","url":"\/documentation\/parsing\/parsers\/intparser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"type":"codeVoice","code":"+"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":" sign for signed integer"},{"type":"text","text":" "},{"text":"types) from the beginning of a collection of UTF8 code units.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/End":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/end","abstract":[],"title":"Parsers.End","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","navigatorTitle":[{"text":"End","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Fail":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","navigatorTitle":[{"kind":"identifier","text":"Fail"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fail"}],"title":"Parsers.Fail","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/parsers\/fail","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Identity":{"type":"topic","url":"\/documentation\/parsing\/parsers\/identity","abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Identity","kind":"identifier"}],"title":"Parsers.Identity","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Identity","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Lazy":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","navigatorTitle":[{"kind":"identifier","text":"Lazy"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"title":"Parsers.Lazy","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/parsers\/lazy","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Print":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","navigatorTitle":[{"kind":"identifier","text":"Print"}],"title":"Parsers.Print","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Print"}],"url":"\/documentation\/parsing\/parsers\/print","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}],"title":"Parsers.CaseIterableRawRepresentableParser","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixThrough":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"title":"Parsers.PrefixThrough","url":"\/documentation\/parsing\/parsers\/prefixthrough","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Prefix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"title":"Parsers.Prefix","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/parsers\/prefix","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","navigatorTitle":[{"text":"MapConstant","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapConstant","kind":"identifier"}],"title":"Parsers.MapConstant","url":"\/documentation\/parsing\/parsers\/mapconstant","abstract":[{"type":"text","text":"A parser that replaces another parser’s "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output with some new output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixUpTo":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"url":"\/documentation\/parsing\/parsers\/prefixupto","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","title":"Parsers.PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Map","kind":"identifier"}],"title":"Parsers.Map","role":"symbol","navigatorTitle":[{"text":"Map","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given closure."}],"url":"\/documentation\/parsing\/parsers\/map","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/TryPrint":{"type":"topic","title":"Parsers.TryPrint","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"TryPrint"}],"abstract":[],"url":"\/documentation\/parsing\/parsers\/tryprint","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TryPrint"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Many":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","abstract":[],"role":"symbol","type":"topic","title":"Parsers.Many","navigatorTitle":[{"kind":"identifier","text":"Many"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/many"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Whitespace":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/whitespace","abstract":[],"title":"Parsers.Whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Rest":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Rest"}],"url":"\/documentation\/parsing\/parsers\/rest","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","title":"Parsers.Rest"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Newline":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Newline"}],"url":"\/documentation\/parsing\/parsers\/newline","deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","title":"Parsers.Newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"type":"topic","title":"Parsers.ReplaceError","url":"\/documentation\/parsing\/parsers\/replaceerror","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}],"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReplaceError"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}],"url":"\/documentation\/parsing\/parsers\/optionalvoid","abstract":[{"type":"text","text":"A parser that attempts to run a given void parser, succeeding with void."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","title":"Parsers.OptionalVoid","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Always":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Always"}],"url":"\/documentation\/parsing\/parsers\/always","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","title":"Parsers.Always"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"role":"symbol","type":"topic","title":"Parsers.OneOfMany","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/oneofmany","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OverridePrinting":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OverridePrinting","kind":"identifier"}],"title":"Parsers.OverridePrinting","url":"\/documentation\/parsing\/parsers\/overrideprinting","role":"symbol","abstract":[{"text":"A parser-printer that parses with the given parser and prints with the given parser-printer.","type":"text"}],"navigatorTitle":[{"text":"OverridePrinting","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"type":"topic","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"url":"\/documentation\/parsing\/parsers","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"title":"Parsers.UUIDParser","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/uuidparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","navigatorTitle":[{"kind":"identifier","text":"UUIDParser"}],"type":"topic","abstract":[{"text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"title":"Parsers.Conditional","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"abstract":[{"text":"A parser that can parse output from two types of parsers.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/conditional","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Skip":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Skip"}],"url":"\/documentation\/parsing\/parsers\/skip","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","title":"Parsers.Skip"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"title":"Parsers.BoolParser","abstract":[{"text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BoolParser","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","url":"\/documentation\/parsing\/parsers\/boolparser","role":"symbol","navigatorTitle":[{"text":"BoolParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"kind":"symbol","abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"navigatorTitle":[{"text":"Filter","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/filter","title":"Parsers.Filter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","title":"Parsers.Stream","url":"\/documentation\/parsing\/parsers\/stream","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pipe","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Pipe","kind":"identifier"}],"title":"Parsers.Pipe","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/pipe","abstract":[{"text":"A parser that runs this parser, pipes its output into the given parser, and returns the output","type":"text"},{"text":" ","type":"text"},{"text":"of the given parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"type":"topic","navigatorTitle":[{"text":"CompactMap","kind":"identifier"}],"title":"Parsers.CompactMap","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CompactMap","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","abstract":[{"text":"A parser that outputs the non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" result of calling the given transformation with the output","type":"text"},{"text":" ","type":"text"},{"text":"of its upstream parser.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/compactmap","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/StartsWith":{"role":"symbol","title":"Parsers.StartsWith","abstract":[],"url":"\/documentation\/parsing\/parsers\/startswith","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"navigatorTitle":[{"kind":"identifier","text":"StartsWith"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/AnyParser":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"url":"\/documentation\/parsing\/parsers\/anyparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","title":"Parsers.AnyParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/First":{"role":"symbol","kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"First"}],"url":"\/documentation\/parsing\/parsers\/first","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","title":"Parsers.First"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FloatParser"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatParser"}],"abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a collection of UTF-8","type":"text"},{"text":" ","type":"text"},{"text":"code units.","type":"text"}],"title":"Parsers.FloatParser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","url":"\/documentation\/parsing\/parsers\/floatparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","role":"symbol","navigatorTitle":[{"text":"Pullback","kind":"identifier"}],"abstract":[{"text":"Transforms the ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" of a downstream parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/pullback","title":"Parsers.Pullback"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-4hsj5":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parser\/map(_:)-4hsj5","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","title":"map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PipeEnd":{"title":"Parsers.PipeEnd","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PipeEnd","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","url":"\/documentation\/parsing\/parsers\/pipeend","role":"symbol","navigatorTitle":[{"text":"PipeEnd","kind":"identifier"}]}}}