{"abstract":[{"text":"Creates a parser that throws an error when it runs.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fail\/init()"]}],"metadata":{"extendedModule":"Parsing","title":"init()","externalID":"s:7Parsing4FailVACyxq_Gycfc","symbolKind":"init","role":"symbol","roleHeading":"Initializer","modules":[{"name":"Parsing"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}],"kind":"declarations"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"url":"\/documentation\/parsing\/fail","navigatorTitle":[{"kind":"identifier","text":"Fail"}],"kind":"symbol","title":"Fail","role":"symbol","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fail"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/init()":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/fail\/init()","abstract":[{"type":"text","text":"Creates a parser that throws an error when it runs."}],"title":"init()"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"}}}