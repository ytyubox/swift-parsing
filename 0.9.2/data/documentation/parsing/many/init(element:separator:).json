{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:separator:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A parser to run multiple times to accumulate into a result.","type":"text"}]}],"name":"element"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that consumes input between each parsed output."}]}],"name":"separator"}],"kind":"parameters"}],"metadata":{"symbolKind":"init","roleHeading":"Initializer","title":"init(element:separator:)","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:7Parsing4ManyVAASay6OutputQzGRs_AA6AlwaysVy5InputQzytGRs1_ytRs2_rlE7element9separatorACyxAFq0_AKytGxyXE_q0_yXEtcfc","role":"symbol","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}]},"variants":[{"paths":["\/documentation\/parsing\/many\/init(element:separator:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"]]},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(element:separator:)":{"type":"topic","url":"\/documentation\/parsing\/many\/init(element:separator:)","title":"init(element:separator:)","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:separator:)","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"title":"Many","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","url":"\/documentation\/parsing\/many","navigatorTitle":[{"kind":"identifier","text":"Many"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol"}}}