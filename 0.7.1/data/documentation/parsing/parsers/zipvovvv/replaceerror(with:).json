{"sections":[],"schemaVersion":{"minor":2,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"ReplaceError","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A parser that never fails."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"content":[{"inlineContent":[{"text":"An output to return should the upstream parser fail.","type":"text"}],"type":"paragraph"}],"name":"output"}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Useful for providing a default output for a parser."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, we could create a parser that parses a plus or minus sign and maps the result to"},{"type":"text","text":" "},{"type":"text","text":"a positive or negative multiplier respectively, or else defaults to a positive multiplier:"}],"type":"paragraph"},{"code":["let sign = OneOf {","  \"+\".map { 1 }","  \"-\".map { -1 }","}",".replaceError(with: 1)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Notably this parser is non-throwing:"}],"type":"paragraph"},{"code":["var input = \"-123\"[...]","","\/\/ No `try` required:","sign.parse(&input)  \/\/ -1","input               \/\/ \"123\"","","\/\/ Simply returns the default when parsing fails:","sign.parse(&input)  \/\/ 1"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"This means it can be used to turn throwing parsers into non-throwing ones, which is important","type":"text"},{"text":" ","type":"text"},{"text":"for building up complex parsers that cannot fail.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"title":"replaceError(with:)","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:7Parsing6ParserPAAE12replaceError4withAA7ParsersO07ReplaceD0Vy_xG6OutputQz_tF::SYNTHESIZED::s:7Parsing7ParsersO8ZipVOVVVV","extendedModule":"Parsing"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVVV\/replaceError(with:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVVV","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVVV\/Parser-Implementations"]]},"variants":[{"paths":["\/documentation\/parsing\/parsers\/zipvovvv\/replaceerror(with:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOVVV":{"abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVVV","url":"\/documentation\/parsing\/parsers\/zipvovvv","type":"topic","title":"Parsers.ZipVOVVV","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVOVVV","kind":"identifier"}],"navigatorTitle":[{"text":"ZipVOVVV","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOVVV/replaceError(with:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVVV\/replaceError(with:)","kind":"symbol","url":"\/documentation\/parsing\/parsers\/zipvovvv\/replaceerror(with:)","title":"replaceError(with:)","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"kind":"symbol","type":"topic","title":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[],"kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipVOVVV/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipVOVVV\/Parser-Implementations","type":"topic","role":"collectionGroup","abstract":[],"title":"Parser Implementations","url":"\/documentation\/parsing\/parsers\/zipvovvv\/parser-implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"title":"Parsers.ReplaceError","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","url":"\/documentation\/parsing\/parsers\/replaceerror","kind":"symbol"}}}