{"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/intparser"]}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntParser","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"FixedWidthInteger","kind":"typeIdentifier","preciseIdentifier":"s:s17FixedWidthIntegerP"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"UTF8","kind":"typeIdentifier","preciseIdentifier":"s:s4UTF8a"},{"text":".","kind":"text"},{"text":"CodeUnit","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually use","type":"text"},{"text":" ","type":"text"},{"text":"the static ","type":"text"},{"code":"parser()","type":"codeVoice"},{"text":" method on the ","type":"text"},{"code":"FixedWidthInteger","type":"codeVoice"},{"text":" of your choice, e.g. ","type":"text"},{"code":"Int.parser()","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"UInt8.parser()","type":"codeVoice"},{"text":", etc., all of which construct this type.","type":"text"}]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"major":0,"minor":2,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser"},"metadata":{"extendedModule":"Parsing","externalID":"s:7Parsing7ParsersO9IntParserV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"roleHeading":"Structure","modules":[{"name":"Parsing"}],"navigatorTitle":[{"kind":"identifier","text":"IntParser"}],"title":"Parsers.IntParser","symbolKind":"struct"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"code":"+","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"text":" sign) from the","type":"text"},{"text":" ","type":"text"},{"text":"beginning of a collection of UTF8 code units.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/init(isSigned:radix:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/isSigned","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/radix"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/Parser-Implementations"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/isSigned":{"type":"topic","url":"\/documentation\/parsing\/parsers\/intparser\/issigned","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isSigned","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","title":"isSigned","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/isSigned","abstract":[{"text":"If the parser will attempt to parse a leading ","type":"text"},{"code":"+","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"text":" sign.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","title":"Parser","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/init(isSigned:radix:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"isSigned"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"radix"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/intparser\/init(issigned:radix:)","kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/init(isSigned:radix:)","title":"init(isSigned:radix:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"kind":"symbol","type":"topic","title":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/radix":{"abstract":[{"text":"The radix, or base, to use for converting text to an integer value.","type":"text"}],"role":"symbol","title":"radix","url":"\/documentation\/parsing\/parsers\/intparser\/radix","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/radix","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"radix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/parse(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/intparser\/parse(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/parse(_:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"title":"Parsers.IntParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/intparser","abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"code":"+","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"type":"text","text":" sign) from the"},{"type":"text","text":" "},{"type":"text","text":"beginning of a collection of UTF8 code units."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IntParser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/Parser-Implementations":{"title":"Parser Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/parsers\/intparser\/parser-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/Parser-Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[],"kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing"}}}