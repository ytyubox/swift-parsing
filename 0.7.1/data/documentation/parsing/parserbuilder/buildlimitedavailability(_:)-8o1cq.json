{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildLimitedAvailability"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"OptionalVoid","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"languages":["swift"]}]}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/buildLimitedAvailability(_:)-8o1cq"},"schemaVersion":{"major":0,"patch":0,"minor":2},"metadata":{"externalID":"s:7Parsing13ParserBuilderO24buildLimitedAvailabilityyAA7ParsersO12OptionalVoidVy_xGxSgAA0B0Rzyt6OutputRtzlFZ","roleHeading":"Type Method","title":"buildLimitedAvailability(_:)","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildLimitedAvailability"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV","kind":"typeIdentifier","text":"OptionalVoid"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/buildlimitedavailability(_:)-8o1cq"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Provides support for ","type":"text"},{"code":"if #available","type":"codeVoice"},{"text":" statements in ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","isActive":true,"type":"reference"},{"text":" blocks, producing a void","type":"text"},{"text":" ","type":"text"},{"text":"parser for a given void parser.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","title":"Parser","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"title":"Parsers.OptionalVoid","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/optionalvoid","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}],"navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run a given void parser, succeeding with void."}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"title":"ParserBuilder","abstract":[{"text":"A custom parameter attribute that constructs a parser that attempts to run a number of parsers,","type":"text"},{"text":" ","type":"text"},{"text":"one after the other, and accumulates their outputs.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/buildLimitedAvailability(_:)-8o1cq":{"title":"buildLimitedAvailability(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/buildlimitedavailability(_:)-8o1cq","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/buildLimitedAvailability(_:)-8o1cq","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildLimitedAvailability","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"OptionalVoid","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Provides support for "},{"type":"codeVoice","code":"if #available"},{"text":" statements in ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","isActive":true,"type":"reference"},{"text":" blocks, producing a void","type":"text"},{"text":" ","type":"text"},{"text":"parser for a given void parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[],"kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"kind":"symbol","type":"topic","title":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","url":"\/documentation\/parsing\/parsers"}}}