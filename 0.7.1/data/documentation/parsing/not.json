{"schemaVersion":{"patch":0,"minor":2,"major":0},"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships","type":"conformsTo"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/upstream"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/Parser-Implementations"],"generated":true}],"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/not"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","interfaceLanguage":"swift"},"metadata":{"title":"Not","roleHeading":"Structure","role":"symbol","externalID":"s:7Parsing3NotV","symbolKind":"struct","modules":[{"name":"Parsing"}],"navigatorTitle":[{"text":"Not","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"}]}]},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"For example:","type":"text"}]},{"code":["let uncommentedLine = Parse {","  Not { \"\/\/\" }","  PrefixUpTo(\"\\n\")","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will check the input doesn’t start with "},{"code":"\"\/\/\"","type":"codeVoice"},{"type":"text","text":", and if it doesn’t, it will return the whole"},{"type":"text","text":" "},{"type":"text","text":"input up to the first newline."}]}],"kind":"content"}],"abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Not/upstream":{"url":"\/documentation\/parsing\/not\/upstream","abstract":[],"role":"symbol","kind":"symbol","title":"upstream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/upstream","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upstream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[],"kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Not/Parser-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/Parser-Implementations","type":"topic","title":"Parser Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/not\/parser-implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","title":"Parser","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Not/parse(_:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/parse(_:)","url":"\/documentation\/parsing\/not\/parse(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Not"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","type":"topic","title":"Not","role":"symbol","url":"\/documentation\/parsing\/not","abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Not"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Not/init(_:)":{"url":"\/documentation\/parsing\/not\/init(_:)","title":"init(_:)","role":"symbol","abstract":[{"type":"text","text":"Creates a parser that succeeds if the given parser fails, and does not consume any input."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/init(_:)"}}}