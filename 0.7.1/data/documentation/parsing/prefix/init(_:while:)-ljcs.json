{"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","interfaceLanguage":"swift"},"metadata":{"role":"symbol","symbolKind":"init","title":"init(_:while:)","roleHeading":"Initializer","modules":[{"name":"Parsing"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")?)","kind":"text"}],"externalID":"s:7Parsing6PrefixV_5whileACyxGSi_Sb7ElementQzcSgtcfc"},"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")? = nil)"}]}]},{"parameters":[{"name":"length","content":[{"type":"paragraph","inlineContent":[{"text":"An exact number of elements to consume for parsing to be considered successful.","type":"text"}]}]},{"name":"predicate","content":[{"inlineContent":[{"type":"text","text":"An optional closure that takes an element of the input sequence as its argument"},{"type":"text","text":" "},{"type":"text","text":"and returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the element should be included or "},{"code":"false","type":"codeVoice"},{"type":"text","text":" if it should be excluded."},{"type":"text","text":" "},{"type":"text","text":"Once the predicate returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":" it will not be called again."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"syntax":"swift","code":["try Prefix(4, while: \\.isNumber).parse(\"123456\")  \/\/ \"1234\"","","try Prefix(4, while: \\.isNumber).parse(\"123\")","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | 123","\/\/   |    ^ expected 1 more element satisfying predicate"],"type":"codeListing"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-ljcs"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[],"kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","title":"Prefix","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"url":"\/documentation\/parsing\/prefix"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-ljcs":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","title":"init(_:while:)","url":"\/documentation\/parsing\/prefix\/init(_:while:)-ljcs","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}]}}}