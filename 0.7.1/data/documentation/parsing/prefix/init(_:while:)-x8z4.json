{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-x8z4"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"length","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"ClosedRange","preciseIdentifier":"s:SN","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")? = nil)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closed range that provides a minimum number and maximum of elements to consume"},{"type":"text","text":" "},{"type":"text","text":"for parsing to be considered successful."}],"type":"paragraph"}],"name":"length"},{"content":[{"inlineContent":[{"type":"text","text":"An optional closure that takes an element of the input sequence as its argument"},{"type":"text","text":" "},{"type":"text","text":"and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the element should be included or "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if it should be excluded."},{"type":"text","text":" "},{"type":"text","text":"Once the predicate returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" it will not be called again."}],"type":"paragraph"}],"name":"predicate"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["try Prefix(2...4, while: \\.isNumber).parse(\"123456\")  \/\/ \"1234\"","try Prefix(2...4, while: \\.isNumber).parse(\"123\")     \/\/ \"123\"","","try Prefix(2...4, while: \\.isNumber).parse(\"1\")","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | 1","\/\/   |  ^ expected 1 more element satisfying predicate"]}]}],"sections":[],"schemaVersion":{"major":0,"minor":2,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"metadata":{"externalID":"s:7Parsing6PrefixV_5whileACyxGSNySiG_Sb7ElementQzcSgtcfc","symbolKind":"init","modules":[{"name":"Parsing"}],"roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"role":"symbol","title":"init(_:while:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","title":"Prefix","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"url":"\/documentation\/parsing\/prefix"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[],"kind":"symbol","type":"topic","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-x8z4":{"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(_:while:)-x8z4","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")?)","kind":"text"}],"role":"symbol","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","title":"init(_:while:)"}}}