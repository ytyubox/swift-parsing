{"variants":[{"paths":["\/documentation\/parsing\/rest\/init()-9bc09"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Initializer","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"init","modules":[{"name":"Parsing"}],"role":"symbol","externalID":"s:7Parsing4RestVACyxGycfc"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest\/init()-9bc09","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"title":"Rest","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","url":"\/documentation\/parsing\/rest","role":"symbol","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Rest/init()-9bc09":{"abstract":[],"kind":"symbol","title":"init()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest\/init()-9bc09","role":"symbol","url":"\/documentation\/parsing\/rest\/init()-9bc09","fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"}}}