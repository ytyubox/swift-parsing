{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Initializer","title":"init()","externalID":"s:7Parsing5FirstVACyxGycfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","symbolKind":"init","modules":[{"name":"Parsing"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First\/init()-7nnzb"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/first\/init()-7nnzb"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/First/init()-7nnzb":{"url":"\/documentation\/parsing\/first\/init()-7nnzb","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First\/init()-7nnzb","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes the first element from a collection."}],"url":"\/documentation\/parsing\/first","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"navigatorTitle":[{"text":"First","kind":"identifier"}],"title":"First"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]}}}