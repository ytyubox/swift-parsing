{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/newline\/init()-3hk4u"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-3hk4u","interfaceLanguage":"swift"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'Whitespace(1, .vertical)' instead"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">() "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity","preciseIdentifier":"s:7Parsing11ConversionsO8IdentityV","text":"Identity"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4UTF8a","text":"UTF8"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","text":"CodeUnit"}]}]}],"metadata":{"roleHeading":"Initializer","externalID":"s:7Parsing7NewlineVACyAA11ConversionsO8IdentityVy_qd__GGycAHRszSlRd__11SubSequenceQyd__Rsd__s5UInt8V7ElementRtd__lufc","conformance":{"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Conversion"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Input"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Input.SubSequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Output.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"InputToBytes.Output.Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">()","kind":"text"}],"role":"symbol","platforms":[],"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"title":"init()"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Identity":{"navigatorTitle":[{"text":"Identity","kind":"identifier"}],"title":"Conversions.Identity","type":"topic","url":"\/documentation\/parsing\/conversions\/identity","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Identity","kind":"identifier"}],"role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-3hk4u":{"title":"init()","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Conversion"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"InputToBytes.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"InputToBytes.Input.SubSequence"},{"type":"text","text":", "},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Output.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"InputToBytes.Output.Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-3hk4u","abstract":[],"url":"\/documentation\/parsing\/newline\/init()-3hk4u","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">()","kind":"text"}],"deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"kind":"symbol","title":"Newline","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"url":"\/documentation\/parsing\/newline","deprecated":true,"abstract":[],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","url":"\/documentation\/parsing\/conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]}}}