{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/Parser-Implementations"]]},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV","text":"Pipe"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":">"}],"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","symbolKind":"method","role":"symbol","externalID":"s:7Parsing6ParserPAAE4pipeyAA7ParsersO4PipeVy_xqd__Gqd__yXEAaBRd__5InputQyd__6OutputRtzlF::SYNTHESIZED::s:7Parsing4PeekV","roleHeading":"Instance Method","title":"pipe(_:)"},"abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/pipe(_:)-359li"},"variants":[{"paths":["\/documentation\/parsing\/peek\/pipe(_:)-359li"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"build"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier","text":"Pipe","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A parser that pipes this parserâ€™s output into another parser.  @inlinable","type":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A parser that parses the output of this parser."}],"type":"paragraph"}],"name":"downstream"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, we can try to parse an integer of exactly 4 digits by piping the output of"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","type":"reference"},{"type":"text","text":" into an "},{"type":"codeVoice","code":"Int.parser()"},{"type":"text","text":":"}]},{"syntax":"swift","code":["let year = Prefix(4).pipe { Int.parser() }","","try year.parse(\"2022\")  \/\/ 2022","try year.parse(\"0123\")  \/\/ 123"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This parser fails if either the upstream or downstream parser fails. For example:","type":"text"}]},{"syntax":"swift","code":["try year.parse(\"123\")","\/\/ error: unexpected input","\/\/  --> input:1:4","\/\/ 1 | 123","\/\/   |    ^ expected 1 more element","","try year.parse(\"fail!\")","\/\/ error: unexpected input","\/\/  --> input:1:1-4","\/\/ 1 | fail!","\/\/   | ^^^^ pipe: expected integer"],"type":"codeListing"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Peek/pipe(_:)-359li":{"url":"\/documentation\/parsing\/peek\/pipe(_:)-359li","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Pipe","preciseIdentifier":"s:7Parsing7ParsersO4PipeV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"text":"the output of the given parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/pipe(_:)-359li","title":"pipe(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek/Parser-Implementations":{"title":"Parser Implementations","type":"topic","url":"\/documentation\/parsing\/peek\/parser-implementations","kind":"article","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"type":"topic","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"url":"\/documentation\/parsing\/prefix","kind":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"title":"Prefix","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}],"kind":"symbol","title":"Peek","navigatorTitle":[{"text":"Peek","kind":"identifier"}],"url":"\/documentation\/parsing\/peek","abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"title":"Parsers.Pipe","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/pipe","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"role":"symbol","type":"topic","title":"Parsers","url":"\/documentation\/parsing\/parsers","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}]}}}