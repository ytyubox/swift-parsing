{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVO","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVO\/Parser-Implementations"]]},"metadata":{"externalID":"s:7Parsing6ParserPAAE3mapyAA7ParsersO11MapConstantVy_xqd__Gqd__yXEyt6OutputRtzlF::SYNTHESIZED::s:7Parsing13ParserBuilderO8ZipOVVVOV","symbolKind":"method","extendedModule":"Parsing","roleHeading":"Instance Method","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","text":"MapConstant"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"role":"symbol","modules":[{"name":"Parsing"}]},"abstract":[{"type":"text","text":"Returns a parser that replaces the "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" output of this parser with the output of a given"},{"type":"text","text":" "},{"type":"text","text":"closure."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipovvvo\/map(_:)-6pd5b"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","kind":"typeIdentifier","text":"MapConstant"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"}],"languages":["swift"]}]},{"content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A parser of outputs."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"name":"transform","content":[{"inlineContent":[{"text":"A closure that returns an output.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A printer-friendly version of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-2e6si"},{"type":"text","text":" for "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" outputs, so long as"},{"type":"text","text":" "},{"code":"NewOutput","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":"."}]},{"code":["enum Role: String {","  case admin","  case guest","  case member","}","","let role = OneOf {","  \"admin\".map { Role.admin }","  \"guest\".map { Role.guest }","  \"member\".map { Role.member }","}","","try role.parse(\"admin\")  \/\/ Role.admin","role.print(.guest)       \/\/ \"guest\""],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVO\/map(_:)-6pd5b"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"type":"topic","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parse","kind":"symbol","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"title":"Parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVVVO/Parser-Implementations":{"type":"topic","kind":"article","title":"Parser Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVO\/Parser-Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipovvvo\/parser-implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVVVO":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVO","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"ZipOVVVO","kind":"identifier"}],"abstract":[],"title":"ParserBuilder.ZipOVVVO","url":"\/documentation\/parsing\/parserbuilder\/zipovvvo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOVVVO","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"role":"symbol","type":"topic","title":"Parsers","url":"\/documentation\/parsing\/parsers","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","role":"symbol","abstract":[{"text":"A parser that replaces another parserâ€™s ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" output with some new output.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/mapconstant","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapConstant","kind":"identifier"}],"navigatorTitle":[{"text":"MapConstant","kind":"identifier"}],"title":"Parsers.MapConstant"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-2e6si":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-2e6si","role":"symbol","abstract":[{"text":"Returns a parser that replaces the ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" output of this parser with the output of a given","type":"text"},{"text":" ","type":"text"},{"text":"closure.","type":"text"}],"url":"\/documentation\/parsing\/parser\/map(_:)-2e6si","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","text":"MapConstant","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVVVO/map(_:)-6pd5b":{"type":"topic","abstract":[{"text":"Returns a parser that replaces the ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" output of this parser with the output of a given","type":"text"},{"type":"text","text":" "},{"type":"text","text":"closure."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MapConstant","preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVO\/map(_:)-6pd5b","title":"map(_:)","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipovvvo\/map(_:)-6pd5b"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"role":"symbol","type":"topic","title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}]}}}