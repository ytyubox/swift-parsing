{"sections":[],"abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A nebulous, mutable piece of data to be incrementally printed into.","type":"text"}]}],"name":"input"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvvvv\/print(into:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVV","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVV\/ParserPrinter-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVV\/print(into:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:7Parsing13ParserPrinterPAAyt6OutputRtzrlE5print4intoy5InputQzz_tKF::SYNTHESIZED::s:7Parsing13ParserBuilderO7ZipVVVVV","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Parsing"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"title":"print(into:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","extendedModule":"Parsing"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"role":"symbol","type":"topic","title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVV":{"url":"\/documentation\/parsing\/parserbuilder\/zipvvvv","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVVVV","kind":"identifier"}],"type":"topic","title":"ParserBuilder.ZipVVVV","role":"symbol","navigatorTitle":[{"text":"ZipVVVV","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVV"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVV/print(into:)":{"abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVV\/print(into:)","url":"\/documentation\/parsing\/parserbuilder\/zipvvvv\/print(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"title":"print(into:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVV/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/parserbuilder\/zipvvvv\/parserprinter-implementations","abstract":[],"type":"topic","title":"ParserPrinter Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVV\/ParserPrinter-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"type":"topic","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parse","kind":"symbol","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"title":"Parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"}}}