{"metadata":{"title":"print(into:)","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"role":"symbol","externalID":"s:7Parsing13ParserPrinterPAAyt6OutputRtzrlE5print4intoy5InputQzz_tKF::SYNTHESIZED::s:7Parsing13ParserBuilderO8ZipVOVVVV","symbolKind":"method","conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"roleHeading":"Instance Method"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"input","content":[{"type":"paragraph","inlineContent":[{"text":"A nebulous, mutable piece of data to be incrementally printed into.","type":"text"}]}]}],"kind":"parameters"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipvovvv\/print(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVVV","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVVV\/ParserPrinter-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVVV\/print(into:)"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"role":"symbol","type":"topic","title":"ParserBuilder","url":"\/documentation\/parsing\/parserbuilder","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVVV/print(into:)":{"abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"kind":"symbol","type":"topic","title":"print(into:)","url":"\/documentation\/parsing\/parserbuilder\/zipvovvv\/print(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVVV\/print(into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVVV/ParserPrinter-Implementations":{"abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVVV\/ParserPrinter-Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/parserbuilder\/zipvovvv\/parserprinter-implementations","title":"ParserPrinter Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVVV":{"title":"ParserBuilder.ZipVOVVV","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVVV","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvovvv","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVOVVV","kind":"identifier"}],"navigatorTitle":[{"text":"ZipVOVVV","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"type":"topic","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"url":"\/documentation\/parsing\/parse","kind":"symbol","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"title":"Parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"}}}