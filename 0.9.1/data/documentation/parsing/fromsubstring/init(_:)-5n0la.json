{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-5n0la"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring"]]},"metadata":{"title":"init(_:)","extendedModule":"Parsing","platforms":[],"roleHeading":"Initializer","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"type":"text","text":", "},{"type":"codeVoice","code":"SubstringParser"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and "},{"code":"SubstringParser.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","modules":[{"name":"Parsing"}],"symbolKind":"init","externalID":"s:7Parsing13FromSubstringVAAs10ArraySliceVys5UInt8VGRszrlEyACyAHq_Gq_yXEcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":")"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"build"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"text":")","kind":"text"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/fromsubstring\/init(_:)-5n0la"],"traits":[{"interfaceLanguage":"swift"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'From(.substring)' instead."}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"}],"kind":"symbol","title":"FromSubstring","navigatorTitle":[{"text":"FromSubstring","kind":"identifier"}],"url":"\/documentation\/parsing\/fromsubstring","deprecated":true,"abstract":[],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/init(_:)-5n0la":{"title":"init(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-5n0la","url":"\/documentation\/parsing\/fromsubstring\/init(_:)-5n0la","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SubstringParser","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"SubstringParser.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","abstract":[],"deprecated":true,"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"SubstringParser","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]}}}