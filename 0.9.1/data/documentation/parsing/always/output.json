{"metadata":{"modules":[{"name":"Parsing"}],"role":"symbol","title":"output","externalID":"s:7Parsing6AlwaysV6outputq_vp","roleHeading":"Instance Property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Output"}],"symbolKind":"property"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/always\/output"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Output"}]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/output"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Always/output":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/output","kind":"symbol","url":"\/documentation\/parsing\/always\/output","type":"topic","role":"symbol","abstract":[],"title":"output","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Output"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"kind":"symbol","title":"Always","navigatorTitle":[{"text":"Always","kind":"identifier"}],"url":"\/documentation\/parsing\/always","abstract":[{"text":"A parser that always succeeds with the given value, and does not consume any input.","type":"text"}],"type":"topic"}}}