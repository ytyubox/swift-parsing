{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","metadata":{"externalID":"s:7Parsing21FromUnicodeScalarViewV20unicodeScalarsParserq_vp","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeScalarsParser","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnicodeScalarsParser","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"Parsing"}],"roleHeading":"Instance Property","platforms":[],"symbolKind":"property","title":"unicodeScalarsParser"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fromunicodescalarview\/unicodescalarsparser"]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use 'From(.unicodeScalars)' instead.","type":"text"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeScalarsParser","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnicodeScalarsParser","kind":"typeIdentifier"}],"platforms":["Linux"]}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView\/unicodeScalarsParser","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"kind":"symbol","title":"FromUnicodeScalarView","navigatorTitle":[{"text":"FromUnicodeScalarView","kind":"identifier"}],"url":"\/documentation\/parsing\/fromunicodescalarview","deprecated":true,"abstract":[],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView/unicodeScalarsParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView\/unicodeScalarsParser","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeScalarsParser","kind":"identifier"},{"text":": ","kind":"text"},{"text":"UnicodeScalarsParser","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/fromunicodescalarview\/unicodescalarsparser","kind":"symbol","role":"symbol","title":"unicodeScalarsParser","abstract":[],"type":"topic","deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"}}}