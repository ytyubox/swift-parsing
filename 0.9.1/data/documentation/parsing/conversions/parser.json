{"abstract":[{"type":"text","text":"A conversion from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"type":"text","text":"’s input to its output."}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"],"title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/parser"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations"],"title":"Default Implementations"}],"metadata":{"externalID":"s:7Parsing11ConversionsO6ParserV","title":"Conversions.Parser","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"modules":[{"name":"Parsing"}],"role":"symbol","extendedModule":"Parsing","symbolKind":"struct","navigatorTitle":[{"text":"Parser","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/parsing\/conversions\/parser"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing13ParserPrinterP","text":"ParserPrinter"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing21PrependableCollectionP","text":"PrependableCollection"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"code":"Conversion\/parse(_:)-swift.type.method","type":"codeVoice"},{"type":"text","text":" operation, which constructs this type."}],"type":"paragraph"}]}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"title":"PrependableCollection","url":"\/documentation\/parsing\/prependablecollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","url":"\/documentation\/parsing\/conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/apply(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"type":"topic","title":"apply(_:)","url":"\/documentation\/parsing\/conversions\/parser\/apply(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/parser":{"kind":"symbol","title":"parser","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/parser","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"role":"symbol","url":"\/documentation\/parsing\/conversions\/parser\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/init(parser:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"title":"init(parser:)","kind":"symbol","url":"\/documentation\/parsing\/conversions\/parser\/init(parser:)","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"role":"symbol","title":"ParserPrinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/unapply(_:)":{"url":"\/documentation\/parsing\/conversions\/parser\/unapply(_:)","role":"symbol","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"title":"unapply(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/Conversion-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations","type":"topic","kind":"article","role":"collectionGroup","title":"Conversion Implementations","url":"\/documentation\/parsing\/conversions\/parser\/conversion-implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"role":"symbol","title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser","type":"topic","kind":"symbol","role":"symbol","title":"Conversions.Parser","url":"\/documentation\/parsing\/conversions\/parser","abstract":[{"text":"A conversion from a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"reference","isActive":true},{"type":"text","text":"’s input to its output."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}]}}}