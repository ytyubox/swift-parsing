{"variants":[{"paths":["\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/apply(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A transformed output value.","type":"text"}]}]},{"kind":"parameters","parameters":[{"name":"input","content":[{"inlineContent":[{"type":"text","text":"An input value."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","type":"reference","isActive":true},{"type":"text","text":" for the reverse process."}]}]}],"kind":"symbol","metadata":{"modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"apply(_:)","externalID":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV5applyyq_xF"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/apply(_:)"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint/apply(_:)":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint\/apply(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint\/apply(_:)","title":"apply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Attempts to transform an input into an output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FixedWidthIntegerToBinaryFloatingPoint":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/conversions\/fixedwidthintegertobinaryfloatingpoint","role":"symbol","navigatorTitle":[{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FixedWidthIntegerToBinaryFloatingPoint","title":"Conversions.FixedWidthIntegerToBinaryFloatingPoint","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"identifier"}],"abstract":[{"type":"text","text":"A conversion from an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" to a "},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"required":true,"role":"symbol","title":"apply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"type":"topic","url":"\/documentation\/parsing\/conversion\/apply(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","url":"\/documentation\/parsing\/conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"}}}