{"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/Conversion-Implementations","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/bytestodata\/conversion-implementations"]}],"metadata":{"modules":[{"name":"Parsing"}],"title":"Conversion Implementations","role":"collectionGroup"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/json(_:decoder:encoder:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/lossless(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/representing(_:)"],"generated":true},{"title":"Type Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/data-6aah6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/data-fq1i"],"generated":true},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/case(_:)-1rax7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/case(_:)-7aheb","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/convert(apply:unapply:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/memberwise(_:)"],"generated":true}],"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/case(_:)-7aheb":{"url":"\/documentation\/parsing\/conversions\/bytestodata\/case(_:)-7aheb","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/case(_:)-7aheb","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"case(_:)","type":"topic","abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"text":"associated values.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/memberwise(_:)":{"title":"memberwise(_:)","abstract":[{"type":"text","text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a"},{"type":"text","text":" "},{"type":"text","text":"memberwise initializer."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/memberwise(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memberwise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Struct"},{"kind":"text","text":">(("},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Struct","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/conversions\/bytestodata\/memberwise(_:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/lossless(_:)":{"title":"lossless(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lossless","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO18FromLosslessStringV","text":"FromLosslessString"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">>"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/lossless(_:)","role":"symbol","kind":"symbol","abstract":[{"text":"Transforms this conversion to a string into a conversion to the given lossless","type":"text"},{"text":" ","type":"text"},{"text":"string-convertible type.","type":"text"}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/lossless(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/representing(_:)":{"title":"representing(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO12FromRawValueV","text":"FromRawValue","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/representing(_:)","abstract":[{"type":"text","text":"Transforms this conversion to a raw value into a conversion to the given raw representable"},{"type":"text","text":" "},{"type":"text","text":"type."}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/representing(_:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/data-fq1i":{"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","text":"BytesToData","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s10ArraySliceV","text":"ArraySlice","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.BytesToData<ArraySlice<UInt8>>"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","title":"data","url":"\/documentation\/parsing\/conversions\/bytestodata\/data-fq1i","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/data-fq1i","abstract":[{"text":"A conversion from ","type":"text"},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"text":" to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"title":"PrependableCollection","url":"\/documentation\/parsing\/prependablecollection","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/case(_:)-1rax7":{"url":"\/documentation\/parsing\/conversions\/bytestodata\/case(_:)-1rax7","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/case(_:)-1rax7","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"case(_:)","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData":{"abstract":[{"type":"text","text":"A conversion from a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","isActive":true},{"type":"text","text":" of UTF-8 bytes to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"BytesToData","kind":"identifier"}],"title":"Conversions.BytesToData","type":"topic","url":"\/documentation\/parsing\/conversions\/bytestodata","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BytesToData","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/map(_:)":{"title":"map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/map(_:)","role":"symbol","kind":"symbol","abstract":[{"text":"Returns a conversion that transforms the output of this conversion with a given downstream","type":"text"},{"text":" ","type":"text"},{"text":"conversion.","type":"text"}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","url":"\/documentation\/parsing\/conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/convert(apply:unapply:)":{"url":"\/documentation\/parsing\/conversions\/bytestodata\/convert(apply:unapply:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"text":"Input","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"convert(apply:unapply:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/convert(apply:unapply:)","abstract":[{"type":"text","text":"A conversion that invokes the given apply and unapply functions."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/json(_:decoder:encoder:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"json","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO4JSONV","text":"JSON","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":" into a conversion to the given codable type.","type":"text"}],"url":"\/documentation\/parsing\/conversions\/bytestodata\/json(_:decoder:encoder:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/json(_:decoder:encoder:)","title":"json(_:decoder:encoder:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData/data-6aah6":{"url":"\/documentation\/parsing\/conversions\/bytestodata\/data-6aah6","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData\/data-6aah6","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","text":"BytesToData","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"data","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.BytesToData<Substring.UTF8View>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","abstract":[{"type":"text","text":"A conversion from "},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}]}}}