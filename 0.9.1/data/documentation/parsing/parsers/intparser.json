{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/init(radix:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/radix"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/ParserPrinter-Implementations"],"generated":true}],"metadata":{"externalID":"s:7Parsing7ParsersO9IntParserV","navigatorTitle":[{"text":"IntParser","kind":"identifier"}],"role":"symbol","extendedModule":"Parsing","title":"Parsers.IntParser","modules":[{"name":"Parsing"}],"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntParser","kind":"identifier"}],"roleHeading":"Structure"},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"FixedWidthInteger","preciseIdentifier":"s:s17FixedWidthIntegerP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"UTF8","preciseIdentifier":"s:s4UTF8a"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CodeUnit","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"text","text":"the static "},{"type":"codeVoice","code":"parser()"},{"type":"text","text":" method on the "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":" of your choice, e.g. "},{"type":"codeVoice","code":"Int.parser()"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"codeVoice","code":"UInt8.parser()"},{"type":"text","text":", etc., all of which construct this type."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","isActive":true},{"type":"text","text":" for more information about this parser."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/intparser"]}],"kind":"symbol","abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"code":"+","type":"codeVoice"},{"type":"text","text":" or "},{"code":"-","type":"codeVoice"},{"type":"text","text":" sign for signed integer"},{"type":"text","text":" "},{"type":"text","text":"types) from the beginning of a collection of UTF8 code units."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/Parser-Implementations":{"role":"collectionGroup","abstract":[],"kind":"article","title":"Parser Implementations","type":"topic","url":"\/documentation\/parsing\/parsers\/intparser\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/init(radix:)":{"url":"\/documentation\/parsing\/parsers\/intparser\/init(radix:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"radix","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/init(radix:)","type":"topic","title":"init(radix:)","kind":"symbol","role":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"url":"\/documentation\/parsing\/parserprinter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":", "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":", "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"FixedWidthInteger","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Input.Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"topic","title":"ParserPrinter","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"role":"symbol","type":"topic","title":"Parsers","url":"\/documentation\/parsing\/parsers","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Int":{"role":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","kind":"article","title":"Int","url":"\/documentation\/parsing\/int","abstract":[{"type":"text","text":"A parser that consumes an integer from the beginning of a string."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/ParserPrinter-Implementations":{"role":"collectionGroup","type":"topic","title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/ParserPrinter-Implementations","abstract":[],"kind":"article","url":"\/documentation\/parsing\/parsers\/intparser\/parserprinter-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/parse(_:)":{"role":"symbol","type":"topic","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Output"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/intparser\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"role":"symbol","abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"code":"+","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"text":" sign for signed integer","type":"text"},{"text":" ","type":"text"},{"text":"types) from the beginning of a collection of UTF8 code units.","type":"text"}],"kind":"symbol","title":"Parsers.IntParser","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"url":"\/documentation\/parsing\/parsers\/intparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","navigatorTitle":[{"kind":"identifier","text":"IntParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/radix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/radix","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"radix","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The radix, or base, to use for converting text to an integer value."}],"url":"\/documentation\/parsing\/parsers\/intparser\/radix","title":"radix"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]}}}