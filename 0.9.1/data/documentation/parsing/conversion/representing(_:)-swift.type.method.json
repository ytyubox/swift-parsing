{"sections":[],"metadata":{"role":"symbol","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","extendedModule":"Parsing","modules":[{"name":"Parsing"}],"title":"representing(_:)","externalID":"s:7Parsing10ConversionPAAE12representingyAA11ConversionsO12FromRawValueVy_qd__Gqd__mAIRszSYRd__lFZ"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},{"text":".","kind":"text"},{"text":"FromRawValue","preciseIdentifier":"s:7Parsing11ConversionsO12FromRawValueV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RawRepresentable","preciseIdentifier":"s:SY","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A conversion from a raw value to the given type.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"type","content":[{"inlineContent":[{"text":"A type that conforms to ","type":"text"},{"type":"codeVoice","code":"RawRepresentable"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This conversion is useful for mapping the output of a more primitive parser-printer into a"},{"type":"text","text":" "},{"type":"text","text":"raw representable value."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, you may have a raw representable type that wraps a more primitive type for the"},{"type":"text","text":" "},{"type":"text","text":"purpose of strengthening type requirements in your APIs. One example is an identifier type"},{"type":"text","text":" "},{"type":"text","text":"that wraps an integer:"}],"type":"paragraph"},{"code":["struct UserID: RawRepresentable {","  var rawValue: Int","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"You can transform an ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" parser into a ","type":"text"},{"code":"UserID","type":"codeVoice"},{"text":" parser by invoking ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","type":"reference"},{"text":" ","type":"text"},{"text":"with this conversion:","type":"text"}],"type":"paragraph"},{"code":["let userID = Int.parser().map(.representing(UserID.self))"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"See "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.method","type":"reference"},{"type":"text","text":" for a fluent version of this interface that transforms"},{"type":"text","text":" "},{"type":"text","text":"an existing conversion. This fluent API is particularly useful when mapping string raw values"},{"type":"text","text":" "},{"type":"text","text":"directly from parsers of substrings and UTF-8 views, which require first transforming the"},{"type":"text","text":" "},{"type":"text","text":"parsed substring or UTF-8 view into a string via the "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","type":"reference"},{"type":"text","text":" and"},{"type":"text","text":" "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","type":"reference"},{"text":" conversions.","type":"text"}],"type":"paragraph"},{"code":["struct EmailAddress: RawRepresentable {","  var rawValue: String","}","","let emailAddress = Parse(.string.representing(EmailAddress.self)) {","  Consumed {","    PrefixUpTo(\"@\")","    \"@\"","    Rest()","  }","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"abstract":[{"type":"text","text":"A conversion from a given raw representable type’s raw value to itself."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method"]}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-3u2b5":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","text":"SubstringToString","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"A conversion from "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" to "},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.SubstringToString"},{"type":"text","text":"."}]},"title":"string","kind":"symbol","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"role":"symbol","title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromRawValue":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromRawValue"}],"title":"Conversions.FromRawValue","type":"topic","kind":"symbol","abstract":[{"text":"A conversion from a raw value to a raw representable type.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FromRawValue"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue","url":"\/documentation\/parsing\/conversions\/fromrawvalue"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/representing(_:)-swift.type.method":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","title":"representing(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"representing","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","abstract":[{"text":"A conversion from a given raw representable type’s raw value to itself.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"title":"Conversions","url":"\/documentation\/parsing\/conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-9owth":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BytesToString","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UTF8View","preciseIdentifier":"s:Ss8UTF8ViewV"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","title":"string","abstract":[{"text":"A conversion from ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.BytesToString<Substring.UTF8View>"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/conversion\/string-swift.type.property-9owth","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-18m9d":{"role":"symbol","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV","text":"MapConversion"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser-printer that transforms the output of this parser with a given conversion."}],"type":"topic","url":"\/documentation\/parsing\/parser\/map(_:)-18m9d","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/representing(_:)-swift.method":{"title":"representing(_:)","role":"symbol","abstract":[{"text":"Transforms this conversion to a raw value into a conversion to the given raw representable","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FromRawValue","preciseIdentifier":"s:7Parsing11ConversionsO12FromRawValueV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.method","kind":"symbol","type":"topic"}}}