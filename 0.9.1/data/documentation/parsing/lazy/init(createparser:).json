{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"createParser"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":")"}]}]}],"variants":[{"paths":["\/documentation\/parsing\/lazy\/init(createparser:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"createParser","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Parsing"}],"roleHeading":"Initializer","title":"init(createParser:)","symbolKind":"init","role":"symbol","externalID":"s:7Parsing4LazyC12createParserACyxGxyc_tcfc"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/init(createParser:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/init(createParser:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"createParser","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/init(createParser:)","kind":"symbol","title":"init(createParser:)","url":"\/documentation\/parsing\/lazy\/init(createparser:)","type":"topic","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","url":"\/documentation\/parsing\/lazy\/parse(_:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}],"kind":"symbol","title":"Lazy","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"url":"\/documentation\/parsing\/lazy","abstract":[{"type":"text","text":"A parser that waits for a call to its "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)"},{"type":"text","text":" method before running the given closure to"},{"type":"text","text":" "},{"type":"text","text":"create a parser for the given input."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]}}}