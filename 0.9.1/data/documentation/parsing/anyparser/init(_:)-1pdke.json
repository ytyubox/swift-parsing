{"abstract":[{"type":"text","text":"Creates a parser that wraps the given closure in its "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","isActive":true,"type":"reference"},{"type":"text","text":" method."}],"sections":[],"metadata":{"role":"symbol","symbolKind":"init","externalID":"s:7Parsing9AnyParserVyACyxq_Gq_xzKccfc","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Parsing"}],"roleHeading":"Initializer"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"]]},"variants":[{"paths":["\/documentation\/parsing\/anyparser\/init(_:)-1pdke"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-1pdke","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parse","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"parse","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that attempts to parse an output from an input. "},{"type":"codeVoice","code":"parse"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"executed each time the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","isActive":true},{"type":"text","text":" method is called on the resulting parser."}]}]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"type":"topic","title":"AnyParser","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-1pdke":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-1pdke","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparser\/init(_:)-1pdke","title":"init(_:)","abstract":[{"text":"Creates a parser that wraps the given closure in its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","isActive":true,"type":"reference"},{"text":" method.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/parse(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparser\/parse(_:)","title":"parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"text":"input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]}}}