{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/upstream"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/ParserPrinter-Implementations"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Consumed","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/parsing\/consumed"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","abstract":[{"text":"A parser that returns the subsequence of input consumed by another parser.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"metadata":{"title":"Consumed","symbolKind":"struct","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Consumed","kind":"identifier"}],"role":"symbol","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing8ConsumedV","navigatorTitle":[{"text":"Consumed","kind":"identifier"}]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/Parser-Implementations":{"type":"topic","abstract":[],"url":"\/documentation\/parsing\/consumed\/parser-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/Parser-Implementations","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","kind":"symbol","title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Consumed","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A parser that returns the subsequence of input consumed by another parser."}],"navigatorTitle":[{"text":"Consumed","kind":"identifier"}],"url":"\/documentation\/parsing\/consumed","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","title":"Consumed"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/ParserPrinter-Implementations","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/parsing\/consumed\/parserprinter-implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/parse(_:)":{"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/parse(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/consumed\/parse(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/upstream":{"title":"upstream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/upstream","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/consumed\/upstream","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upstream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"title":"ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","conformance":{"constraints":[{"type":"codeVoice","code":"Upstream"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Upstream.Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"text":", and ","type":"text"},{"code":"Upstream.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Upstream.Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parserprinter","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/init(_:)":{"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"init(_:)","type":"topic","url":"\/documentation\/parsing\/consumed\/init(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/init(_:)"}}}