{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","doc:\/\/co.pointfree.Parsing\/s23CustomStringConvertibleP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"variants":[{"paths":["\/documentation\/casepaths\/casepath"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"value."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/..(_:_:)-8selm","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/..(_:_:)-9emru"],"title":"Operators"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/init(embed:extract:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/appending(path:)","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/embed(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/extract(from:)","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/modify(_:_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/description-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/never","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/rawValue","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/self"],"title":"Type Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/case(_:)-3nw1d","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/case(_:)-5s7mr","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/constant(_:)"],"title":"Type Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/Conversion-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/CustomStringConvertible-Implementations"],"generated":true,"title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"This type defines key path-like semantics for enum cases."}],"type":"paragraph"}]}],"metadata":{"roleHeading":"Structure","modules":[{"name":"CasePaths"}],"role":"symbol","title":"CasePath","externalID":"s:9CasePaths0A4PathV","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"navigatorTitle":[{"kind":"identifier","text":"CasePath"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"]]},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/self":{"title":"self","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/self","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Root"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/casepaths\/casepath\/self","abstract":[{"text":"The identity case path for ","type":"text"},{"type":"codeVoice","code":"Root"},{"text":": a case path that always successfully extracts a root value.","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`self`","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a root’s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"title":"CasePath","url":"\/documentation\/casepaths\/casepath","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"role":"symbol","title":"Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"url":"\/documentation\/parsing\/conversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/case(_:)-3nw1d":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/case(_:)-3nw1d","title":"case(_:)","abstract":[{"text":"Returns a case path that extracts values associated with a given enum case initializer.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"deprecated":true,"role":"symbol","kind":"symbol","url":"\/documentation\/casepaths\/casepath\/case(_:)-3nw1d","type":"topic"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/description-swift.type.property":{"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Root"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"LosslessStringConvertible"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/description-swift.type.property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"url":"\/documentation\/casepaths\/casepath\/description-swift.type.property","type":"topic","role":"symbol","title":"description","abstract":[{"type":"text","text":"Returns a case path for "},{"code":"LosslessStringConvertible","type":"codeVoice"},{"type":"text","text":" types: a case path that attempts to"},{"type":"text","text":" "},{"type":"text","text":"extract a value that can be represented by a lossless string from a string."}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/Conversion-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/casepaths\/casepath\/conversion-implementations","kind":"article","role":"collectionGroup","title":"Conversion Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/Conversion-Implementations"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/appending(path:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appending","kind":"identifier"},{"text":"<","kind":"text"},{"text":"AppendedValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"appending(path:)","url":"\/documentation\/casepaths\/casepath\/appending(path:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/appending(path:)","kind":"symbol","abstract":[{"type":"text","text":"Returns a new case path created by appending the given case path to this one."}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/..(_:_:)-8selm":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/..(_:_:)-8selm","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"..","kind":"identifier"},{"text":" ","kind":"text"},{"text":"<","kind":"text"},{"text":"AppendedValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"AppendedValue"},{"kind":"text","text":">"}],"url":"\/documentation\/casepaths\/casepath\/'..(_:_:)-8selm","type":"topic","role":"symbol","title":"..(_:_:)","abstract":[{"type":"text","text":"Returns a new case path created by appending the given case path to this one."}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/case(_:)-5s7mr":{"kind":"symbol","deprecated":true,"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/case(_:)-5s7mr","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/casepaths\/casepath\/case(_:)-5s7mr","type":"topic","role":"symbol","title":"case(_:)","abstract":[{"type":"text","text":"Returns a case path that successfully extracts "},{"code":"()","type":"codeVoice"},{"type":"text","text":" from a given enum case with no associated"},{"type":"text","text":" "},{"type":"text","text":"values."}]},"doc://co.pointfree.Parsing/documentation/CasePaths":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","abstract":[],"type":"topic","url":"\/documentation\/casepaths","kind":"symbol","role":"collection","title":"CasePaths"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/constant(_:)":{"type":"topic","url":"\/documentation\/casepaths\/casepath\/constant(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/constant(_:)","kind":"symbol","abstract":[{"text":"Returns a case path that always successfully extracts the given constant value.","type":"text"}],"role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Root"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"title":"constant(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"constant","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/s23CustomStringConvertibleP":{"identifier":"doc:\/\/co.pointfree.Parsing\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/embed(_:)":{"url":"\/documentation\/casepaths\/casepath\/embed(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/embed(_:)","title":"embed(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"embed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Returns a root by embedding a value."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/rawValue":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/rawValue","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/casepaths\/casepath\/rawvalue","title":"rawValue","abstract":[{"text":"Returns a case path for ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":" types: a case path that attempts to extract a value","type":"text"},{"text":" ","type":"text"},{"text":"that can be represented by a raw value from a raw value.","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Root","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Value.RawValue","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/modify(_:_:)":{"url":"\/documentation\/casepaths\/casepath\/modify(_:_:)","kind":"symbol","title":"modify(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"modify"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/modify(_:_:)","abstract":[{"type":"text","text":"Attempts to modify a value in a root."}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/never":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"never","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/never","url":"\/documentation\/casepaths\/casepath\/never","title":"never","abstract":[{"type":"text","text":"The never case path for "},{"type":"codeVoice","code":"Root"},{"type":"text","text":": a case path that always fails to extract the a value of the"},{"type":"text","text":" "},{"type":"text","text":"uninhabited "},{"code":"Never","type":"codeVoice"},{"type":"text","text":" type."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/init(embed:extract:)":{"kind":"symbol","title":"init(embed:extract:)","url":"\/documentation\/casepaths\/casepath\/init(embed:extract:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"embed"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extract"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"text":"Value","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/init(embed:extract:)","abstract":[{"text":"Creates a case path with a pair of functions.","type":"text"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/..(_:_:)-9emru":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/..(_:_:)-9emru","url":"\/documentation\/casepaths\/casepath\/'..(_:_:)-9emru","abstract":[{"type":"text","text":"Returns a new case path created by appending the given embed function."}],"role":"symbol","title":"..(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":".."},{"kind":"text","text":" "},{"text":"<","kind":"text"},{"text":"AppendedValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, (","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"AppendedValue","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/CustomStringConvertible-Implementations":{"kind":"article","title":"CustomStringConvertible Implementations","url":"\/documentation\/casepaths\/casepath\/customstringconvertible-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/CustomStringConvertible-Implementations","abstract":[],"type":"topic"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/extract(from:)":{"kind":"symbol","title":"extract(from:)","url":"\/documentation\/casepaths\/casepath\/extract(from:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extract"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/extract(from:)","abstract":[{"text":"Attempts to extract a value from a root.","type":"text"}],"type":"topic"}}}