{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths","doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath","doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath\/Conversion-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/casepaths\/casepath\/case(_:)-9xk7i"]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath\/case(_:)-9xk7i"},"metadata":{"extendedModule":"Parsing","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd_0_qd__Gqd_0_qd__cAHRszr0_lFZ::SYNTHESIZED::s:9CasePaths0A4PathV","roleHeading":"Type Method","title":"case(_:)","role":"symbol","modules":[{"name":"CasePaths"}],"symbolKind":"method"},"abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initializer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath"},{"text":"<","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A conversion that can embed the associated values of an enum case into the case,","type":"text"},{"text":" ","type":"text"},{"text":"and extract the associated values from the case.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"name":"embed","content":[{"inlineContent":[{"text":"An embed function where ","type":"text"},{"type":"codeVoice","code":"Values"},{"text":" directly maps to the memory","type":"text"},{"text":" ","type":"text"},{"text":"layout of ","type":"text"},{"type":"codeVoice","code":"Enum"},{"text":", for example the internal, default initializer that is automatically","type":"text"},{"text":" ","type":"text"},{"text":"synthesized for structs.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Useful for transforming the output of a "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":" into an enum:"}],"type":"paragraph"},{"syntax":"swift","code":["enum Expression {","  case add(Int, Int)","  ...","}","","let add = ParsePrint(.case(Expression.add)) {","  Int.parser()","  \"+\"","  Int.parser()","}","try add.parse(\"1+2\")  \/\/ Expression.add(1, 2)"],"type":"codeListing"},{"inlineContent":[{"text":"To transform the output of a ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":" into a struct, see ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath\/memberwise(_:)","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://co.pointfree.URLRouting/documentation/CasePaths":{"title":"CasePaths","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths","url":"\/documentation\/casepaths","role":"collection","type":"topic","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/CasePaths/CasePath":{"navigatorTitle":[{"kind":"identifier","text":"CasePath"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath","kind":"symbol","abstract":[{"type":"text","text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded"},{"type":"text","text":" "},{"text":"value.","type":"text"}],"title":"CasePath","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"url":"\/documentation\/casepaths\/casepath","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/CasePaths/CasePath/case(_:)-9xk7i":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath\/case(_:)-9xk7i","abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"role":"symbol","title":"case(_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/casepaths\/casepath\/case(_:)-9xk7i"},"doc://co.pointfree.URLRouting/documentation/CasePaths/CasePath/Conversion-Implementations":{"title":"Conversion Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath\/Conversion-Implementations","url":"\/documentation\/casepaths\/casepath\/conversion-implementations","role":"collectionGroup","type":"topic","kind":"article"},"doc://co.pointfree.URLRouting/documentation/CasePaths/CasePath/memberwise(_:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/CasePaths\/CasePath\/memberwise(_:)","abstract":[{"type":"text","text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a"},{"type":"text","text":" "},{"type":"text","text":"memberwise initializer."}],"role":"symbol","title":"memberwise(_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"memberwise","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Struct","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Struct","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/casepaths\/casepath\/memberwise(_:)"}}}