{"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CompactMap","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/CompactMap","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given transformation"},{"type":"text","text":" "},{"type":"text","text":"with the output of this parser."}]}],"kind":"content"},{"parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that accepts output of this parser as its argument and","type":"text"},{"text":" ","type":"text"},{"text":"returns an optional value.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is similar to "},{"code":"Sequence.compactMap","type":"codeVoice"},{"type":"text","text":" in the Swift standard library, as well as"},{"type":"text","text":" "},{"code":"Publisher.compactMap","type":"codeVoice"},{"type":"text","text":" in the Combine framework."}]},{"type":"codeListing","syntax":"swift","code":["let evenParser = Int.parser().compactMap { $0.isMultiple(of: 2) ? $0 : nil }","","var input = \"124 hello world\"[...]","try evenParser.parse(&input)  \/\/ 124","input                         \/\/ \" hello world\""]},{"type":"paragraph","inlineContent":[{"text":"This parser fails when the provided closure returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":". For example, the following parser tries","type":"text"},{"text":" ","type":"text"},{"text":"to convert two characters into a hex digit, but fails to do so because ","type":"text"},{"code":"\"GG\"","type":"codeVoice"},{"text":" is not a valid","type":"text"},{"text":" ","type":"text"},{"text":"hex number:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"GG0000\"[...]","let hex = try Prefix(2).compactMap { Int(String($0), radix: 16) }.parse(&input)","\/\/ error: failed to process \"Int\" from \"GG\"","\/\/  --> input:1:1-2","\/\/ 1 | GG0000","\/\/   | ^^"]},{"anchor":"Printability","type":"heading","level":2,"text":"Printability"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Parser.compactMap"},{"text":" is ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"text":" printable, as a failable transform operation to some new output","type":"text"},{"text":" ","type":"text"},{"text":"does not provide enough information to perform a transformation from that new output back to","type":"text"},{"text":" ","type":"text"},{"text":"the old.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If you are building a parser-printer, avoid uses of ","type":"text"},{"code":"compactMap","type":"codeVoice"},{"text":" and instead use","type":"text"},{"text":" ","type":"text"},{"code":"Parser\/map(_:)-18m9d","type":"codeVoice"},{"text":" with a failable ","type":"text"},{"code":"Conversion","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathEnd","doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathEnd\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"sections":[],"variants":[{"paths":["\/documentation\/urlrouting\/pathend\/compactmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathEnd\/compactMap(_:)"},"kind":"symbol","metadata":{"modules":[{"name":"URLRouting"}],"externalID":"s:7Parsing6ParserPAAE10compactMapyAA7ParsersO07CompactD0Vy_xqd__Gqd__Sg6OutputQzclF::SYNTHESIZED::s:10URLRouting7PathEndV","title":"compactMap(_:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CompactMap","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","role":"symbol","extendedModule":"Parsing"},"references":{"doc://co.pointfree.URLRouting/documentation/URLRouting/PathEnd":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathEnd","navigatorTitle":[{"kind":"identifier","text":"PathEnd"}],"kind":"symbol","title":"PathEnd","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathEnd"}],"abstract":[],"url":"\/documentation\/urlrouting\/pathend"},"doc://co.pointfree.URLRouting/documentation/URLRouting":{"abstract":[{"text":"A library for turning nebulous URL requests into well-structured data, and turning data back into","type":"text"},{"text":" ","type":"text"},{"text":"URL requests. This library is built upon ","type":"text"},{"type":"reference","isActive":true,"identifier":"..\/parsing"},{"text":".","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting","title":"URLRouting","url":"\/documentation\/urlrouting","role":"collection"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"kind":"symbol","url":"\/documentation\/parsing\/parsers","title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/CompactMap":{"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/CompactMap","navigatorTitle":[{"kind":"identifier","text":"CompactMap"}],"title":"Parsers.CompactMap","url":"\/documentation\/parsing\/parsers\/compactmap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given transformation with the output"},{"type":"text","text":" "},{"type":"text","text":"of its upstream parser."}]},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathEnd/Parser-Implementations":{"url":"\/documentation\/urlrouting\/pathend\/parser-implementations","title":"Parser Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathEnd\/Parser-Implementations","kind":"article","type":"topic"},"doc://co.pointfree.URLRouting/documentation/URLRouting/PathEnd/compactMap(_:)":{"abstract":[{"text":"Returns a parser that outputs the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" result of calling the given closure with the","type":"text"},{"text":" ","type":"text"},{"text":"output of this parser.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/URLRouting\/PathEnd\/compactMap(_:)","title":"compactMap(_:)","url":"\/documentation\/urlrouting\/pathend\/compactmap(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CompactMap","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}]},"../parsing":{"url":"..\/parsing","title":"Parsing","titleInlineContent":[{"type":"codeVoice","code":"Parsing"}],"identifier":"..\/parsing","type":"link"}}}