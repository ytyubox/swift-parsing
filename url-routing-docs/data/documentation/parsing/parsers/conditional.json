{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional"},"kind":"symbol","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"},{"text":"<","kind":"text"},{"text":"First","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Second","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This parser is useful for situations where you want to run one of two different parsers based on","type":"text"},{"text":" ","type":"text"},{"text":"a condition, which typically would force you to perform ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/eraseToAnyParser()","isActive":true,"type":"reference"},{"text":" and incur","type":"text"},{"text":" ","type":"text"},{"text":"a performance penalty.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you can use this parser in a "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/flatMap(_:)","type":"reference","isActive":true},{"type":"text","text":" operation to use the parsed"},{"type":"text","text":" "},{"type":"text","text":"output to determine what parser to run next:"}]},{"code":["versionParser.flatMap { version in","  version == \"2.0\"","    ? Conditional.first(V2Parser())","    : Conditional.second(LegacyParser())","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"You won’t typically construct this parser directly, but instead will use standard ","type":"text"},{"type":"codeVoice","code":"if"},{"text":"-","type":"text"},{"type":"codeVoice","code":"else"},{"text":" ","type":"text"},{"text":"statements in a parser builder to automatically build conditional parsers:","type":"text"}]},{"code":["versionParser.flatMap { version in","  if version == \"2.0\" {","    V2Parser()","  } else {","    LegacyParser()","  }","}"],"type":"codeListing","syntax":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/first(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/second(_:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/conditional"]}],"metadata":{"modules":[{"name":"Parsing"}],"roleHeading":"Enumeration","role":"symbol","externalID":"s:7Parsing7ParsersO11ConditionalO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"title":"Parsers.Conditional","extendedModule":"Parsing","symbolKind":"enum","navigatorTitle":[{"text":"Conditional","kind":"identifier"}]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/eraseToAnyParser()":{"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"eraseToAnyParser()","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/eraseToAnyParser()","role":"symbol","url":"\/documentation\/parsing\/parser\/erasetoanyparser()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/flatMap(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/flatMap(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"FlatMap","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parser\/flatmap(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser into a new parser.","type":"text"}],"title":"flatMap(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Conditional/parse(_:)":{"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/parse(_:)","role":"symbol","url":"\/documentation\/parsing\/parsers\/conditional\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Conditional":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional","url":"\/documentation\/parsing\/parsers\/conditional","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"kind":"symbol","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"title":"Parsers.Conditional","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Conditional/second(_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/second(_:)","url":"\/documentation\/parsing\/parsers\/conditional\/second(_:)","abstract":[],"kind":"symbol","title":"Parsers.Conditional.second(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"second","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Conditional/ParserPrinter-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/parsers\/conditional\/parserprinter-implementations","abstract":[],"kind":"article","title":"ParserPrinter Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Conditional/Parser-Implementations":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/Parser-Implementations","url":"\/documentation\/parsing\/parsers\/conditional\/parser-implementations","abstract":[],"kind":"article","title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"kind":"symbol","url":"\/documentation\/parsing\/parsers","title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"First"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"Second"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"First.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Second.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"First.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Second.Output"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Conditional/first(_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Conditional\/first(_:)","url":"\/documentation\/parsing\/parsers\/conditional\/first(_:)","abstract":[],"kind":"symbol","title":"Parsers.Conditional.first(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":"(","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}