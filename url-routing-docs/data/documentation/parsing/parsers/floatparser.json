{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers"]]},"kind":"symbol","sections":[],"metadata":{"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"role":"symbol","title":"Parsers.FloatParser","roleHeading":"Structure","externalID":"s:7Parsing7ParsersO11FloatParserV","symbolKind":"struct","navigatorTitle":[{"text":"FloatParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}]},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser\/ParserPrinter-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatParser"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"BinaryFloatingPoint","preciseIdentifier":"s:SB"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:s25LosslessStringConvertibleP","kind":"typeIdentifier","text":"LosslessStringConvertible"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s4UTF8a","kind":"typeIdentifier","text":"UTF8"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","kind":"typeIdentifier","text":"CodeUnit"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually use","type":"text"},{"text":" ","type":"text"},{"text":"the static ","type":"text"},{"type":"codeVoice","code":"parser()"},{"text":" method on the ","type":"text"},{"type":"codeVoice","code":"BinaryFloatingPoint"},{"text":" of your choice, e.g.,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Double.parser()"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Float80.parser()"},{"text":", etc., all of which construct this type.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"text","text":"doc:Float"},{"type":"text","text":" for more information about this parser."}]}]}],"abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a collection of UTF-8","type":"text"},{"text":" ","type":"text"},{"text":"code units.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/floatparser"]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/FloatParser/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser\/Parser-Implementations","url":"\/documentation\/parsing\/parsers\/floatparser\/parser-implementations","abstract":[],"title":"Parser Implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/FloatParser/parse(_:)":{"url":"\/documentation\/parsing\/parsers\/floatparser\/parse(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}],"type":"topic","title":"parse(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/FloatParser":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser","title":"Parsers.FloatParser","url":"\/documentation\/parsing\/parsers\/floatparser","kind":"symbol","navigatorTitle":[{"text":"FloatParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that consumes a floating-point number from the beginning of a collection of UTF-8"},{"type":"text","text":" "},{"type":"text","text":"code units."}],"role":"symbol","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/FloatParser/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/parsers\/floatparser\/parserprinter-implementations","kind":"article","abstract":[],"role":"collectionGroup","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/FloatParser/init()":{"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/floatparser\/init()","kind":"symbol","title":"init()","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/FloatParser\/init()"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"BinaryFloatingPoint","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"LosslessStringConvertible","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Input.Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/parsing\/parserprinter","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","abstract":[{"text":"A ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"title":"ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"kind":"symbol","url":"\/documentation\/parsing\/parsers","title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"type":"topic"}}}