{"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"code":["var input = \"Hello\"[...]","Rest().parse(&input)  \/\/ \"Hello\"","input                 \/\/ \"\""],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"This parser fails if there is no input to consume:"}],"type":"paragraph"},{"code":["try Rest().parse(\"\")","","\/\/\/ error: unexpected input","\/\/\/  --> input:1:1","\/\/\/ 1 |","\/\/\/   | ^ expected a non-empty input"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you want to allow for the possibility of an empty remaining input you can use the","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","isActive":true},{"text":" parser to parse an optional output value, or the ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","isActive":true},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"to coalesce the error into a default output value.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"role":"symbol","externalID":"s:7Parsing4RestV","symbolKind":"struct","title":"Rest","modules":[{"name":"Parsing"}],"roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"Rest"}]},"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-3wugv","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-41jf5","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-9bc09"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/rest"]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally":{"navigatorTitle":[{"kind":"identifier","text":"Optionally"}],"role":"symbol","abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it fails.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","url":"\/documentation\/parsing\/optionally","title":"Optionally"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/rest\/parserprinter-implementations","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/replaceError(with:)":{"title":"replaceError(with:)","kind":"symbol","url":"\/documentation\/parsing\/rest\/replaceerror(with:)","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"title":"ParserPrinter","kind":"symbol","abstract":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-9bc09":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","title":"init()","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-9bc09","kind":"symbol","url":"\/documentation\/parsing\/rest\/init()-9bc09"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-3wugv":{"url":"\/documentation\/parsing\/rest\/init()-3wugv","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-3wugv","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}]},"title":"init()"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest":{"abstract":[{"text":"A parser that consumes everything to the end of the collection and returns this subsequence as","type":"text"},{"text":" ","type":"text"},{"text":"its output.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest","type":"topic","title":"Rest","role":"symbol","url":"\/documentation\/parsing\/rest","navigatorTitle":[{"text":"Rest","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/parse(_:)":{"url":"\/documentation\/parsing\/rest\/parse(_:)","title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","title":"Parser Implementations","url":"\/documentation\/parsing\/rest\/parser-implementations","kind":"article","abstract":[],"role":"collectionGroup","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Rest/init()-41jf5":{"url":"\/documentation\/parsing\/rest\/init()-41jf5","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Rest\/init()-41jf5","title":"init()"}}}