{"metadata":{"externalID":"s:7Parsing7NewlineV","platforms":[],"modules":[{"name":"Parsing"}],"symbolKind":"struct","title":"Newline","roleHeading":"Structure","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"},{"text":"<","kind":"text"},{"text":"InputToBytes","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Conversion","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","preciseIdentifier":"s:7Parsing10ConversionP"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"UTF8","kind":"typeIdentifier","preciseIdentifier":"s:s4UTF8a"},{"text":".","kind":"text"},{"text":"CodeUnit","kind":"typeIdentifier","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita"}]}]}],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/newline"]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'Whitespace(1, .vertical)' instead"}],"type":"paragraph"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/init()-3hk4u","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/init()-4xfjf","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/init()-9v1iv"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/ParserPrinter-Implementations"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"kind":"symbol","references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Newline/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","kind":"article","url":"\/documentation\/parsing\/newline\/parserprinter-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/ParserPrinter-Implementations","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Conversion":{"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"inlineContent":[{"text":"and","type":"text"}],"type":"emphasis"},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"title":"Conversion","url":"\/documentation\/parsing\/conversion","kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Conversion","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Newline/Parser-Implementations":{"kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/Parser-Implementations","abstract":[],"url":"\/documentation\/parsing\/newline\/parser-implementations","title":"Parser Implementations","role":"collectionGroup"},"doc://co.pointfree.URLRouting/documentation/Parsing/Newline":{"abstract":[],"role":"symbol","kind":"symbol","title":"Newline","type":"topic","url":"\/documentation\/parsing\/newline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"deprecated":true,"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline"},"doc://co.pointfree.URLRouting/documentation/Parsing/Newline/init()-9v1iv":{"deprecated":true,"url":"\/documentation\/parsing\/newline\/init()-9v1iv","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/init()-9v1iv","kind":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"InputToBytes","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.Identity<Substring.UTF8View>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[],"type":"topic","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"InputToBytes","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Conversion","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Input.SubSequence"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PrependableCollection"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output.SubSequence"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output.Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"text":".","type":"text"}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"role":"symbol","url":"\/documentation\/parsing\/parserprinter","title":"ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Newline/init()-4xfjf":{"role":"symbol","deprecated":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/init()-4xfjf","kind":"symbol","title":"init()","url":"\/documentation\/parsing\/newline\/init()-4xfjf","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"InputToBytes","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.SubstringToUTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/Newline/init()-3hk4u":{"title":"init()","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/newline\/init()-3hk4u","role":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/init()-3hk4u","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"InputToBytes","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Conversion","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Input.SubSequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Output.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"InputToBytes.Output.Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"text":".","type":"text"}]},"deprecated":true},"doc://co.pointfree.URLRouting/documentation/Parsing/Newline/parse(_:)":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Newline\/parse(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"deprecated":true,"role":"symbol","url":"\/documentation\/parsing\/newline\/parse(_:)","title":"parse(_:)"}}}