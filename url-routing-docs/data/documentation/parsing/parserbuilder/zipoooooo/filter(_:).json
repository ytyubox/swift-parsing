{"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOOO\/filter(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipoooooo\/filter(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","modules":[{"name":"Parsing"}],"roleHeading":"Instance Method","symbolKind":"method","title":"filter(_:)","externalID":"s:7Parsing6ParserPAAE6filteryAA7ParsersO6FilterVy_xGSb6OutputQzcF::SYNTHESIZED::s:7Parsing13ParserBuilderO9ZipOOOOOOV","extendedModule":"Parsing"},"abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOOO","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOOO\/Parser-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Filter","text":"Filter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A parser that filters its output.","type":"text"}]}],"kind":"content"},{"parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an output from this parser and returns a Boolean"},{"type":"text","text":" "},{"type":"text","text":"value indicating whether the output should be returned."}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is similar to ","type":"text"},{"code":"Sequence.filter","type":"codeVoice"},{"text":" in the Swift standard library, as well as","type":"text"},{"text":" ","type":"text"},{"code":"Publisher.filter","type":"codeVoice"},{"text":" in the Combine framework.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser fails if the predicate is not satisfied on the output of the upstream parser. For example,"},{"type":"text","text":" "},{"type":"text","text":"the following parser consumes only even integers and so fails when an odd integer is used:"}]},{"syntax":"swift","type":"codeListing","code":["var input = \"43 Hello, world!\"[...]","let number = try Int.parser().filter { $0.isMultiple(of: 2) }.parse(&input)","\/\/ error: processed value 43 failed to satisfy predicate","\/\/  --> input:1:1-2","\/\/ 1 | 43 Hello, world!","\/\/   | ^^ processed input"]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers":{"kind":"symbol","url":"\/documentation\/parsing\/parsers","title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOOOOOO/filter(_:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipoooooo\/filter(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO6FilterV","text":"Filter","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"filter(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOOO\/filter(_:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"title":"ParserBuilder"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOOOOOO/Parser-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOOO\/Parser-Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipoooooo\/parser-implementations","abstract":[],"title":"Parser Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserBuilder/ZipOOOOOO":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOOOOOO","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserBuilder\/ZipOOOOOO","url":"\/documentation\/parsing\/parserbuilder\/zipoooooo","type":"topic","title":"ParserBuilder.ZipOOOOOO","abstract":[],"navigatorTitle":[{"text":"ZipOOOOOO","kind":"identifier"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parsers/Filter":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parsers\/Filter","title":"Parsers.Filter","url":"\/documentation\/parsing\/parsers\/filter","kind":"symbol","navigatorTitle":[{"text":"Filter","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"role":"symbol","type":"topic"}}}