{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/end"]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"]}],"abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Useful as a final parser in a long sequence of parsers to guarantee that all input has been"},{"type":"text","text":" "},{"type":"text","text":"consumed, especially as "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Many","isActive":true},{"type":"text","text":"’s terminal parser."}],"type":"paragraph"},{"inlineContent":[{"text":"This parser will fail if there are input elements that have not been consumed:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["input = \"Hello, Blob!!\"","try parser.parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:13","\/\/ 1 | Hello, Blob!!","\/\/   |             ^ expected end of input"]},{"content":[{"type":"paragraph","inlineContent":[{"text":"This parser is automatically inserted when you invoke the non-incremental","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq"},{"text":" methods.","type":"text"}]}],"style":"note","type":"aside"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-2egll","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-7gmzt","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-8lvil"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/parse(_:)","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/ParserPrinter-Implementations"],"generated":true}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"modules":[{"name":"Parsing"}],"title":"End","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"externalID":"s:7Parsing3EndV","roleHeading":"Structure"},"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-76tcw":{"kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"defaultImplementations":3,"type":"topic","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","role":"symbol","url":"\/documentation\/parsing\/parser\/parse(_:)-76tcw"},"doc://co.pointfree.URLRouting/documentation/Parsing/Many":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Many","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"title":"Many","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"navigatorTitle":[{"text":"Many","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/many","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/parserprinter","role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/End/parse(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/end\/parse(_:)","role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/parse(_:)","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-2wzcq":{"title":"parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Parse a "},{"code":"String","type":"codeVoice"},{"type":"text","text":" into an output using a UTF-8 parser. This method is more ergnomic to use"},{"text":" ","type":"text"},{"text":"than ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"text":" because it accepts a plain string rather than a collection of","type":"text"},{"text":" ","type":"text"},{"text":"UTF-8 code units, and the input does not need to be ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq","type":"topic","role":"symbol","url":"\/documentation\/parsing\/parser\/parse(_:)-2wzcq","kind":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser/parse(_:)-6h1d0":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"kind":"symbol","role":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-6h1d0","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","abstract":[{"text":"Parse a collection into an output using a parser that works on the collection’s ","type":"text"},{"code":"SubSequence","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This method is more ergnomic to use than ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"text":" because it accepts a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"collection directly rather than its subsequence, and the input does not need to be "},{"type":"codeVoice","code":"inout"},{"type":"text","text":"."}]},"doc://co.pointfree.URLRouting/documentation/Parsing/End/print(_:into:)":{"role":"symbol","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"title":"print(_:into:)","kind":"symbol","url":"\/documentation\/parsing\/end\/print(_:into:)","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/print(_:into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"((), "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/End/Parser-Implementations":{"url":"\/documentation\/parsing\/end\/parser-implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/Parser-Implementations","title":"Parser Implementations","kind":"article","abstract":[],"role":"collectionGroup","type":"topic"},"doc://co.pointfree.URLRouting/documentation/Parsing/End/ParserPrinter-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","abstract":[],"url":"\/documentation\/parsing\/end\/parserprinter-implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.URLRouting/documentation/Parsing/End/init()-8lvil":{"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/parsing\/end\/init()-8lvil","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-8lvil","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/End/init()-2egll":{"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/parsing\/end\/init()-2egll","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-2egll","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/End":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End","abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"title":"End","navigatorTitle":[{"kind":"identifier","text":"End"}],"url":"\/documentation\/parsing\/end"},"doc://co.pointfree.URLRouting/documentation/Parsing/End/init()-7gmzt":{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/End\/init()-7gmzt","title":"init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/end\/init()-7gmzt","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"}}}