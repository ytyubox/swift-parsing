{"hierarchy":{"paths":[["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing"]]},"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/wrapped"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/Parser-Implementations","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"Use this parser when you are parsing into an output data model that contains ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"When the wrapped parser fails ","type":"text"},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","isActive":true,"type":"reference"},{"text":" will backtrack any consumption of the input so","type":"text"},{"text":" ","type":"text"},{"text":"that later parsers can attempt to parser the input:","type":"text"}],"type":"paragraph"},{"code":["let parser = Parse {","  \"Hello,\"","  Optionally { \" \"; Bool.parser() }","  \" world!\"","}","","try parser.parse(\"Hello, world!\")      \/\/ nil 1️⃣","try parser.parse(\"Hello, true world!\") \/\/ true"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"If "},{"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","isActive":true},{"type":"text","text":" did not backtrack then 1️⃣ would fail because it would consume a space,"},{"type":"text","text":" "},{"type":"text","text":"causing the "},{"type":"codeVoice","code":"\" world!\""},{"type":"text","text":" parser to fail since there is no longer any space to consume."},{"type":"text","text":" "},{"type":"text","text":"Read the article "},{"type":"text","text":"doc:Backtracking"},{"type":"text","text":" to learn more about how backtracking works."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you are optionally parsing input that should coalesce into some default, you can skip the"},{"type":"text","text":" "},{"type":"text","text":"optionality and instead use "},{"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/replaceError(with:)","isActive":true,"type":"reference"},{"type":"text","text":" with a default:"}],"type":"paragraph"},{"code":["Optionally { Int.parser() }","  .map { $0 ?? 0 }","","\/\/ vs.","","Int.parser()","  .replaceError(with: 0)"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally"},"abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if it fails."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"modules":[{"name":"Parsing"}],"role":"symbol","externalID":"s:7Parsing10OptionallyV","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"symbolKind":"struct","roleHeading":"Structure","title":"Optionally","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/optionally"]}],"references":{"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/wrapped":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapped"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"}],"title":"wrapped","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/optionally\/wrapped","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/wrapped","abstract":[],"role":"symbol"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/init(_:)":{"type":"topic","title":"init(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/init(_:)","abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/optionally\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing","abstract":[],"type":"topic","role":"collection","url":"\/documentation\/parsing","title":"Parsing"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/Parser-Implementations":{"type":"topic","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/Parser-Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/optionally\/parser-implementations","kind":"article","abstract":[]},"doc://co.pointfree.URLRouting/documentation/Parsing/Parser":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"title":"Parser"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/replaceError(with:)":{"role":"symbol","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/replaceError(with:)","url":"\/documentation\/parsing\/optionally\/replaceerror(with:)","title":"replaceError(with:)"},"doc://co.pointfree.URLRouting/documentation/Parsing/ParserPrinter":{"kind":"symbol","abstract":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"title":"ParserPrinter","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/ParserPrinter-Implementations":{"role":"collectionGroup","url":"\/documentation\/parsing\/optionally\/parserprinter-implementations","kind":"article","type":"topic","title":"ParserPrinter Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/ParserPrinter-Implementations"},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally/parse(_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally\/parse(_:)","title":"parse(_:)","url":"\/documentation\/parsing\/optionally\/parse(_:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.URLRouting/documentation/Parsing/Optionally":{"navigatorTitle":[{"kind":"identifier","text":"Optionally"}],"role":"symbol","abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it fails.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.URLRouting\/documentation\/Parsing\/Optionally","url":"\/documentation\/parsing\/optionally","title":"Optionally"}}}