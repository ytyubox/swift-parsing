{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"Stream","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6StreamV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"For example, the following parser can parse an integer followed by a newline from a collection"},{"type":"text","text":" "},{"type":"text","text":"of UTF8 bytes:"}],"type":"paragraph"},{"code":["Parsers.Integer<ArraySlice<UInt8>, Int>()","  .skip(StartsWith(\"\\n\".utf8))"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"This parser can be transformed into one that processes an incoming stream of UTF8 bytes:","type":"text"}],"type":"paragraph"},{"code":["let newlineSeparatedIntegers = Parsers.Integer<ArraySlice<UInt8>, Int>()","  .skip(StartsWith(\"\\n\".utf8))","  .stream"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"And then it can be used on a stream, such as values coming from standard in:","type":"text"}],"type":"paragraph"},{"code":["var stdin = AnyIterator {","  readLine().map { ArraySlice($0.utf8) }","}","","newlineSeparatedIntegers","  .parse(&stdin)"],"syntax":"swift","type":"codeListing"}]}],"sections":[],"variants":[{"paths":["\/documentation\/parsing\/parsers\/pullback\/stream"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":2,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback\/Parser-Implementations"]]},"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"symbolKind":"property","title":"stream","extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stream"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stream","preciseIdentifier":"s:7Parsing7ParsersO6StreamV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Property","externalID":"s:7Parsing6ParserPAASm5InputRpzrlE6streamAA7ParsersO6StreamVy_xGvp::SYNTHESIZED::s:7Parsing7ParsersO8PullbackV"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback\/stream"},"abstract":[{"type":"text","text":"Transforms the receiver parser into one that can parse streams of input."}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"title":"Parsers.Pullback","abstract":[{"type":"text","text":"Transforms the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a downstream parser."}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/pullback","navigatorTitle":[{"text":"Pullback","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/stream","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","type":"topic","title":"Parsers.Stream","abstract":[{"text":"A parser that can parse streams of input.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","title":"Parsers","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback/stream":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/parsers\/pullback\/stream","kind":"symbol","title":"stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback\/stream","abstract":[{"type":"text","text":"Transforms the receiver parser into one that can parse streams of input."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Stream","preciseIdentifier":"s:7Parsing7ParsersO6StreamV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback\/Parser-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/parsing\/parsers\/pullback\/parser-implementations","abstract":[],"kind":"article","title":"Parser Implementations"}}}