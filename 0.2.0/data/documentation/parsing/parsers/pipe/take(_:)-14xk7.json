{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parser","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Take2","preciseIdentifier":"s:7Parsing7ParsersO5Take2V","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A parser that runs two parsers, returning both outputs in a tuple.","type":"text"}]}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"parser","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser to run immediately after this parser."}]}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator is used to gather up multiple values and can bundle them into a single data type"},{"type":"text","text":" "},{"type":"text","text":"when used alongside the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/map(_:)"},{"type":"text","text":" operator."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, two "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"s are parsed using "},{"code":"take(_:)-1fw8y","type":"codeVoice"},{"type":"text","text":" before they are"},{"type":"text","text":" "},{"type":"text","text":"combined into a "},{"code":"Point","type":"codeVoice"},{"type":"text","text":"."}]},{"syntax":"swift","type":"codeListing","code":["struct Point { var x, y: Double }","","var input = \"-1.5,1\"[...].utf8","let output = Double.parser()","  .skip(StartsWith(\",\"))","  .take(Double.parser())","  .map(Point.init)","  .parse(&input) \/\/ => Point(x: -1.5, y: 1)","precondition(Substring(input) == \"\")"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/take(_:)-14xk7","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take2V","text":"Take2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE4takeyAA7ParsersO5Take2Vy_xqd__Gqd__AaBRd__5InputQyd__AJRtzlF::SYNTHESIZED::s:7Parsing7ParsersO4PipeV","modules":[{"name":"Parsing"}],"title":"take(_:)"},"schemaVersion":{"patch":0,"major":0,"minor":2},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/Parser-Implementations"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/pipe\/take(_:)-14xk7"]}],"abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning both outputs in a"},{"type":"text","text":" "},{"type":"text","text":"tuple."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","type":"topic","title":"Parsers.Pipe","url":"\/documentation\/parsing\/parsers\/pipe","abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pipe"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe/map(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier","text":"Map"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"title":"map(_:)","url":"\/documentation\/parsing\/parsers\/pipe\/map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","title":"Parsers","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe/Parser-Implementations":{"abstract":[],"role":"collectionGroup","url":"\/documentation\/parsing\/parsers\/pipe\/parser-implementations","type":"topic","kind":"article","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take2":{"title":"Parsers.Take2","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","url":"\/documentation\/parsing\/parsers\/take2","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take2","kind":"identifier"}],"abstract":[{"text":"A parser that runs two parsers, one after the other, and returns both outputs in a tuple.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Take2","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","title":"Parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe/take(_:)-14xk7":{"title":"take(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5Take2V","kind":"typeIdentifier","text":"Take2"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe\/take(_:)-14xk7","role":"symbol","url":"\/documentation\/parsing\/parsers\/pipe\/take(_:)-14xk7","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning both outputs in a","type":"text"},{"type":"text","text":" "},{"type":"text","text":"tuple."}],"kind":"symbol"}}}