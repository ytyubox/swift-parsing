{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond\/take(_:)-2hjd"},"variants":[{"paths":["\/documentation\/parsing\/parsers\/skipsecond\/take(_:)-2hjd"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":2,"major":0},"metadata":{"externalID":"s:7Parsing6ParserPAAE4takeyAA7ParsersO5Take2Vy_xqd__Gqd__AaBRd__5InputQyd__AJRtzlF::SYNTHESIZED::s:7Parsing7ParsersO10SkipSecondV","symbolKind":"method","role":"symbol","modules":[{"name":"Parsing"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Take2","preciseIdentifier":"s:7Parsing7ParsersO5Take2V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Parsing","title":"take(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5Take2V","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","kind":"typeIdentifier","text":"Take2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"A parser that runs two parsers, returning both outputs in a tuple.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A parser to run immediately after this parser.","type":"text"}],"type":"paragraph"}],"name":"parser"}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This operator is used to gather up multiple values and can bundle them into a single data type","type":"text"},{"text":" ","type":"text"},{"text":"when used alongside the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond\/map(_:)","type":"reference"},{"text":" operator.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In the following example, two ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":"s are parsed using ","type":"text"},{"code":"take(_:)-1fw8y","type":"codeVoice"},{"text":" before they are","type":"text"},{"text":" ","type":"text"},{"text":"combined into a ","type":"text"},{"code":"Point","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","code":["struct Point { var x, y: Double }","","var input = \"-1.5,1\"[...].utf8","let output = Double.parser()","  .skip(StartsWith(\",\"))","  .take(Double.parser())","  .map(Point.init)","  .parse(&input) \/\/ => Point(x: -1.5, y: 1)","precondition(Substring(input) == \"\")"],"syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond\/Parser-Implementations"]]},"sections":[],"abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning both outputs in a","type":"text"},{"text":" ","type":"text"},{"text":"tuple.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipSecond/Parser-Implementations":{"url":"\/documentation\/parsing\/parsers\/skipsecond\/parser-implementations","abstract":[],"role":"collectionGroup","title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond\/Parser-Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"url":"\/documentation\/parsing\/parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","title":"Parsers","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipSecond/take(_:)-2hjd":{"abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning both outputs in a","type":"text"},{"text":" ","type":"text"},{"text":"tuple.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/skipsecond\/take(_:)-2hjd","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond\/take(_:)-2hjd","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"text":"Take2","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take2V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"title":"take(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take2":{"title":"Parsers.Take2","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","url":"\/documentation\/parsing\/parsers\/take2","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take2","kind":"identifier"}],"abstract":[{"text":"A parser that runs two parsers, one after the other, and returns both outputs in a tuple.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Take2","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","title":"Parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipSecond":{"url":"\/documentation\/parsing\/parsers\/skipsecond","abstract":[{"text":"A parser that runs two parsers, one after the other, taking only the output of the first","type":"text"},{"text":" ","type":"text"},{"text":"parser.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SkipSecond","kind":"identifier"}],"title":"Parsers.SkipSecond","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","navigatorTitle":[{"text":"SkipSecond","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipSecond/map(_:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"map(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond\/map(_:)","url":"\/documentation\/parsing\/parsers\/skipsecond\/map(_:)","type":"topic"}}}