{"metadata":{"roleHeading":"Structure","externalID":"s:7Parsing9AnyParserV","role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"symbolKind":"struct","title":"AnyParser"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser forwards its "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","isActive":true},{"type":"text","text":" method to an arbitrary underlying parser having the same"},{"type":"text","text":" "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, hiding the specifics of the underlying "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"},{"type":"text","text":" to wrap a publisher whose type has details you donâ€™t want to expose across API"},{"type":"text","text":" "},{"type":"text","text":"boundaries, such as different modules. When you use type erasure this way, you can change the"},{"type":"text","text":" "},{"type":"text","text":"underlying parser over time without affecting existing clients."}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparser"]}],"kind":"symbol","schemaVersion":{"minor":2,"major":0,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-47tyc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-71nto"]},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/Parser-Implementations"],"title":"Default Implementations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-71nto":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-71nto","title":"init(_:)","type":"topic","abstract":[{"text":"Creates a type-erasing parser to wrap the given parser.","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/anyparser\/init(_:)-71nto","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","title":"Parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"title":"AnyParser","url":"\/documentation\/parsing\/anyparser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"abstract":[{"text":"A type-erased parser of ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-47tyc":{"abstract":[{"type":"text","text":"Creates a parser that wraps the given closure in its "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","type":"reference"},{"type":"text","text":" method."}],"role":"symbol","url":"\/documentation\/parsing\/anyparser\/init(_:)-47tyc","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-47tyc","title":"init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"((","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?)","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","role":"symbol","type":"topic","title":"parse(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/parsing\/anyparser\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/eraseToAnyParser()":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/eraseToAnyParser()","title":"eraseToAnyParser()","type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/anyparser\/erasetoanyparser()","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/Parser-Implementations":{"url":"\/documentation\/parsing\/anyparser\/parser-implementations","title":"Parser Implementations","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/Parser-Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing","type":"topic","kind":"symbol"}}}