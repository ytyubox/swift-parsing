{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ignoreOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","text":"Skip","preciseIdentifier":"s:7Parsing4SkipV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that discards its output."}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/ignoreOutput()"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ignoreOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Skip","preciseIdentifier":"s:7Parsing4SkipV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6ParserPAAE12ignoreOutputAA4SkipVyxGyF::SYNTHESIZED::s:7Parsing7NewlineV","role":"symbol","extendedModule":"Parsing","title":"ignoreOutput()","symbolKind":"method","roleHeading":"Instance Method"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/Parser-Implementations"]]},"schemaVersion":{"patch":0,"minor":2,"major":0},"abstract":[{"text":"Returns a parser that discards the output of this parser by returning ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" instead.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/newline\/ignoreoutput()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","type":"topic","title":"Skip","url":"\/documentation\/parsing\/skip","abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Skip"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/Parser-Implementations":{"title":"Parser Implementations","url":"\/documentation\/parsing\/newline\/parser-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/Parser-Implementations","type":"topic","role":"collectionGroup","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/ignoreOutput()":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/ignoreOutput()","url":"\/documentation\/parsing\/newline\/ignoreoutput()","title":"ignoreOutput()","abstract":[{"text":"Returns a parser that discards the output of this parser by returning ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" instead.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ignoreOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing4SkipV","text":"Skip","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"url":"\/documentation\/parsing\/newline","title":"Newline","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input.","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}]}}}