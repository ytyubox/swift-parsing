{"metadata":{"externalID":"s:7Parsing10StartsWithVAASQ7ElementRpzrlEyACyxGqd__cSlRd__ADQyd__AERSlufc","role":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", "},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Input.SubSequence"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Input.Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Initializer","extendedModule":"Parsing","title":"init(_:)","modules":[{"name":"Parsing"}],"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"PossiblePrefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"possiblePrefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"possiblePrefix","content":[{"type":"paragraph","inlineContent":[{"text":"A sequence to compare to the start of an input sequence.","type":"text"}]}]}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/startswith\/init(_:)"]}],"abstract":[{"type":"text","text":"Initializes a parser that successfully returns "},{"code":"Void","type":"codeVoice"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"type":"text","text":"are equivalent to the elements in another sequence."}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"code":"Input.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","title":"init(_:)","type":"topic","abstract":[{"text":"Initializes a parser that successfully returns ","type":"text"},{"type":"codeVoice","code":"Void"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"type":"text","text":"are equivalent to the elements in another sequence."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"PossiblePrefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/startswith\/init(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"url":"\/documentation\/parsing","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"StartsWith","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"title":"StartsWith","url":"\/documentation\/parsing\/startswith","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"role":"symbol"}}}