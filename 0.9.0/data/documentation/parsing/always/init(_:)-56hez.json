{"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/always\/init(_:)-56hez"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always"]]},"metadata":{"title":"init(_:)","modules":[{"name":"Parsing"}],"symbolKind":"init","externalID":"s:7Parsing6AlwaysVyACyxq_Gq_cfc","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Initializer"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/init(_:)-56hez","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"abstract":[{"text":"A parser that always succeeds with the given value, and does not consume any input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","navigatorTitle":[{"text":"Always","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/always","type":"topic","title":"Always"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","role":"symbol","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","type":"topic","url":"\/documentation\/parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Always/init(_:)-56hez":{"url":"\/documentation\/parsing\/always\/init(_:)-56hez","kind":"symbol","type":"topic","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/init(_:)-56hez","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}