{"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipooov\/parserprinter-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV\/print(_:into:)"],"title":"Instance Methods","generated":true}],"metadata":{"role":"collectionGroup","modules":[{"name":"Parsing"}],"title":"ParserPrinter Implementations"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV\/ParserPrinter-Implementations"},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"title":"Parse","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOV/eraseToAnyParserPrinter()":{"title":"eraseToAnyParserPrinter()","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipooov\/erasetoanyparserprinter()","role":"symbol","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV\/eraseToAnyParserPrinter()"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","type":"topic","url":"\/documentation\/parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOV":{"title":"ParserBuilder.ZipOOOV","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ZipOOOV","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipooov","navigatorTitle":[{"text":"ZipOOOV","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOV/print(_:)":{"abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV\/print(_:)","title":"print(_:)","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipooov\/print(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"title":"ParserBuilder","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"url":"\/documentation\/parsing\/parserbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","role":"symbol","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOOOV/print(_:into:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOOOV\/print(_:into:)","title":"print(_:into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipooov\/print(_:into:)","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"P0","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P1","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P2","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P3","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P0.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P2.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P2.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"P3.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]}}}}