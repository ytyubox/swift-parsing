{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter"},{"text":" wrapping this parser-printer.","type":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This form of "},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"type":"text","text":" preserves abstraction across API boundaries, such as different"},{"type":"text","text":" "},{"type":"text","text":"modules."}],"type":"paragraph"},{"inlineContent":[{"text":"When you expose your composed parser-printers as the ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","isActive":true},{"text":" type, you can change","type":"text"},{"text":" ","type":"text"},{"text":"the underlying implementation over time without affecting existing clients.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Equivalent to passing "},{"type":"codeVoice","code":"self"},{"type":"text","text":" to "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOOV\/eraseToAnyParserPrinter()","interfaceLanguage":"swift"},"metadata":{"title":"eraseToAnyParserPrinter()","extendedModule":"Parsing","symbolKind":"method","role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"text":">","kind":"text"}],"externalID":"s:7Parsing13ParserPrinterPAAE010eraseToAnybC0AA0fbC0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing13ParserBuilderO8ZipOVOOVV","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOOV","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOOV\/ParserPrinter-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipovoov\/erasetoanyparserprinter()"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVOOV":{"role":"symbol","title":"ParserBuilder.ZipOVOOV","url":"\/documentation\/parsing\/parserbuilder\/zipovoov","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipOVOOV"}],"navigatorTitle":[{"kind":"identifier","text":"ZipOVOOV"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOOV","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"title":"ParserBuilder","role":"symbol","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"url":"\/documentation\/parsing\/parserbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVOOV/ParserPrinter-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/parsing\/parserbuilder\/zipovoov\/parserprinter-implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOOV\/ParserPrinter-Implementations","title":"ParserPrinter Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter":{"abstract":[{"text":"A type-erased parser-printer of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}],"title":"AnyParserPrinter","url":"\/documentation\/parsing\/anyparserprinter","role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"title":"Parse","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","role":"symbol","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(_:)":{"abstract":[{"text":"Creates a type-erasing parser-printer to wrap the given parser-printer.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","title":"init(_:)","url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVOOV/eraseToAnyParserPrinter()":{"role":"symbol","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"kind":"symbol","title":"eraseToAnyParserPrinter()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOOV\/eraseToAnyParserPrinter()","url":"\/documentation\/parsing\/parserbuilder\/zipovoov\/erasetoanyparserprinter()"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","type":"topic","url":"\/documentation\/parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol"}}}