{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser"]]},"metadata":{"role":"collectionGroup","title":"ParserPrinter Implementations","modules":[{"name":"Parsing"}]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/ParserPrinter-Implementations"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(_:into:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(into:)"],"title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/parserprinter-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print()","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print()","title":"print()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"_EmptyInitializable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/eraseToAnyParserPrinter()":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/eraseToAnyParserPrinter()","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/erasetoanyparserprinter()","title":"eraseToAnyParserPrinter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","type":"topic","url":"\/documentation\/parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print(_:into:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(_:into:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print(_:into:)","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":", "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":", "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"CaseIterable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RawRepresentable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Prefix","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", "},{"code":"Input.Element","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Prefix.Element","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Output.RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Comparable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"title":"print(_:into:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print(into:)":{"title":"print(into:)","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print(into:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(into:)","abstract":[{"type":"text","text":"Attempts to print into a nebulous piece of data."}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}],"title":"Parsers.CaseIterableRawRepresentableParser","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic","title":"Parsers","url":"\/documentation\/parsing\/parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(_:)","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print(_:)","abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"kind":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"role":"symbol","title":"print(_:)"}}}