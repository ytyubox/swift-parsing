{"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"externalID":"s:7Parsing13ParserPrinterPAAyt6OutputRtzrlE5print4intoy5InputQzz_tKF::SYNTHESIZED::s:7Parsing10PrefixUpToV","extendedModule":"Parsing","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"symbolKind":"method","modules":[{"name":"Parsing"}],"title":"print(into:)","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A nebulous, mutable piece of data to be incrementally printed into."}],"type":"paragraph"}],"name":"input"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(into:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations"]]},"variants":[{"paths":["\/documentation\/parsing\/prefixupto\/print(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Attempts to print into a nebulous piece of data."}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/prefixupto\/parserprinter-implementations","abstract":[],"role":"collectionGroup","title":"ParserPrinter Implementations","type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/ParserPrinter-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","role":"symbol","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","type":"topic","url":"\/documentation\/parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/print(into:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/print(into:)","title":"print(into:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Attempts to print into a nebulous piece of data."}],"url":"\/documentation\/parsing\/prefixupto\/print(into:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/prefixupto","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"kind":"symbol","title":"PrefixUpTo","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"}}}