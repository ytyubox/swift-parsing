{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"The various operators defined as extensions on "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" implement their functionality as"},{"type":"text","text":" "},{"type":"text","text":"classes or structures that extend this enumeration. For example, the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","isActive":true},{"type":"text","text":" "},{"type":"text","text":"operator returns a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","isActive":true},{"type":"text","text":" parser."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers"]}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"title":"Parsers","externalID":"s:7Parsing7ParsersO","roleHeading":"Enumeration","role":"symbol","modules":[{"name":"Parsing"}],"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"symbolKind":"enum"},"sections":[],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/StartsWith":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"url":"\/documentation\/parsing\/parsers\/startswith","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","type":"topic","title":"Parsers.StartsWith","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/End":{"type":"topic","title":"Parsers.End","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","url":"\/documentation\/parsing\/parsers\/end","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Identity":{"abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Identity","kind":"symbol","url":"\/documentation\/parsing\/parsers\/identity","title":"Parsers.Identity","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Identity","kind":"identifier"}],"navigatorTitle":[{"text":"Identity","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"BoolParser"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/boolparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoolParser"}],"abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}],"title":"Parsers.BoolParser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ReplaceError"}],"url":"\/documentation\/parsing\/parsers\/replaceerror","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","title":"Parsers.ReplaceError","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReplaceError"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"kind":"symbol","abstract":[{"text":"A parser that outputs the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" result of calling the given transformation with the output","type":"text"},{"text":" ","type":"text"},{"text":"of its upstream parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","type":"topic","url":"\/documentation\/parsing\/parsers\/compactmap","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}],"title":"Parsers.CompactMap","navigatorTitle":[{"kind":"identifier","text":"CompactMap"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Whitespace":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/parsing\/parsers\/whitespace","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"title":"Parsers.Whitespace","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"role":"symbol","title":"Parsers.OneOfMany","navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/oneofmany","type":"topic","kind":"symbol","abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixUpTo":{"url":"\/documentation\/parsing\/parsers\/prefixupto","navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"type":"topic","abstract":[],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","title":"Parsers.PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}],"title":"Parsers.CaseIterableRawRepresentableParser","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaseIterableRawRepresentableParser"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Always":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","navigatorTitle":[{"kind":"identifier","text":"Always"}],"type":"topic","title":"Parsers.Always","url":"\/documentation\/parsing\/parsers\/always","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"abstract":[],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OverridePrinting":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OverridePrinting","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parsers\/overrideprinting","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OverridePrinting"}],"navigatorTitle":[{"kind":"identifier","text":"OverridePrinting"}],"abstract":[{"type":"text","text":"A parser-printer that parses with the given parser and prints with the given parser-printer."}],"title":"Parsers.OverridePrinting"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","abstract":[{"text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units.","type":"text"}],"navigatorTitle":[{"text":"UUIDParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/uuidparser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UUIDParser","kind":"identifier"}],"title":"Parsers.UUIDParser","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Many":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"title":"Parsers.Many","url":"\/documentation\/parsing\/parsers\/many","kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","role":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","type":"topic","url":"\/documentation\/parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Print":{"title":"Parsers.Print","url":"\/documentation\/parsing\/parsers\/print","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Print","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"Print","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Filter"}],"abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"navigatorTitle":[{"kind":"identifier","text":"Filter"}],"url":"\/documentation\/parsing\/parsers\/filter","type":"topic","role":"symbol","kind":"symbol","title":"Parsers.Filter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"title":"Parsers.IntParser","url":"\/documentation\/parsing\/parsers\/intparser","abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"type":"codeVoice","code":"+"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":" sign for signed integer"},{"type":"text","text":" "},{"type":"text","text":"types) from the beginning of a collection of UTF8 code units."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","navigatorTitle":[{"kind":"identifier","text":"IntParser"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/TryPrint":{"abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/TryPrint","kind":"symbol","url":"\/documentation\/parsing\/parsers\/tryprint","title":"Parsers.TryPrint","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TryPrint","kind":"identifier"}],"navigatorTitle":[{"text":"TryPrint","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Lazy":{"type":"topic","title":"Parsers.Lazy","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","url":"\/documentation\/parsing\/parsers\/lazy","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Lazy"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixThrough":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"type":"topic","title":"Parsers.PrefixThrough","kind":"symbol","url":"\/documentation\/parsing\/parsers\/prefixthrough","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","role":"symbol","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/AnyParser":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/anyparser","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"title":"Parsers.AnyParser","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","url":"\/documentation\/parsing\/parsers\/pullback","abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a downstream parser."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pullback"}],"type":"topic","title":"Parsers.Pullback","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pullback"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/parsing\/parsers\/stream","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Stream"}],"title":"Parsers.Stream","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-4hsj5":{"kind":"symbol","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-4hsj5","type":"topic","role":"symbol","url":"\/documentation\/parsing\/parser\/map(_:)-4hsj5","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PipeEnd":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PipeEnd","title":"Parsers.PipeEnd","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PipeEnd"}],"kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/parsing\/parsers\/pipeend","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PipeEnd"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"title":"Parsers.Conditional","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","url":"\/documentation\/parsing\/parsers\/conditional"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Newline":{"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"kind":"symbol","title":"Parsers.Newline","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","deprecated":true,"type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"title":"Parsers.Map","navigatorTitle":[{"kind":"identifier","text":"Map"}],"abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given closure."}],"url":"\/documentation\/parsing\/parsers\/map","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Rest":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","url":"\/documentation\/parsing\/parsers\/rest","type":"topic","abstract":[],"navigatorTitle":[{"text":"Rest","kind":"identifier"}],"kind":"symbol","title":"Parsers.Rest"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConversion":{"abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given conversion."}],"navigatorTitle":[{"kind":"identifier","text":"MapConversion"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MapConversion","kind":"identifier"}],"kind":"symbol","title":"Parsers.MapConversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","type":"topic","url":"\/documentation\/parsing\/parsers\/mapconversion","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic","title":"Parsers","url":"\/documentation\/parsing\/parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Prefix":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","role":"symbol","type":"topic","title":"Parsers.Prefix"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"abstract":[{"type":"text","text":"A parser that transforms the output of another parser into a new parser."}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/flatmap","title":"Parsers.FlatMap","type":"topic","role":"symbol","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatMap","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Fail":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fail"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fail"}],"url":"\/documentation\/parsing\/parsers\/fail","title":"Parsers.Fail"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapConstant"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MapConstant"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","type":"topic","title":"Parsers.MapConstant","url":"\/documentation\/parsing\/parsers\/mapconstant","abstract":[{"text":"A parser that replaces another parser’s ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" output with some new output.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"type":"topic","title":"Parsers.OptionalVoid","url":"\/documentation\/parsing\/parsers\/optionalvoid","kind":"symbol","abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"title":"Parsers.Pipe","url":"\/documentation\/parsing\/parsers\/pipe","abstract":[{"text":"A parser that runs this parser, pipes its output into the given parser, and returns the output","type":"text"},{"text":" ","type":"text"},{"text":"of the given parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pipe","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"Pipe","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Skip":{"title":"Parsers.Skip","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Skip"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parsers\/skip","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatParser"}],"title":"Parsers.FloatParser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a collection of UTF-8","type":"text"},{"text":" ","type":"text"},{"text":"code units.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/floatparser","navigatorTitle":[{"kind":"identifier","text":"FloatParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/First":{"abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"role":"symbol","kind":"symbol","title":"Parsers.First","url":"\/documentation\/parsing\/parsers\/first","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","navigatorTitle":[{"kind":"identifier","text":"First"}]}}}