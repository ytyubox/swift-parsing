{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"A more well-structured value parsed from the given input.","type":"text"}]}],"kind":"content"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A nebulous piece of data to be parsed."}]}],"name":"input"}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Rather than having to create a mutable input value and feed it to the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","isActive":true},{"type":"text","text":" "},{"type":"text","text":"method like this:"}]},{"code":["var input = ...","let output = try parser.parse(&input)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"You can just feed the input directly:","type":"text"}]},{"code":["let output = try parser.parse(input)"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"sections":[],"metadata":{"extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"title":"parse(_:)","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE5parsey6OutputQz5InputQzKF","role":"symbol","modules":[{"name":"Parsing"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-717qw"},"variants":[{"paths":["\/documentation\/parsing\/parser\/parse(_:)-717qw"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"generated":true,"title":"Running a parser","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq"]}],"abstract":[{"type":"text","text":"Parse an input value into an output. This method is more ergonomic to use than"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","isActive":true},{"type":"text","text":" because the input does not need to be inout."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-2wzcq":{"title":"parse(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/parsing\/parser\/parse(_:)-2wzcq","abstract":[{"type":"text","text":"Parse a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" into an output using a UTF-8 parser. This method is more ergnomic to use"},{"type":"text","text":" "},{"type":"text","text":"than "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"text":" because it accepts a plain string rather than a collection of","type":"text"},{"text":" ","type":"text"},{"text":"UTF-8 code units, and the input does not need to be ","type":"text"},{"type":"codeVoice","code":"inout"},{"text":".","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-6h1d0":{"role":"symbol","url":"\/documentation\/parsing\/parser\/parse(_:)-6h1d0","kind":"symbol","type":"topic","abstract":[{"text":"Parse a collection into an output using a parser that works on the collectionâ€™s ","type":"text"},{"code":"SubSequence","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This method is more ergnomic to use than ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"text":" because it accepts a","type":"text"},{"text":" ","type":"text"},{"text":"collection directly rather than its subsequence, and the input does not need to be ","type":"text"},{"type":"codeVoice","code":"inout"},{"text":".","type":"text"}],"title":"parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","role":"symbol","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","role":"collection","type":"topic","url":"\/documentation\/parsing","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-717qw":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-717qw","abstract":[{"type":"text","text":"Parse an input value into an output. This method is more ergonomic to use than"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},{"text":" because the input does not need to be inout.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"type":"topic","title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-717qw","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-76tcw":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"defaultImplementations":3,"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"required":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","url":"\/documentation\/parsing\/parser\/parse(_:)-76tcw","title":"parse(_:)","kind":"symbol","role":"symbol","type":"topic"}}}