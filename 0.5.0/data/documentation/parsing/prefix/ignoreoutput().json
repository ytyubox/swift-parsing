{"schemaVersion":{"minor":2,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ignoreOutput","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Skip","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing4SkipV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"}],"metadata":{"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6ParserPAAE12ignoreOutputAA4SkipVyxGyF::SYNTHESIZED::s:7Parsing6PrefixV","platforms":[],"roleHeading":"Instance Method","title":"ignoreOutput()","extendedModule":"Parsing","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Skip","preciseIdentifier":"s:7Parsing4SkipV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol"},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Parser.ignoreOutput()","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix\/ignoreoutput()"]}],"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'Skip' instead."}],"type":"paragraph"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/ignoreOutput()","interfaceLanguage":"swift"},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"title":"Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations","url":"\/documentation\/parsing\/prefix\/parser-implementations","title":"Parser Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/ignoreOutput()":{"url":"\/documentation\/parsing\/prefix\/ignoreoutput()","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/ignoreOutput()","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ignoreOutput"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing4SkipV","text":"Skip","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"ignoreOutput()","type":"topic","deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","type":"topic","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"kind":"symbol","title":"Skip","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"url":"\/documentation\/parsing\/skip"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","url":"\/documentation\/parsing\/prefix","title":"Prefix","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"type":"topic"}}}