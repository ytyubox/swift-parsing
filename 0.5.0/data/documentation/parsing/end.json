{"sections":[],"kind":"symbol","metadata":{"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"role":"symbol","modules":[{"name":"Parsing"}],"title":"End","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"End"}],"externalID":"s:7Parsing3EndV"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"Useful as a final parser in a long sequence of parsers to guarantee that all input has been","type":"text"},{"text":" ","type":"text"},{"text":"consumed.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["let parser = Parse {","  Many {","    Int.parser()","  } separator: {","    \",\"","  }","","  End()  \/\/ All input should be consumed.","}","","var input = \"1,2,3\"[...]","parser.parse(&input) \/\/ [1, 2, 3]","","input = \"1,2,3,hello\"","parser.parse(&input) \/\/ nil"],"type":"codeListing"}],"kind":"content"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-2egll","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-7gmzt","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-8lvil"]},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/Parser-Implementations"],"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"variants":[{"paths":["\/documentation\/parsing\/end"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":2,"major":0,"patch":0},"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/End":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"url":"\/documentation\/parsing\/end","title":"End","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"End"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/End/init()-7gmzt":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-7gmzt","abstract":[],"title":"init()","url":"\/documentation\/parsing\/end\/init()-7gmzt","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End/parse(_:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/parse(_:)","title":"parse(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"url":"\/documentation\/parsing\/end\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/End/init()-8lvil":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[],"url":"\/documentation\/parsing\/end\/init()-8lvil","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init()","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-8lvil","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/End/init()-2egll":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()-2egll","abstract":[],"title":"init()","url":"\/documentation\/parsing\/end\/init()-2egll","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End/Parser-Implementations":{"title":"Parser Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/Parser-Implementations","url":"\/documentation\/parsing\/end\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"title":"Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"}}}