{"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/upstream"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/Parser-Implementations"]}],"variants":[{"paths":["\/documentation\/parsing\/peek"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"It lets you “peek” to see what output the parser would parse."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, identifiers (variables, functions, etc.) in Swift allow the first character to be a","type":"text"},{"text":" ","type":"text"},{"text":"letter or underscore, but not a digit, but subsequent characters can be digits. ","type":"text"},{"inlineContent":[{"type":"text","text":"E.g."}],"type":"emphasis"},{"text":", ","type":"text"},{"type":"codeVoice","code":"foo123"},{"text":" ","type":"text"},{"text":"is a valid identifier, but ","type":"text"},{"type":"codeVoice","code":"123foo"},{"text":" is not. We can create an identifier parser by using ","type":"text"},{"type":"codeVoice","code":"Peek"},{"text":" ","type":"text"},{"text":"to first check if the input starts with a letter or underscore, and if it does, return the","type":"text"},{"text":" ","type":"text"},{"text":"remainder of the input up to the first character that is not a letter, a digit, or an","type":"text"},{"text":" ","type":"text"},{"text":"underscore.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let identifier = Parse {","  Skip {","    Peek { Prefix(1) { $0.isLetter || $0 == \"_\" } }","  }","  Prefix { $0.isNumber || $0.isLetter || $0 == \"_\" }","}"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"sections":[],"abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"navigatorTitle":[{"text":"Peek","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}],"title":"Peek","role":"symbol","externalID":"s:7Parsing4PeekV","symbolKind":"struct","modules":[{"name":"Parsing"}],"roleHeading":"Structure"},"schemaVersion":{"patch":0,"major":0,"minor":2},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"title":"Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"navigatorTitle":[{"kind":"identifier","text":"Peek"}],"kind":"symbol","abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","role":"symbol","title":"Peek","url":"\/documentation\/parsing\/peek","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peek"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Peek/parse(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"text":"?","kind":"text"}],"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/parse(_:)","kind":"symbol","type":"topic","title":"parse(_:)","url":"\/documentation\/parsing\/peek\/parse(_:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"abstract":[{"text":"Construct a parser that runs the given parser, but does not consume any input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/init(_:)","kind":"symbol","type":"topic","title":"init(_:)","url":"\/documentation\/parsing\/peek\/init(_:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek/Parser-Implementations":{"kind":"article","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/Parser-Implementations","role":"collectionGroup","title":"Parser Implementations","url":"\/documentation\/parsing\/peek\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek/upstream":{"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"upstream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek\/upstream","kind":"symbol","type":"topic","title":"upstream","url":"\/documentation\/parsing\/peek\/upstream","role":"symbol"}}}