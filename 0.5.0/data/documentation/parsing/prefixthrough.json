{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-52m64","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-67yf7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-8iizp","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/areEquivalent","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/possibleMatch"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/Parser-Implementations"],"generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"This parser is named after ","type":"text"},{"code":"Sequence.prefix(through:)","type":"codeVoice"},{"text":", and uses similar logic under the hood to","type":"text"},{"text":" ","type":"text"},{"text":"consume and return input through a particular subsequence.","type":"text"}],"type":"paragraph"},{"code":["let lineParser = PrefixThrough<Substring>(\"\\n\")","","var input = \"Hello\\nworld\\n\"[...]","line.parse(&input) \/\/ \"Hello\\n\"","input \/\/ \"world\\n\""],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"kind":"symbol","schemaVersion":{"minor":2,"major":0,"patch":0},"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"symbolKind":"struct","roleHeading":"Structure","externalID":"s:7Parsing13PrefixThroughV","title":"PrefixThrough","role":"symbol","modules":[{"name":"Parsing"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/prefixthrough"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:)-52m64":{"url":"\/documentation\/parsing\/prefixthrough\/init(_:)-52m64","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-52m64","abstract":[],"role":"symbol","title":"init(_:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"."},{"text":"UTF8View","preciseIdentifier":"s:SS8UTF8ViewV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:)-67yf7":{"kind":"symbol","url":"\/documentation\/parsing\/prefixthrough\/init(_:)-67yf7","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"title":"init(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-67yf7","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:by:)":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefixthrough\/init(_:by:)","abstract":[],"title":"init(_:by:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","abstract":[],"title":"Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","title":"PrefixThrough","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"url":"\/documentation\/parsing\/prefixthrough","kind":"symbol","navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/possibleMatch":{"kind":"symbol","title":"possibleMatch","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possibleMatch"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","abstract":[],"url":"\/documentation\/parsing\/prefixthrough\/possiblematch","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/possibleMatch","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/Parser-Implementations","title":"Parser Implementations","abstract":[],"url":"\/documentation\/parsing\/prefixthrough\/parser-implementations","kind":"article","type":"topic","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/areEquivalent":{"abstract":[],"title":"areEquivalent","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/areEquivalent","url":"\/documentation\/parsing\/prefixthrough\/areequivalent","type":"topic","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"areEquivalent","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/parse(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/parse(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"title":"parse(_:)","url":"\/documentation\/parsing\/prefixthrough\/parse(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:)-8iizp":{"title":"init(_:)","url":"\/documentation\/parsing\/prefixthrough\/init(_:)-8iizp","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-8iizp","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol"}}}