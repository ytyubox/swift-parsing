{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Many"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Parsing"}],"title":"Many","externalID":"s:7Parsing4ManyV"},"sections":[],"kind":"symbol","schemaVersion":{"patch":0,"minor":2,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/many"]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:separator:_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/upstream"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations"],"generated":true,"title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Separator","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, given a comma-separated string of numbers, one could parse out an array of"},{"type":"text","text":" "},{"type":"text","text":"integers:"}]},{"syntax":"swift","code":["var input = \"1,2,3\"[...]","let output = Many(Int.parser(), separator: \",\").parse(&input)","precondition(input == \"\")","precondition(output == [1, 2, 3])"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The most general version of "},{"type":"codeVoice","code":"Many"},{"type":"text","text":" takes a closure that can customize how outputs accumulate,"},{"type":"text","text":" "},{"type":"text","text":"much like "},{"type":"codeVoice","code":"Sequence.reduce(into:_)"},{"type":"text","text":". We could, for example, sum the numbers as we parse them"},{"type":"text","text":" "},{"type":"text","text":"instead of accumulating each value in an array:"}]},{"syntax":null,"code":["let sumParser = Many(","  Int.parser(of: Substring.self),","  into: 0,","  separator: StartsWith(\",\"),","  +=",")","var input = \"1,2,3\"[...]","let output = Many(Int.parser(), into: 0, separator: \",\").parse(&input)","precondition(input == \"\")","precondition(output == 6)"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:atLeast:atMost:separator:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:separator:)","role":"symbol","title":"init(_:atLeast:atMost:separator:)","kind":"symbol","url":"\/documentation\/parsing\/many\/init(_:atleast:atmost:separator:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Upstream","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Upstream.Output]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Upstream.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser at least and at most the given"},{"type":"text","text":" "},{"type":"text","text":"number of times, accumulating the outputs in an array."}],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Separator"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/updateAccumulatingResult":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult","role":"symbol","title":"updateAccumulatingResult","kind":"symbol","url":"\/documentation\/parsing\/many\/updateaccumulatingresult","abstract":[],"type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateAccumulatingResult","kind":"identifier"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:atLeast:atMost:separator:_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:separator:_:)","role":"symbol","title":"init(_:into:atLeast:atMost:separator:_:)","kind":"symbol","url":"\/documentation\/parsing\/many\/init(_:into:atleast:atmost:separator:_:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs into a result with a given closure.","type":"text"}],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/parse(_:)":{"title":"parse(_:)","url":"\/documentation\/parsing\/many\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"text":"Result","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:atLeast:atMost:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:atLeast:atMost:)","role":"symbol","title":"init(_:atLeast:atMost:)","kind":"symbol","url":"\/documentation\/parsing\/many\/init(_:atleast:atmost:)","conformance":{"constraints":[{"type":"codeVoice","code":"Upstream"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"code":"Result","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"[Upstream.Output]","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Upstream.Input, Void>","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs in an array.","type":"text"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/separator":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","role":"symbol","title":"separator","kind":"symbol","url":"\/documentation\/parsing\/many\/separator","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"separator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","role":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:atLeast:atMost:_:)":{"role":"symbol","title":"init(_:into:atLeast:atMost:_:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser at least and at most the given","type":"text"},{"text":" ","type":"text"},{"text":"number of times, accumulating the outputs into a result with a given closure.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Upstream","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Upstream.Input, Void>","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/parsing\/many\/init(_:into:atleast:atmost:_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:atLeast:atMost:_:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","type":"topic","role":"collection","abstract":[],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"title":"Many","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/upstream":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"upstream"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"title":"upstream","role":"symbol","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/many\/upstream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/upstream"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/Parser-Implementations":{"role":"collectionGroup","url":"\/documentation\/parsing\/many\/parser-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations","title":"Parser Implementations","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/minimum":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","role":"symbol","title":"minimum","kind":"symbol","url":"\/documentation\/parsing\/many\/minimum","abstract":[],"type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimum","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/initialResult":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"initialResult"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"}],"title":"initialResult","role":"symbol","abstract":[],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/many\/initialresult","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/maximum":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum","role":"symbol","title":"maximum","kind":"symbol","url":"\/documentation\/parsing\/many\/maximum","abstract":[],"type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximum","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}]}}}