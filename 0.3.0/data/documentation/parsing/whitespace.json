{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"abstract":[{"text":"A parser that consumes all ASCII whitespace from the beginning of the input.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/whitespace"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s4UTF8a","kind":"typeIdentifier","text":"UTF8"},{"kind":"text","text":"."},{"preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","kind":"typeIdentifier","text":"CodeUnit"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Parser-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo"}],"sections":[],"metadata":{"roleHeading":"Structure","externalID":"s:7Parsing10WhitespaceV","title":"Whitespace","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"modules":[{"name":"Parsing"}],"role":"symbol","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"},"schemaVersion":{"major":0,"patch":0,"minor":2},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/init()":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init()","role":"symbol","title":"init()","kind":"symbol","url":"\/documentation\/parsing\/whitespace\/init()","abstract":[],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/parse(_:)":{"title":"parse(_:)","role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?"}],"url":"\/documentation\/parsing\/whitespace\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/parse(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Parser-Implementations","url":"\/documentation\/parsing\/whitespace\/parser-implementations","title":"Parser Implementations","abstract":[],"kind":"article","type":"topic","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","role":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser","title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","title":"Whitespace","abstract":[{"type":"text","text":"A parser that consumes all ASCII whitespace from the beginning of the input."}],"navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","type":"topic","role":"collection","abstract":[],"kind":"symbol"}}}