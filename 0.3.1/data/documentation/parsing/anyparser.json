{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"schemaVersion":{"minor":2,"major":0,"patch":0},"abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"sections":[],"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Conforms To"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"This parser forwards its "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)","type":"reference","isActive":true},{"type":"text","text":" method to an arbitrary underlying parser having the same"},{"type":"text","text":" "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" types, hiding the specifics of the underlying "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","isActive":true},{"text":" to wrap a publisher whose type has details you donâ€™t want to expose across API","type":"text"},{"text":" ","type":"text"},{"text":"boundaries, such as different modules. When you use type erasure this way, you can change the","type":"text"},{"text":" ","type":"text"},{"text":"underlying parser over time without affecting existing clients.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparser"]}],"metadata":{"externalID":"s:7Parsing9AnyParserV","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"symbolKind":"struct","roleHeading":"Structure","role":"symbol","modules":[{"name":"Parsing"}],"title":"AnyParser","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-47tyc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-71nto"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/Parser-Implementations"],"title":"Default Implementations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-71nto":{"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/parsing\/anyparser\/init(_:)-71nto","role":"symbol","abstract":[{"type":"text","text":"Creates a type-erasing parser to wrap the given parser."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-71nto"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","abstract":[],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/eraseToAnyParser()":{"role":"symbol","url":"\/documentation\/parsing\/anyparser\/erasetoanyparser()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/eraseToAnyParser()","type":"topic","title":"eraseToAnyParser()","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","title":"Parser","type":"topic","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/init(_:)-47tyc":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","title":"init(_:)","url":"\/documentation\/parsing\/anyparser\/init(_:)-47tyc","abstract":[{"text":"Creates a parser that wraps the given closure in its ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)"},{"type":"text","text":" method."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/init(_:)-47tyc","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"title":"AnyParser","url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","kind":"symbol","type":"topic","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"abstract":[{"text":"A type-erased parser of ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/Parser-Implementations":{"type":"topic","url":"\/documentation\/parsing\/anyparser\/parser-implementations","abstract":[],"title":"Parser Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser/parse(_:)":{"type":"topic","url":"\/documentation\/parsing\/anyparser\/parse(_:)","kind":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}],"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser\/parse(_:)"}}}