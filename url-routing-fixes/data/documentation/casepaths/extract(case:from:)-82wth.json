{"abstract":[{"text":"Attempts to extract values associated with a given enum case initializer from a given root enum.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"embed","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"root","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"Values if they can be extracted from the given enum case initializer and root enum,"},{"type":"text","text":" "},{"type":"text","text":"otherwise "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An enum case initializer.","type":"text"}],"type":"paragraph"}],"name":"embed"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A root enum value."}]}],"name":"root"}]},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"code":["extract(case: Result<Int, Error>.success, from: .success(42))","\/\/ 42","extract(case: Result<Int, Error>.success, from: .failure(MyError())","\/\/ nil"],"syntax":"swift","type":"codeListing"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This function is only intended to be used with enum case initializers. Its behavior is","type":"text"},{"text":" ","type":"text"},{"text":"otherwise undefined.","type":"text"}]}],"type":"aside"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(case:from:)-82wth"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use case path literal syntax (e.g., '\/Root.caseName'), or '(\/Root.caseName).extract(from:)'","type":"text"}]}],"variants":[{"paths":["\/documentation\/casepaths\/extract(case:from:)-82wth"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","metadata":{"platforms":[],"roleHeading":"Function","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"symbolKind":"func","externalID":"s:9CasePaths7extract4case4fromq_SgxSgq_c_AFtr0_lF","title":"extract(case:from:)","modules":[{"name":"CasePaths"}],"role":"symbol"},"references":{"doc://co.pointfree.Parsing/documentation/CasePaths/extract(case:from:)-82wth":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"case"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(case:from:)-82wth","deprecated":true,"type":"topic","title":"extract(case:from:)","kind":"symbol","url":"\/documentation\/casepaths\/extract(case:from:)-82wth","role":"symbol","abstract":[{"text":"Attempts to extract values associated with a given enum case initializer from a given root enum.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/CasePaths":{"url":"\/documentation\/casepaths","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","role":"collection","title":"CasePaths","abstract":[]}}}