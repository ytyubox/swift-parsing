{"metadata":{"symbolKind":"func","externalID":"s:9CasePaths7extractyq_Sgxcxq_cr0_lF","modules":[{"name":"CasePaths"}],"role":"symbol","platforms":[],"roleHeading":"Function","title":"extract(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/casepaths\/extract(_:)-2jy2a"]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-2jy2a","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"embed"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"text":"A function that can attempt to extract associated values from an enum.","type":"text"}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"embed","content":[{"type":"paragraph","inlineContent":[{"text":"An enum case initializer.","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Use this function to create new transform functions to pass to higher-order methods like"},{"type":"text","text":" "},{"code":"compactMap","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"syntax":"swift","code":["[Result<Int, Error>.success(42), .failure(MyError()]","  .compactMap(extract(Result.success))","\/\/ [42]"],"type":"codeListing"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is only intended to be used with enum case initializers. Its behavior is"},{"type":"text","text":" "},{"type":"text","text":"otherwise undefined."}]}],"type":"aside"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"]]},"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use case path literal syntax (e.g., '\/Root.caseName')"}]}],"references":{"doc://co.pointfree.Parsing/documentation/CasePaths":{"url":"\/documentation\/casepaths","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","role":"collection","title":"CasePaths","abstract":[]},"doc://co.pointfree.Parsing/documentation/CasePaths/extract(_:)-2jy2a":{"title":"extract(_:)","deprecated":true,"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-2jy2a","kind":"symbol","abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/casepaths\/extract(_:)-2jy2a","role":"symbol"}}}