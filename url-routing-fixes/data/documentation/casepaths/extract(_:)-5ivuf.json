{"metadata":{"roleHeading":"Function","modules":[{"name":"CasePaths"}],"symbolKind":"func","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"extract(_:)","platforms":[],"role":"symbol","externalID":"s:9CasePaths7extractyq_SgxSgcADq_cr0_lF"},"variants":[{"paths":["\/documentation\/casepaths\/extract(_:)-5ivuf"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"text":" ","type":"text"},{"text":"initializer.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"embed","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A function that can attempt to extract associated values from an enum.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"name":"embed","content":[{"inlineContent":[{"text":"An enum case initializer.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this function to create new transform functions to pass to higher-order methods like","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"compactMap"},{"text":":","type":"text"}]},{"code":["[Result<Int, Error>.success(42), .failure(MyError()]","  .compactMap(extract(Result.success))","\/\/ [42]"],"type":"codeListing","syntax":"swift"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is only intended to be used with enum case initializers. Its behavior is"},{"type":"text","text":" "},{"type":"text","text":"otherwise undefined."}]}]}],"kind":"content"}],"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use case path literal syntax (e.g., '\/Root.caseName')"}],"type":"paragraph"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-5ivuf"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/CasePaths/extract(_:)-5ivuf":{"title":"extract(_:)","deprecated":true,"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-5ivuf","kind":"symbol","abstract":[{"type":"text","text":"Returns a function that can attempt to extract associated values from the given enum case"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/casepaths\/extract(_:)-5ivuf","role":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths":{"url":"\/documentation\/casepaths","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","role":"collection","title":"CasePaths","abstract":[]}}}