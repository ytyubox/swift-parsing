{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsePrint"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParserPrinters"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","preciseIdentifier":"s:7Parsing13ParserPrinterP","kind":"typeIdentifier","text":"ParserPrinter"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although you can build printers with the "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","isActive":true,"type":"reference"},{"type":"text","text":" entry point, as long as everything in the"},{"type":"text","text":" "},{"type":"text","text":"builder context is a printer, it doesn’t proper connote its intentions. By using "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"you can make your intentions clearer:"}]},{"type":"codeListing","code":["let welcoming = ParsePrint {","  \"Hello \"","  Int.parser()","  \"!\"","}","","try welcoming.parse(\"Hello 42!\") \/\/ 42","try welcoming.print(1729) \/\/ \"Hello 1729\""],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","type":"reference","isActive":true},{"text":" entry point can also help you catch errors earlier if you accidentally use","type":"text"},{"text":" ","type":"text"},{"text":"an operator that is not printer-friendly:","type":"text"}]},{"type":"codeListing","code":["let welcoming = ParsePrint {","  \"Hello \"","  Prefix { $0 != \"!\" }.map(String.init)","  \"!\"","}"],"syntax":"swift"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Generic struct "},{"type":"codeVoice","code":"ParsePrint"},{"type":"text","text":" requires that "},{"type":"codeVoice","code":"Parsers.Map<Prefix<Substring>, String>"},{"type":"text","text":" conform"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"ParserPrinter"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"code":"ParsePrint","type":"codeVoice"},{"text":" is a type alias for the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse"},{"text":" parser with its underlying parser constrained to","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"text":".","type":"text"}]}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(with:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parserPrinters"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/print(_:into:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/parseprint"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Parsing10ParsePrintV","roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Parsing"}],"navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}],"title":"ParsePrint","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"abstract":[{"text":"An entry to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"},{"text":" syntax that requires the builder to be a printer.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-8nbrc":{"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/parseprint\/init(_:with:)-8nbrc","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","type":"topic","title":"init(_:with:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(with:)":{"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/parseprint\/init(with:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(with:)","type":"topic","title":"init(with:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/print(_:into:)":{"abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/parsing\/parseprint\/print(_:into:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/print(_:into:)","type":"topic","title":"print(_:into:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-4k2am":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parseprint\/init(_:with:)-4k2am","role":"symbol","title":"init(_:with:)","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}],"title":"Parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parse","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parseprint\/parse(_:)","role":"symbol","title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","role":"symbol","url":"\/documentation\/parsing\/parserprinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","title":"ParserPrinter","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/parserPrinters":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parserPrinters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/parsing\/parseprint\/parserprinters","role":"symbol","title":"parserPrinters","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parserPrinters"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","abstract":[],"type":"topic","role":"collectionGroup","kind":"article","title":"Parser Implementations","url":"\/documentation\/parsing\/parseprint\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/ParserPrinter-Implementations":{"abstract":[],"title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations","type":"topic","url":"\/documentation\/parsing\/parseprint\/parserprinter-implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint":{"abstract":[{"type":"text","text":"An entry to "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","isActive":true},{"type":"text","text":" syntax that requires the builder to be a printer."}],"title":"ParsePrint","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsePrint"}],"navigatorTitle":[{"kind":"identifier","text":"ParsePrint"}],"url":"\/documentation\/parsing\/parseprint","kind":"symbol","role":"symbol"}}}