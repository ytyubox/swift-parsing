{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits\/Parser-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pipe","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]}]},{"content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that pipes this parserâ€™s output into another parser.  @inlinable"}]}],"kind":"content"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A parser that parses the output of this parser."}],"type":"paragraph"}],"name":"downstream"}],"kind":"parameters"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, we can try to parse an integer of exactly 4 digits by piping the output of"},{"type":"text","text":" "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","type":"reference","isActive":true},{"type":"text","text":" into an "},{"type":"codeVoice","code":"Int.parser()"},{"type":"text","text":":"}]},{"syntax":"swift","type":"codeListing","code":["let year = Prefix(4).pipe { Int.parser() }","","try year.parse(\"2022\")  \/\/ 2022","try year.parse(\"0123\")  \/\/ 123"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser fails if either the upstream or downstream parser fails. For example:"}]},{"syntax":"swift","type":"codeListing","code":["try year.parse(\"123\")","\/\/ error: unexpected input","\/\/  --> input:1:4","\/\/ 1 | 123","\/\/   |    ^ expected 1 more element","","try year.parse(\"fail!\")","\/\/ error: unexpected input","\/\/  --> input:1:1-4","\/\/ 1 | fail!","\/\/   | ^^^^ pipe: expected integer"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/digits\/pipe(_:)-550m7"]}],"metadata":{"symbolKind":"method","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","title":"pipe(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pipe","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","externalID":"s:7Parsing6ParserPAAE4pipeyAA7ParsersO4PipeVy_xqd__Gqd__yXEAaBRd__5InputQyd__6OutputRtzlF::SYNTHESIZED::s:7Parsing6DigitsV","roleHeading":"Instance Method"},"abstract":[{"text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns","type":"text"},{"text":" ","type":"text"},{"text":"the output of the given parser.","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits\/pipe(_:)-550m7"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Digits/Parser-Implementations":{"kind":"article","role":"collectionGroup","abstract":[],"type":"topic","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits\/Parser-Implementations","url":"\/documentation\/parsing\/digits\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Digits/pipe(_:)-550m7":{"title":"pipe(_:)","kind":"symbol","abstract":[{"text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns","type":"text"},{"text":" ","type":"text"},{"text":"the output of the given parser.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits\/pipe(_:)-550m7","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pipe","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO4PipeV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/digits\/pipe(_:)-550m7"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"title":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"abstract":[{"text":"A parser that runs this parser, pipes its output into the given parser, and returns the output","type":"text"},{"text":" ","type":"text"},{"text":"of the given parser.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"title":"Parsers.Pipe","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/pipe","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Digits":{"url":"\/documentation\/parsing\/digits","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Digits","kind":"identifier"}],"navigatorTitle":[{"text":"Digits","kind":"identifier"}],"title":"Digits","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","type":"topic","kind":"symbol","abstract":[{"text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code","type":"text"},{"text":" ","type":"text"},{"text":"units.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"type":"topic","url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","title":"Prefix"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"}}}