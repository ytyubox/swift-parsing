{"sections":[],"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"externalID":"s:7Parsing13ParserPrinterPA2A19_EmptyInitializable5InputRpzyt6OutputRtzrlE5printAFyKF::SYNTHESIZED::s:7Parsing13ParserBuilderO8ZipOVVVVV","title":"print()","symbolKind":"method","extendedModule":"Parsing","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","modules":[{"name":"Parsing"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVV\/print()"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVV","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVV\/ParserPrinter-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipovvvv\/print()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Attempts to print a nebulous piece of data."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"platforms":["Linux"]}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A nebulous value.","type":"text"}]}],"kind":"content"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVVVV/print()":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/parserbuilder\/zipovvvv\/print()","kind":"symbol","abstract":[{"type":"text","text":"Attempts to print a nebulous piece of data."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVV\/print()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"() "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","title":"print()"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}],"title":"Parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parse","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVVVV/ParserPrinter-Implementations":{"type":"topic","title":"ParserPrinter Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVV\/ParserPrinter-Implementations","abstract":[],"url":"\/documentation\/parsing\/parserbuilder\/zipovvvv\/parserprinter-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVVVV":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOVVVV","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"ZipOVVVV","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVVVV","title":"ParserBuilder.ZipOVVVV","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipovvvv"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol"}}}