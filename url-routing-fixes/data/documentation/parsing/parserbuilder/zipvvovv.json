{"metadata":{"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ZipVVOVV","kind":"identifier"}],"navigatorTitle":[{"text":"ZipVVOVV","kind":"identifier"}],"role":"symbol","externalID":"s:7Parsing13ParserBuilderO8ZipVVOVVV","symbolKind":"struct","title":"ParserBuilder.ZipVVOVV"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ZipVVOVV","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P0","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P1","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P2","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P3","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P4","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvvovv"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/init(_:_:_:_:_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p1","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p4"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/ParserPrinter-Implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/p1":{"kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/p1","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P1"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p1","title":"p1","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/p3":{"kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/p3","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p3"},{"kind":"text","text":": "},{"text":"P3","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p3","title":"p3","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/init(_:_:_:_:_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/init(_:_:_:_:_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/init(_:_:_:_:_:)","role":"symbol","title":"init(_:_:_:_:_:)","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/p0":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p0","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"P0"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/p0","title":"p0","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p0","abstract":[],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/p2":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p2","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p2"},{"kind":"text","text":": "},{"text":"P2","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/p2","type":"topic","title":"p2"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/p4":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/p4","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p4"},{"kind":"text","text":": "},{"text":"P4","kind":"typeIdentifier"}],"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/p4","type":"topic","title":"p4"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/Parser-Implementations":{"role":"collectionGroup","title":"Parser Implementations","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/ParserPrinter-Implementations","role":"collectionGroup","type":"topic","title":"ParserPrinter Implementations","kind":"article","abstract":[],"url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/parserprinter-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}],"title":"Parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parse","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVVOVV"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvvovv","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ZipVVOVV"}],"title":"ParserBuilder.ZipVVOVV","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","kind":"symbol","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"P0","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":", ","type":"text"},{"type":"codeVoice","code":"P1"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P2","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P3","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P4","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P0.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P0.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P1.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P2.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P1.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P2.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P3.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"P4.Input","type":"codeVoice"},{"text":", ","type":"text"},{"code":"P3.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"P4.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVV/parse(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVV\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvovv\/parse(_:)","type":"topic","title":"parse(_:)"}}}