{"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipvo"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/init(_:_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/p0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/p1"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVO"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P0"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P1"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"}]}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"metadata":{"extendedModule":"Parsing","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVO"}],"role":"symbol","title":"ParserBuilder.ZipVO","roleHeading":"Structure","externalID":"s:7Parsing13ParserBuilderO5ZipVOV","navigatorTitle":[{"kind":"identifier","text":"ZipVO"}],"modules":[{"name":"Parsing"}]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}],"title":"Parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parse","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVO/ParserPrinter-Implementations":{"abstract":[],"title":"ParserPrinter Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipvo\/parserprinter-implementations","role":"collectionGroup","kind":"article","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVO/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/parse(_:)","role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvo\/parse(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"title":"parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVO/p0":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/p0","title":"p0","abstract":[],"url":"\/documentation\/parsing\/parserbuilder\/zipvo\/p0","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"p0","kind":"identifier"},{"text":": ","kind":"text"},{"text":"P0","kind":"typeIdentifier"}],"role":"symbol","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVO":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVO"}],"abstract":[],"title":"ParserBuilder.ZipVO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO","url":"\/documentation\/parsing\/parserbuilder\/zipvo","navigatorTitle":[{"kind":"identifier","text":"ZipVO"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVO/Parser-Implementations":{"title":"Parser Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipvo\/parser-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/Parser-Implementations","abstract":[],"kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","role":"symbol","url":"\/documentation\/parsing\/parserprinter","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"title":"ParserPrinter","conformance":{"constraints":[{"code":"P0","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P1","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":", "},{"code":"P0.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"P1.Input","type":"codeVoice"},{"type":"text","text":", and "},{"code":"P0.Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVO/init(_:_:)":{"abstract":[],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/init(_:_:)","url":"\/documentation\/parsing\/parserbuilder\/zipvo\/init(_:_:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVO/p1":{"url":"\/documentation\/parsing\/parserbuilder\/zipvo\/p1","title":"p1","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVO\/p1","abstract":[],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"p1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P1"}]}}}