{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/Parser-Implementations"},"sections":[],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvovooo\/parser-implementations"]}],"metadata":{"modules":[{"name":"Parsing"}],"title":"Parser Implementations","role":"collectionGroup"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/compactMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/filter(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/flatMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/map(_:)-27tz8","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/map(_:)-4njph","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/map(_:)-6fk4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/pipe(_:)-30q7d","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/pipe(_:)-9aesi","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/printing(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/pullback(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/replaceError(with:)"],"generated":true,"title":"Instance Methods"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/compactMap(_:)":{"abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" result of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","text":"CompactMap"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/compactMap(_:)","title":"compactMap(_:)","url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/compactmap(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/filter(_:)":{"abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"given predicate."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/filter(_:)","title":"filter(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/filter(_:)","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/replaceError(with:)":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/replaceerror(with:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/replaceError(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"ReplaceError","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"title":"replaceError(with:)","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/pipe(_:)-9aesi":{"title":"pipe(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/pipe(_:)-9aesi","url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/pipe(_:)-9aesi","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier","text":"Pipe"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Parse","preciseIdentifier":"s:7Parsing5ParseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ParserBuilder","preciseIdentifier":"s:7Parsing13ParserBuilderO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"ZipOV","preciseIdentifier":"s:7Parsing13ParserBuilderO5ZipOVV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO7PipeEndV","text":"PipeEnd","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">>>>","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","abstract":[],"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/eraseToAnyParser()":{"title":"eraseToAnyParser()","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/eraseToAnyParser()","url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/erasetoanyparser()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"title":"ParserBuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/map(_:)-4njph":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO11MapConstantV","kind":"typeIdentifier","text":"MapConstant"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Returns a parser that replaces the "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output of this parser with the output of a given"},{"type":"text","text":" "},{"text":"closure.","type":"text"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/map(_:)-4njph","title":"map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/map(_:)-4njph","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/printing(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/printing(_:)","url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/printing(_:)","kind":"symbol","title":"printing(_:)","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"printing","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Print","preciseIdentifier":"s:7Parsing7ParsersO5PrintV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/pipe(_:)-30q7d":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/pipe(_:)-30q7d","title":"pipe(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pipe","preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/pipe(_:)-30q7d"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"navigatorTitle":[{"kind":"identifier","text":"Parse"}],"title":"Parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parse","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/pullback(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/pullback(_:)","title":"pullback(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a parser."}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/pullback(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO","title":"ParserBuilder.ZipVOVOOO","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ZipVOVOOO"}],"navigatorTitle":[{"kind":"identifier","text":"ZipVOVOOO"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvovooo","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/map(_:)-27tz8":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MapConversion","preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/map(_:)-27tz8","title":"map(_:)","type":"topic","abstract":[{"text":"Returns a parser-printer that transforms the output of this parser with a given conversion.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/map(_:)-27tz8"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/flatMap(_:)":{"abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/flatmap(_:)","kind":"symbol","title":"flatMap(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/flatMap(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOVOOO/map(_:)-6fk4":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parserbuilder\/zipvovooo\/map(_:)-6fk4","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOVOOO\/map(_:)-6fk4","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"title":"map(_:)"}}}