{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initializer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","preciseIdentifier":"s:9CasePaths0A4PathV","text":"CasePath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}]}],"variants":[{"paths":["\/documentation\/parsing\/conversions\/fromlosslessstring\/case(_:)-4dlno"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd__ytGqd__AHRszlFZ::SYNTHESIZED::s:7Parsing11ConversionsO18FromLosslessStringV","symbolKind":"method","title":"case(_:)","roleHeading":"Type Method","role":"symbol"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/Conversion-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"Conversion.case(_:)","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/case(_:)-4dlno"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString":{"url":"\/documentation\/parsing\/conversions\/fromlosslessstring","title":"Conversions.FromLosslessString","abstract":[{"text":"A conversion from a string to a lossless string-convertible type.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString","navigatorTitle":[{"text":"FromLosslessString","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromLosslessString","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString/case(_:)-4dlno":{"url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/case(_:)-4dlno","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/case(_:)-4dlno","title":"case(_:)","kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","role":"symbol","url":"\/documentation\/parsing\/conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"type":"topic","title":"Conversions","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}]},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath":{"url":"\/documentation\/casepaths\/casepath","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CasePath"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","role":"symbol","title":"CasePath","abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString/Conversion-Implementations":{"url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/conversion-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/Conversion-Implementations","abstract":[],"kind":"article","title":"Conversion Implementations"}}}