{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue\/data-9gca7"},"variants":[{"paths":["\/documentation\/parsing\/conversions\/fromrawvalue\/data-9gca7"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue\/Conversion-Implementations"]]},"kind":"symbol","abstract":[{"text":"Transforms this conversion to ","type":"text"},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">>> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A fluent version of "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/data-swift.type.property-7g9sj","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"extendedModule":"Parsing","symbolKind":"property","title":"data","roleHeading":"Instance Property","externalID":"s:7Parsing10ConversionPAAs10ArraySliceVys5UInt8VG6OutputRtzrlE4dataAA11ConversionsO3MapVy_xAM11BytesToDataVy_AHGGvp::SYNTHESIZED::s:7Parsing11ConversionsO12FromRawValueV","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":">>>","kind":"text"}],"role":"symbol","modules":[{"name":"Parsing"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromRawValue/Conversion-Implementations":{"url":"\/documentation\/parsing\/conversions\/fromrawvalue\/conversion-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue\/Conversion-Implementations","abstract":[],"type":"topic","title":"Conversion Implementations","kind":"article","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"url":"\/documentation\/parsing\/conversions\/map","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Map"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","role":"symbol","title":"Conversions.Map","abstract":[{"text":"A conversion that composes two conversions together by composing their","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","type":"reference"},{"text":" functions and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","type":"reference"},{"text":" functions together.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"url":"\/documentation\/parsing\/conversion\/unapply(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","title":"unapply(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"required":true,"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BytesToData","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/bytestodata","navigatorTitle":[{"text":"BytesToData","kind":"identifier"}],"title":"Conversions.BytesToData","abstract":[{"text":"A conversion from a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","type":"reference"},{"text":" of UTF-8 bytes to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","role":"symbol","url":"\/documentation\/parsing\/conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"type":"topic","title":"Conversions","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"url":"\/documentation\/parsing\/conversion\/apply(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","title":"apply(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"required":true,"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromRawValue":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue","abstract":[{"text":"A conversion from a raw value to a raw representable type.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"FromRawValue","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromRawValue","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/fromrawvalue","title":"Conversions.FromRawValue","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromRawValue/data-9gca7":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue\/data-9gca7","url":"\/documentation\/parsing\/conversions\/fromrawvalue\/data-9gca7","title":"data","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Transforms this conversion to "},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"type":"text","text":" into a conversion to "},{"code":"Data","type":"codeVoice"},{"type":"text","text":"."}],"conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","text":"BytesToData"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s10ArraySliceV","text":"ArraySlice"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"},{"kind":"text","text":">>>"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"url":"\/documentation\/parsing\/prependablecollection","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"title":"PrependableCollection","abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/data-swift.type.property-7g9sj":{"type":"topic","title":"data","abstract":[{"text":"A conversion from ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/data-swift.type.property-7g9sj","url":"\/documentation\/parsing\/conversion\/data-swift.type.property-7g9sj","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Conversions.BytesToData<Substring.UTF8View>","type":"codeVoice"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UTF8View","preciseIdentifier":"s:Ss8UTF8ViewV"},{"text":">","kind":"text"}]}}}