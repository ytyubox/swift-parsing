{"variants":[{"paths":["\/documentation\/parsing\/conversions\/parser"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing13ParserPrinterP","kind":"typeIdentifier","text":"ParserPrinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing21PrependableCollectionP","kind":"typeIdentifier","text":"PrependableCollection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually use"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Conversion\/parse(_:)-swift.type.method"},{"type":"text","text":" operation, which constructs this type."}]}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/parser"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations"],"title":"Default Implementations"}],"abstract":[{"text":"A conversion from a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"reference"},{"text":"’s input to its output.","type":"text"}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"],"title":"Conforms To"}],"kind":"symbol","metadata":{"extendedModule":"Parsing","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Conversions.Parser","externalID":"s:7Parsing11ConversionsO6ParserV","symbolKind":"struct","modules":[{"name":"Parsing"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"type":"topic","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Conversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","url":"\/documentation\/parsing\/conversion","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"navigatorTitle":[{"text":"Conversion","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/parser":{"role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Upstream"}],"url":"\/documentation\/parsing\/conversions\/parser\/parser","kind":"symbol","type":"topic","title":"parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/init(parser:)":{"type":"topic","url":"\/documentation\/parsing\/conversions\/parser\/init(parser:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/init(parser:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"parser","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"init(parser:)","abstract":[],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/apply(_:)":{"title":"apply(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/apply(_:)","role":"symbol","url":"\/documentation\/parsing\/conversions\/parser\/apply(_:)","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/Conversion-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","kind":"article","url":"\/documentation\/parsing\/conversions\/parser\/conversion-implementations","title":"Conversion Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/Conversion-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrependableCollection","kind":"identifier"}],"url":"\/documentation\/parsing\/prependablecollection","navigatorTitle":[{"text":"PrependableCollection","kind":"identifier"}],"title":"PrependableCollection","abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser/unapply(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser\/unapply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"title":"unapply(_:)","url":"\/documentation\/parsing\/conversions\/parser\/unapply(_:)","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","role":"symbol","url":"\/documentation\/parsing\/conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"type":"topic","title":"Conversions","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","role":"symbol","url":"\/documentation\/parsing\/parserprinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","title":"ParserPrinter","abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Parser":{"url":"\/documentation\/parsing\/conversions\/parser","title":"Conversions.Parser","abstract":[{"text":"A conversion from a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"text":"’s input to its output.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"type":"topic","kind":"symbol"}}}