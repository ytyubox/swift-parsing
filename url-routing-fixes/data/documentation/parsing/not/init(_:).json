{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"init(_:)","roleHeading":"Initializer","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing3NotVyACyxGxyXEcfc","symbolKind":"init"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"build","content":[{"inlineContent":[{"type":"text","text":"A parser that causes this parser to fail if it succeeds, or succeed if it"},{"type":"text","text":" "},{"type":"text","text":"fails."}],"type":"paragraph"}]}]}],"kind":"symbol","abstract":[{"text":"Creates a parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/not\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/init(_:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Not/init(_:)":{"type":"topic","abstract":[{"text":"Creates a parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/init(_:)","title":"init(_:)","url":"\/documentation\/parsing\/not\/init(_:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"url":"\/documentation\/parsing\/not","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","title":"Not","type":"topic","abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Not"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Not"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol"}}}