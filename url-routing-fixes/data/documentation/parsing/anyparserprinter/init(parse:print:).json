{"sections":[],"variants":[{"paths":["\/documentation\/parsing\/anyparserprinter\/init(parse:print:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Creates a parser-printer that wraps the given closures in its ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","isActive":true},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"print(_:to:)"},{"text":" methods.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"parse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"print"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"parse","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that attempts to parse an output from an input. "},{"type":"codeVoice","code":"parse"},{"type":"text","text":" is executed each"},{"type":"text","text":" "},{"type":"text","text":"time the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)"},{"type":"text","text":" method is called on the resulting parser-printer."}]}]},{"name":"print","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that attempts to print an output into an input. ","type":"text"},{"code":"print","type":"codeVoice"},{"text":" is executed each","type":"text"},{"text":" ","type":"text"},{"text":"time the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:)"},{"text":" method is called on the resulting parser-printer.","type":"text"}]}]}],"kind":"parameters"}],"metadata":{"role":"symbol","externalID":"s:7Parsing16AnyParserPrinterV5parse5printACyxq_Gq_xzKc_yq__xztKctcfc","symbolKind":"init","title":"init(parse:print:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parse"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"print","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Parsing"}],"roleHeading":"Initializer"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter":{"abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"code":"Input","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","title":"AnyParserPrinter","role":"symbol","url":"\/documentation\/parsing\/anyparserprinter","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","url":"\/documentation\/parsing","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(parse:print:)":{"abstract":[{"text":"Creates a parser-printer that wraps the given closures in its ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"print(_:to:)","type":"codeVoice"},{"text":" methods.","type":"text"}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"parse"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"print"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"kind":"symbol","title":"init(parse:print:)","role":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/init(parse:print:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/print(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:)","type":"topic","title":"print(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/parsing\/anyparserprinter\/print(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/parse(_:)":{"title":"parse(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"url":"\/documentation\/parsing\/anyparserprinter\/parse(_:)","kind":"symbol"}}}