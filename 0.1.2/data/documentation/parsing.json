{"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/parsing"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":2},"metadata":{"symbolKind":"module","externalID":"Parsing","title":"Parsing","roleHeading":"Framework","role":"collection","modules":[{"name":"Parsing"}]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]}],"sections":[],"abstract":[{"type":"text","text":"No overview available."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","title":"Parsers","type":"topic","url":"\/documentation\/parsing\/parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","title":"Skip","type":"topic","url":"\/documentation\/parsing\/skip","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"navigatorTitle":[{"kind":"identifier","text":"Skip"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"kind":"symbol","url":"\/documentation\/parsing\/newline","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a single newline from the beginning of the input. It will consume both"},{"type":"text","text":" "},{"type":"text","text":"line feeds ("},{"type":"codeVoice","code":"\"\\n\""},{"type":"text","text":") and carriage returns with line feeds ("},{"type":"codeVoice","code":"\"\\r\\n\""},{"type":"text","text":")."}],"title":"Newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"role":"symbol","navigatorTitle":[{"text":"Many","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/many","type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"title":"Many"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","title":"Lazy","type":"topic","url":"\/documentation\/parsing\/lazy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that waits for a call to its "},{"code":"parse","type":"codeVoice"},{"type":"text","text":" method before running the given closure to"},{"type":"text","text":" "},{"type":"text","text":"create a parser for the given input."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"role":"symbol","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/prefixupto","type":"topic","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"title":"PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"type":"topic","title":"First","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"abstract":[{"text":"A parser that consumes the first element from a collection. Fails on an empty collection.","type":"text"}],"navigatorTitle":[{"text":"First","kind":"identifier"}],"url":"\/documentation\/parsing\/first"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","title":"PrefixThrough","url":"\/documentation\/parsing\/prefixthrough","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","role":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"kind":"symbol","title":"StartsWith","url":"\/documentation\/parsing\/startswith"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","role":"symbol","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"kind":"symbol","title":"Prefix","url":"\/documentation\/parsing\/prefix"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfMany":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","type":"topic","title":"OneOfMany","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OneOfMany","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/oneofmany","navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"navigatorTitle":[{"kind":"identifier","text":"Fail"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fail"}],"abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","title":"Fail","url":"\/documentation\/parsing\/fail","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","title":"End","abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"kind":"symbol","url":"\/documentation\/parsing\/end","type":"topic","navigatorTitle":[{"text":"End","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"kind":"symbol","url":"\/documentation\/parsing\/anyparser","type":"topic","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"title":"AnyParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","abstract":[{"text":"A parser that always succeeds by returning the provided value, but does not consume any of its","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"Always","kind":"identifier"}],"kind":"symbol","title":"Always","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"url":"\/documentation\/parsing\/always"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","abstract":[{"text":"A parser that consumes all ASCII whitespace from the beginning of the input.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"kind":"symbol","title":"Whitespace","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"url":"\/documentation\/parsing\/whitespace"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","abstract":[],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"title":"Rest","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns it as its output."}],"url":"\/documentation\/parsing\/rest","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parser","type":"topic","abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"FirstWhere"}],"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirstWhere"}],"title":"FirstWhere","url":"\/documentation\/parsing\/firstwhere","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"url":"\/documentation\/parsing\/conditional","kind":"symbol","title":"Conditional","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","role":"symbol","abstract":[{"text":"A parser that can parse output from two types of parsers.","type":"text"}]}}}