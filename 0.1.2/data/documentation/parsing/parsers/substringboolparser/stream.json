{"variants":[{"paths":["\/documentation\/parsing\/parsers\/substringboolparser\/stream"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","preciseIdentifier":"s:7Parsing7ParsersO6StreamV","text":"Stream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"For example, the following parser can parse an integer followed by a newline from a collection"},{"type":"text","text":" "},{"type":"text","text":"of UTF8 bytes:"}],"type":"paragraph"},{"code":["Parsers.Integer<ArraySlice<UInt8>, Int>()","  .skip(StartsWith(\"\\n\".utf8))"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This parser can be transformed into one that processes an incoming stream of UTF8 bytes:"}],"type":"paragraph"},{"code":["let newlineSeparatedIntegers = Parsers.Integer<ArraySlice<UInt8>, Int>()","  .skip(StartsWith(\"\\n\".utf8))","  .stream"],"syntax":null,"type":"codeListing"},{"inlineContent":[{"text":"And then it can be used on a stream, such as values coming from standard in:","type":"text"}],"type":"paragraph"},{"code":["var stdin = AnyIterator {","  readLine().map { ArraySlice($0.utf8) }","}","","newlineSeparatedIntegers","  .parse(&stdin)"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"metadata":{"modules":[{"name":"Parsing"}],"title":"stream","extendedModule":"Parsing","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Stream","preciseIdentifier":"s:7Parsing7ParsersO6StreamV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"externalID":"s:7Parsing6ParserPAASm5InputRpzrlE6streamAA7ParsersO6StreamVy_xGvp::SYNTHESIZED::s:7Parsing7ParsersO19SubstringBoolParserV","symbolKind":"property","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Property"},"abstract":[{"type":"text","text":"Transforms the receiver parser into one that can parse streams of input."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser\/Parser-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser\/stream"},"schemaVersion":{"minor":2,"major":0,"patch":0},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"type":"topic","title":"Parsers.Stream","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/parsing\/parsers\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringBoolParser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","kind":"symbol","abstract":[{"text":"A parser that consumes a Boolean value from the beginning of a substring.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubstringBoolParser"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SubstringBoolParser"}],"title":"Parsers.SubstringBoolParser","url":"\/documentation\/parsing\/parsers\/substringboolparser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","abstract":[],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","title":"Parsers","type":"topic","url":"\/documentation\/parsing\/parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringBoolParser/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser\/Parser-Implementations","kind":"article","abstract":[],"type":"topic","title":"Parser Implementations","url":"\/documentation\/parsing\/parsers\/substringboolparser\/parser-implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringBoolParser/stream":{"url":"\/documentation\/parsing\/parsers\/substringboolparser\/stream","type":"topic","role":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Transforms the receiver parser into one that can parse streams of input.","type":"text"}],"title":"stream","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"stream"},{"text":": ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stream","preciseIdentifier":"s:7Parsing7ParsersO6StreamV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser\/stream","kind":"symbol"}}}