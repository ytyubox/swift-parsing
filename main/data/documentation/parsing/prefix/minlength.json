{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"metadata":{"symbolKind":"property","externalID":"s:7Parsing6PrefixV9minLengthSivp","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Input.SubSequence"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"name":"Parsing"}],"title":"minLength","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"role":"symbol","platforms":[],"roleHeading":"Instance Property","extendedModule":"Parsing"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix\/minlength"]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"kind":"symbol","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix","title":"Prefix","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/minLength":{"type":"topic","deprecated":true,"abstract":[],"title":"minLength","role":"symbol","url":"\/documentation\/parsing\/prefix\/minlength","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"minLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength"},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","title":"Parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[]}}}