{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")? = nil) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing13CountingRangeP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CountingRange","text":"CountingRange"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A length that provides a minimum number and maximum of elements to consume for","type":"text"},{"text":" ","type":"text"},{"text":"parsing to be considered successful.","type":"text"}]}],"name":"length"},{"content":[{"type":"paragraph","inlineContent":[{"text":"An optional closure that takes an element of the input sequence as its argument","type":"text"},{"text":" ","type":"text"},{"text":"and returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the element should be included or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" if it should be excluded.","type":"text"},{"text":" ","type":"text"},{"text":"Once the predicate returns ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" it will not be called again.","type":"text"}]}],"name":"predicate"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"codeListing","code":["try Prefix(1...) { $0.isNumber }.parse(\"123456\")  \/\/ \"123456\"","","try Prefix(1...) { $0.isNumber }.parse(\"\")","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 |","\/\/   | ^ expected 1 more element satisfying predicate"],"syntax":"swift"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-472tv","interfaceLanguage":"swift"},"metadata":{"externalID":"s:7Parsing6PrefixV_5whileACyxGqd___Sb7ElementQzcSgtcAA13CountingRangeRd__lufc","modules":[{"name":"Parsing"}],"role":"symbol","title":"init(_:while:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"roleHeading":"Initializer","symbolKind":"init"},"abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-472tv"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-472tv":{"type":"topic","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"title":"init(_:while:)","role":"symbol","url":"\/documentation\/parsing\/prefix\/init(_:while:)-472tv","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-472tv"},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","title":"Parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"kind":"symbol","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix","title":"Prefix","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/CountingRange":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CountingRange","url":"\/documentation\/parsing\/countingrange","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CountingRange"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CountingRange"}],"title":"CountingRange","abstract":[],"kind":"symbol"}}}