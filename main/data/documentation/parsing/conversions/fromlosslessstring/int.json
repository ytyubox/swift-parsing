{"metadata":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"int","extendedModule":"Parsing","externalID":"s:7Parsing10ConversionPAASd6OutputRtzrlE3intAA11ConversionsO3MapVy_xAH38BinaryFloatingPointToFixedWidthIntegerVy_SdSiGGvp::SYNTHESIZED::s:7Parsing11ConversionsO18FromLosslessStringV","role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"int","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","text":"BinaryFloatingPointToFixedWidthInteger"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":", "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">>","kind":"text"}],"roleHeading":"Instance Property","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/Conversion-Implementations"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/int","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"int","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger","text":"BinaryFloatingPointToFixedWidthInteger","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"type":"text","text":"A fluent version of "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","type":"reference"},{"type":"text","text":". Equivalent to calling "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/map(_:)","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"with "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","code":["doubleConversion.int","\/\/ =","doubleConversion.map(.int)"],"syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/fromlosslessstring\/int"]}],"abstract":[{"type":"text","text":"Transforms this conversion to "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BinaryFloatingPointToFixedWidthInteger":{"url":"\/documentation\/parsing\/conversions\/binaryfloatingpointtofixedwidthinteger","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryFloatingPointToFixedWidthInteger"}],"title":"Conversions.BinaryFloatingPointToFixedWidthInteger","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger","navigatorTitle":[{"kind":"identifier","text":"BinaryFloatingPointToFixedWidthInteger"}],"type":"topic","abstract":[{"type":"text","text":"A conversion from a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" to an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString/Conversion-Implementations":{"kind":"article","title":"Conversion Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/Conversion-Implementations","url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/conversion-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"type":"topic","url":"\/documentation\/parsing\/conversion\/apply(_:)","required":true,"title":"apply(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","role":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","title":"Parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"type":"topic","url":"\/documentation\/parsing\/conversions\/map","navigatorTitle":[{"kind":"identifier","text":"Map"}],"title":"Conversions.Map","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","role":"symbol","abstract":[{"text":"A conversion that composes two conversions together by composing their","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)"},{"text":" functions and ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)"},{"text":" functions together.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString/int":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/int","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"int","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"Map","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","text":"Conversions"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","kind":"typeIdentifier","text":"BinaryFloatingPointToFixedWidthInteger"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":", "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">>"}],"title":"int","type":"topic","url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/int","abstract":[{"type":"text","text":"Transforms this conversion to "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" into a conversion to "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString/map(_:)":{"url":"\/documentation\/parsing\/conversions\/fromlosslessstring\/map(_:)","title":"map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString\/map(_:)","kind":"symbol","abstract":[{"text":"Returns a conversion that transforms the output of this conversion with a given downstream","type":"text"},{"text":" ","type":"text"},{"text":"conversion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/int-swift.type.property":{"abstract":[{"type":"text","text":"A conversion from a "},{"type":"codeVoice","code":"Double"},{"type":"text","text":" to an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"code":"Conversions.BinaryFloatingPointToFixedWidthInteger<Double, Int>","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/conversion\/int-swift.type.property","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"BinaryFloatingPointToFixedWidthInteger","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"title":"int"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromLosslessString":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromLosslessString"}],"kind":"symbol","title":"Conversions.FromLosslessString","abstract":[{"type":"text","text":"A conversion from a string to a lossless string-convertible type."}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromLosslessString","url":"\/documentation\/parsing\/conversions\/fromlosslessstring","navigatorTitle":[{"kind":"identifier","text":"FromLosslessString"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"url":"\/documentation\/parsing\/conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"kind":"symbol","title":"Conversions","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"type":"topic","url":"\/documentation\/parsing\/conversion\/unapply(_:)","required":true,"title":"unapply(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","role":"symbol","abstract":[]}}}