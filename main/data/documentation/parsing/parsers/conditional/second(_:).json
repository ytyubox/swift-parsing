{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"second","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Second"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"]]},"variants":[{"paths":["\/documentation\/parsing\/parsers\/conditional\/second(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"Parsers.Conditional.second(_:)","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing7ParsersO11ConditionalO6secondyAEy_xq_Gq_cAGmAA6ParserRzAaHR_5InputQy_AIRtz6OutputQy_ALRtzr0_lF","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"second"},{"kind":"text","text":"("},{"text":"Second","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"case","roleHeading":"Case"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional\/second(_:)"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","title":"Parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional/second(_:)":{"abstract":[],"title":"Parsers.Conditional.second(_:)","kind":"symbol","url":"\/documentation\/parsing\/parsers\/conditional\/second(_:)","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"second","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional\/second(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"kind":"symbol","type":"topic","title":"Parsers","url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"url":"\/documentation\/parsing\/parsers\/conditional","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","type":"topic","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"role":"symbol","title":"Parsers.Conditional"}}}