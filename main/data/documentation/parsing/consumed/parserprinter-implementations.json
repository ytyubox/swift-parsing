{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed"]]},"metadata":{"role":"collectionGroup","modules":[{"name":"Parsing"}],"title":"ParserPrinter Implementations"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/ParserPrinter-Implementations","interfaceLanguage":"swift"},"kind":"article","sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/print()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/print(_:into:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/print(into:)"],"generated":true}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/print(into:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"abstract":[{"type":"text","text":"Attempts to print into a nebulous piece of data."}],"title":"print(into:)","role":"symbol","type":"topic","kind":"symbol","conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/print(into:)","url":"\/documentation\/parsing\/consumed\/print(into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"abstract":[{"text":"A parser that returns the subsequence of input consumed by another parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Consumed","kind":"identifier"}],"navigatorTitle":[{"text":"Consumed","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","kind":"symbol","title":"Consumed","url":"\/documentation\/parsing\/consumed","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/print(_:)":{"abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/print(_:)","kind":"symbol","title":"print(_:)","url":"\/documentation\/parsing\/consumed\/print(_:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/print(_:into:)":{"abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Upstream","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Upstream.Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"PrependableCollection","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Upstream.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Upstream.Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/print(_:into:)","kind":"symbol","title":"print(_:into:)","url":"\/documentation\/parsing\/consumed\/print(_:into:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/print()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/print()","url":"\/documentation\/parsing\/consumed\/print()","kind":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"print()","abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed/eraseToAnyParserPrinter()":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed\/eraseToAnyParserPrinter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"eraseToAnyParserPrinter()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"url":"\/documentation\/parsing\/consumed\/erasetoanyparserprinter()","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","title":"Parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]}}}