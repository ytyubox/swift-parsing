{"kind":"symbol","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" from "},{"code":"Input","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"externalID":"s:7Parsing16AnyParserPrinterV","symbolKind":"struct","roleHeading":"Structure","title":"AnyParserPrinter","role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">","kind":"text"}]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This parser-printer forwards its "},{"type":"codeVoice","code":"parse(_:)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"print(_:to:)"},{"type":"text","text":" methods to an arbitrary"},{"type":"text","text":" "},{"type":"text","text":"underlying parser-printer having the same "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, hiding the specifics of"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Use "},{"code":"AnyParserPrinter","type":"codeVoice"},{"type":"text","text":" to wrap a parser whose type has details you donâ€™t want to expose across"},{"type":"text","text":" "},{"type":"text","text":"API boundaries, such as different modules. When you use type erasure this way, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying parser over time without affecting existing clients."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparserprinter"]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"]}],"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/print(_:into:)":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/parsing\/anyparserprinter\/print(_:into:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)","role":"symbol","title":"print(_:into:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","url":"\/documentation\/parsing\/parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","title":"Parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"abstract":[],"kind":"symbol","title":"ParserPrinter","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"}],"url":"\/documentation\/parsing\/anyparserprinter","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParserPrinter"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","type":"topic","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"role":"symbol","title":"AnyParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/ParserPrinter-Implementations":{"type":"topic","url":"\/documentation\/parsing\/anyparserprinter\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","kind":"article","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(parse:print:)":{"title":"init(parse:print:)","abstract":[{"text":"Creates a parser-printer that wraps the given closures in its ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","type":"reference"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"print(_:to:)","type":"codeVoice"},{"type":"text","text":" methods."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/init(parse:print:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parse"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"print"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","type":"topic","abstract":[{"type":"text","text":"Creates a type-erasing parser-printer to wrap the given parser-printer."}],"role":"symbol","title":"init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/parse(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/anyparserprinter\/parse(_:)","title":"parse(_:)","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/Parser-Implementations":{"title":"Parser Implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","url":"\/documentation\/parsing\/anyparserprinter\/parser-implementations","type":"topic","abstract":[]}}}