{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use case path literal syntax (e.g., '\/Root.caseName')"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/casepaths\/extract(_:)-2jy2a"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"embed","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"Root","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"name":"embed","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An enum case initializer."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"inlineContent":[{"text":"A function that can attempt to extract associated values from an enum.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Use this function to create new transform functions to pass to higher-order methods like"},{"type":"text","text":" "},{"type":"codeVoice","code":"compactMap"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["[Result<Int, Error>.success(42), .failure(MyError()]","  .compactMap(extract(Result.success))","\/\/ [42]"]},{"style":"note","content":[{"inlineContent":[{"text":"This function is only intended to be used with enum case initializers. Its behavior is","type":"text"},{"text":" ","type":"text"},{"text":"otherwise undefined.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside"}],"kind":"content"}],"metadata":{"roleHeading":"Function","platforms":[],"title":"extract(_:)","externalID":"s:9CasePaths7extractyq_Sgxcxq_cr0_lF","role":"symbol","symbolKind":"func","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"extract"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Root"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"modules":[{"name":"CasePaths"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-2jy2a"},"references":{"doc://co.pointfree.Parsing/documentation/CasePaths/extract(_:)-2jy2a":{"deprecated":true,"kind":"symbol","abstract":[{"text":"Returns a function that can attempt to extract associated values from the given enum case","type":"text"},{"type":"text","text":" "},{"type":"text","text":"initializer."}],"url":"\/documentation\/casepaths\/extract(_:)-2jy2a","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"extract","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Root","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"Root"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"title":"extract(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/extract(_:)-2jy2a","type":"topic"},"doc://co.pointfree.Parsing/documentation/CasePaths":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","title":"CasePaths","url":"\/documentation\/casepaths","kind":"symbol","role":"collection"}}}