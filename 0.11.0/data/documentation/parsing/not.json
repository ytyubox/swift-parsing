{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]]},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream"],"title":"Common parsers"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/upstream"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/parse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/print(_:into:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"metadata":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"navigatorTitle":[{"text":"Not","kind":"identifier"}],"title":"Not","externalID":"s:7Parsing3NotV","roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Parsing"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Not"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"For example, to parse a line from an input that does not start with “\/\/” one can do:","type":"text"}],"type":"paragraph"},{"code":["let uncommentedLine = Parse {","  Not { \"\/\/\" }","  PrefixUpTo(\"\\n\")","}","","try uncommentedLine.parse(\"let x = 1\") \/\/ ✅ \"let x = 1\"","","try uncommentedLine.parse(\"\/\/ let x = 1\") \/\/ ❌","\/\/ error: unexpected input","\/\/  --> input:1:1-2","\/\/ 1 | \/\/ let x = 1","\/\/   | ^^ expected not to be processed"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/parsing\/not"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Not/print(_:into:)":{"url":"\/documentation\/parsing\/not\/print(_:into:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[],"title":"print(_:into:)","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Not/Parser-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/Parser-Implementations","type":"topic","url":"\/documentation\/parsing\/not\/parser-implementations","kind":"article","title":"Parser Implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","url":"\/documentation\/parsing\/fromutf8view","title":"FromUTF8View","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUTF8View"}],"deprecated":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FromUTF8View"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Not/upstream":{"url":"\/documentation\/parsing\/not\/upstream","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/upstream","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upstream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"}],"abstract":[],"title":"upstream","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Float":{"abstract":[{"type":"text","text":"A parser that consumes a floating-point number from the beginning of a string."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","url":"\/documentation\/parsing\/float","title":"Float","kind":"article","type":"topic","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Not/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/parsing\/not\/parserprinter-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/ParserPrinter-Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/CaseIterable":{"abstract":[{"type":"text","text":"A parser-printer that consumes a case-iterable, raw representable value from the beginning of a"},{"type":"text","text":" "},{"type":"text","text":"string."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","url":"\/documentation\/parsing\/caseiterable","title":"CaseIterable","kind":"article","type":"topic","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","url":"\/documentation\/parsing\/lazy\/parse(_:)","title":"parse(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"abstract":[{"type":"text","text":"A parser that attempts to run another parser as many times as specified, accumulating the result"},{"type":"text","text":" "},{"type":"text","text":"of the outputs."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","url":"\/documentation\/parsing\/many","title":"Many","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Many"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","url":"\/documentation\/parsing\/fromsubstring","title":"FromSubstring","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromSubstring"}],"deprecated":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FromSubstring"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","url":"\/documentation\/parsing\/rest","title":"Rest","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","url":"\/documentation\/parsing\/prefixupto","title":"PrefixUpTo","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Not/init(_:)":{"url":"\/documentation\/parsing\/not\/init(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates a parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"title":"init(_:)","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","navigatorTitle":[{"kind":"identifier","text":"OneOf"}],"title":"OneOf","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"url":"\/documentation\/parsing\/oneof"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","url":"\/documentation\/parsing\/startswith","title":"StartsWith","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}]},"doc://co.pointfree.Parsing/documentation/Parsing/UUID":{"abstract":[{"type":"text","text":"A parser that consumes a "},{"code":"UUID","type":"codeVoice"},{"type":"text","text":" value from the beginning of a string."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","url":"\/documentation\/parsing\/uuid","title":"UUID","kind":"article","type":"topic","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Int":{"abstract":[{"type":"text","text":"A parser that consumes an integer from the beginning of a string."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","url":"\/documentation\/parsing\/int","title":"Int","kind":"article","type":"topic","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/CharacterSet":{"abstract":[{"type":"text","text":"A parser that consumes the characters contained in a "},{"code":"CharacterSet","type":"codeVoice"},{"type":"text","text":" from the beginning of a string."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","url":"\/documentation\/parsing\/characterset","title":"CharacterSet","kind":"article","type":"topic","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"type":"topic","abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"title":"AnyParser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","url":"\/documentation\/parsing\/anyparser","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Digits":{"abstract":[{"type":"text","text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code"},{"type":"text","text":" "},{"type":"text","text":"units."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","url":"\/documentation\/parsing\/digits","title":"Digits","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Digits"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Digits"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"title":"Fail","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","url":"\/documentation\/parsing\/fail","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"navigatorTitle":[{"text":"Fail","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","title":"Whitespace","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","abstract":[],"title":"Parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","url":"\/documentation\/parsing\/always","title":"Always","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Always"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","url":"\/documentation\/parsing\/newline","title":"Newline","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"deprecated":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Newline"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"title":"Parse","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"abstract":[{"type":"text","text":"A parser that returns the subsequence of input consumed by another parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","url":"\/documentation\/parsing\/consumed","title":"Consumed","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumed"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Consumed"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"url":"\/documentation\/parsing\/prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","title":"Prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/From":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","url":"\/documentation\/parsing\/from","title":"From","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"From"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"From"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"abstract":[{"type":"text","text":"A parser that runs the given parser, but does not consume any input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","url":"\/documentation\/parsing\/peek","title":"Peek","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Peek"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Peek"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","url":"\/documentation\/parsing\/not","title":"Not","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Not"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Not"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally":{"abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it fails."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","url":"\/documentation\/parsing\/optionally","title":"Optionally","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optionally"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Optionally"}]},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"abstract":[{"type":"text","text":"A parser that consumes the first element from a collection."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","url":"\/documentation\/parsing\/first","title":"First","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"First"}]},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","url":"\/documentation\/parsing\/end","title":"End","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"End"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","url":"\/documentation\/parsing\/skip","title":"Skip","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Skip"}]},"doc://co.pointfree.Parsing/documentation/Parsing/String":{"kind":"article","abstract":[{"type":"text","text":"A parser that consumes a string literal from the beginning of a string."}],"role":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","title":"String","type":"topic","url":"\/documentation\/parsing\/string"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"role":"symbol","kind":"symbol","title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"abstract":[{"type":"text","text":"A parser that waits for a call to its "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","isActive":true},{"type":"text","text":" method before running the given closure to"},{"type":"text","text":" "},{"type":"text","text":"create a parser for the given input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","url":"\/documentation\/parsing\/lazy","title":"Lazy","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Lazy"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","url":"\/documentation\/parsing\/prefixthrough","title":"PrefixThrough","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Not/parse(_:)":{"url":"\/documentation\/parsing\/not\/parse(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[],"title":"parse(_:)","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","url":"\/documentation\/parsing\/fromunicodescalarview","title":"FromUnicodeScalarView","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUnicodeScalarView"}],"deprecated":true,"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"FromUnicodeScalarView"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Stream":{"abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream","url":"\/documentation\/parsing\/stream","title":"Stream","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Stream"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Bool":{"abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a string."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","url":"\/documentation\/parsing\/bool","title":"Bool","kind":"article","type":"topic","role":"article"}}}