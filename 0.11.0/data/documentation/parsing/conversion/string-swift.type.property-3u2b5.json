{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubstringToString","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV"}],"extendedModule":"Parsing","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.SubstringToString"},{"type":"text","text":"."}]},"externalID":"s:7Parsing10ConversionPA2A11ConversionsO17SubstringToStringVRszrlE6stringAGvpZ","modules":[{"name":"Parsing"}],"symbolKind":"property","title":"string","roleHeading":"Type Property","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","text":"Conversions"},{"kind":"text","text":"."},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","kind":"typeIdentifier","text":"SubstringToString"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Useful for transforming a "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","type":"reference","isActive":true},{"type":"text","text":"â€™s substring output into a more general-purpose"},{"type":"text","text":" "},{"type":"text","text":"string."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let line = Prefix { $0 != \"\\n\" }.map(.string)"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"seeAlsoSections":[{"title":"Common conversions","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/memberwise(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/case(_:)-4j2n7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/json(_:decoder:encoder:)-swift.type.method","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.type.method"],"generated":true}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/double-swift.type.property":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"double"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","text":"FixedWidthIntegerToBinaryFloatingPoint"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/conversion\/double-swift.type.property","abstract":[{"type":"text","text":"A conversion from an "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" to a "},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.FixedWidthIntegerToBinaryFloatingPoint<Int, Double>","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","title":"double"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-3u2b5":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"SubstringToString","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV"}],"title":"string","abstract":[{"text":"A conversion from ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"String","type":"codeVoice"},{"text":".","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.SubstringToString","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/int-swift.type.property":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","url":"\/documentation\/parsing\/conversion\/int-swift.type.property","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.BinaryFloatingPointToFixedWidthInteger<Double, Int>","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"int","type":"topic","abstract":[{"text":"A conversion from a ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" to an ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"BinaryFloatingPointToFixedWidthInteger","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"role":"symbol","kind":"symbol","title":"ParserPrinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/memberwise(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/memberwise(_:)","type":"topic","abstract":[{"text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a","type":"text"},{"text":" ","type":"text"},{"text":"memberwise initializer.","type":"text"}],"role":"symbol","title":"memberwise(_:)","kind":"symbol","url":"\/documentation\/parsing\/conversion\/memberwise(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memberwise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"text":"Struct","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Struct","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/lossless(_:)-swift.type.method":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.type.method","abstract":[{"text":"A conversion from a string to a lossless string-convertible type.","type":"text"}],"title":"lossless(_:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/conversion\/lossless(_:)-swift.type.method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lossless","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/case(_:)-4j2n7":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Converts the associated values of an enum case into the case, and an enum case into its","type":"text"},{"text":" ","type":"text"},{"text":"associated values.","type":"text"}],"url":"\/documentation\/parsing\/conversion\/case(_:)-4j2n7","title":"case(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/case(_:)-4j2n7","kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/representing(_:)-swift.type.method":{"title":"representing(_:)","abstract":[{"type":"text","text":"A conversion from a given raw representable typeâ€™s raw value to itself."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"role":"symbol","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"kind":"symbol","title":"Conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","type":"topic","url":"\/documentation\/parsing\/conversions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Conversions"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-9owth":{"kind":"symbol","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-9owth","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Conversions.BytesToString<Substring.UTF8View>"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","title":"string","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"BytesToString","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/json(_:decoder:encoder:)-swift.type.method":{"url":"\/documentation\/parsing\/conversion\/json(_:decoder:encoder:)-swift.type.method","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"json"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC","text":"JSONDecoder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"encoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC","text":"JSONEncoder"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"json(_:decoder:encoder:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/json(_:decoder:encoder:)-swift.type.method","abstract":[{"text":"A conversion from ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":" to the given codable type.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/SubstringToString":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/conversions\/substringtostring","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringToString","kind":"identifier"}],"title":"Conversions.SubstringToString","navigatorTitle":[{"text":"SubstringToString","kind":"identifier"}],"abstract":[{"text":"A conversion from a substring to a string.","type":"text"}]}}}