{"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"sections":[],"metadata":{"modules":[{"name":"Parsing"}],"extendedModule":"Parsing","symbolKind":"method","roleHeading":"Instance Method","title":"print(into:)","role":"symbol","conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"externalID":"s:7Parsing13ParserPrinterPAAyt6OutputRtzrlE5print4intoy5InputQzz_tKF::SYNTHESIZED::s:7Parsing7ParsersO34CaseIterableRawRepresentableParserV"},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/ParserPrinter-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(into:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"input"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"input","content":[{"inlineContent":[{"type":"text","text":"A nebulous, mutable piece of data to be incrementally printed into."}],"type":"paragraph"}]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"title":"Parsers.CaseIterableRawRepresentableParser","abstract":[],"type":"topic","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"navigatorTitle":[{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/ParserPrinter-Implementations":{"title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/parserprinter-implementations","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/ParserPrinter-Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"title":"Parsers","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print(into:)":{"abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"role":"symbol","title":"print(into:)","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print(into:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(into:)"}}}