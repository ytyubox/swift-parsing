{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/intparser\/init(radix:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"radix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" = 10)"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/init(radix:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"title":"init(radix:)","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing7ParsersO9IntParserV5radixAEy_xq_GSi_tcfc","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"radix","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"init","role":"symbol","roleHeading":"Initializer"},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/init(radix:)":{"url":"\/documentation\/parsing\/parsers\/intparser\/init(radix:)","role":"symbol","abstract":[],"title":"init(radix:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/init(radix:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"radix","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"title":"Parsers","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":" sign for signed integer","type":"text"},{"text":" ","type":"text"},{"text":"types) from the beginning of a collection of UTF8 code units.","type":"text"}],"title":"Parsers.IntParser","url":"\/documentation\/parsing\/parsers\/intparser","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"IntParser"}]}}}