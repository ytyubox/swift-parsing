{"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVO\/pullback(_:)","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVO","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVO\/Parser-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","text":"Pullback","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A key path to pull parsing back along from this parser’s input to a new","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"type":"paragraph"}],"name":"keyPath"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A parser that parses new input."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operator allows you to transform a parser of "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"s into one on "},{"type":"codeVoice","code":"NewInput"},{"type":"text","text":"s, via a"},{"type":"text","text":" "},{"type":"text","text":"writable key path from "},{"type":"codeVoice","code":"NewInput"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Input"},{"type":"text","text":". Intuitively you can think of this as a way of"},{"type":"text","text":" "},{"type":"text","text":"transforming a parser on local data into one on more global data."}]},{"type":"paragraph","inlineContent":[{"text":"For example, the parser ","type":"text"},{"code":"Int.parser()","type":"codeVoice"},{"text":" parses ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":" collections into integers,","type":"text"},{"text":" ","type":"text"},{"text":"and there’s a key path from ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":", and so we can ","type":"text"},{"code":"pullback","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["var input = \"123 Hello world\"[...]","let output = try Int.parser().pullback(\\.utf8).parse(&input)  \/\/ 123","input                                                         \/\/ \" Hello world\""],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This has allowed us to parse ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":"s with something that is only defined on","type":"text"},{"text":" ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}]}]}],"abstract":[{"text":"Transforms the ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" of a parser.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvvovo\/pullback(_:)"]}],"metadata":{"externalID":"s:7Parsing6ParserPAAE8pullbackyAA7ParsersO8PullbackVy_xqd__Gs15WritableKeyPathCyqd__5InputQzGlF::SYNTHESIZED::s:7Parsing13ParserBuilderO8ZipVVOVOV","symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Parsing","role":"symbol","title":"pullback(_:)","modules":[{"name":"Parsing"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVO":{"url":"\/documentation\/parsing\/parserbuilder\/zipvvovo","type":"topic","navigatorTitle":[{"text":"ZipVVOVO","kind":"identifier"}],"title":"ParserBuilder.ZipVVOVO","abstract":[],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVVOVO","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVO","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"title":"Parsers","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"title":"ParserBuilder","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVO/Parser-Implementations":{"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvvovo\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVO\/Parser-Implementations","kind":"article","role":"collectionGroup","title":"Parser Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVO/pullback(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Transforms the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a parser."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVO\/pullback(_:)","title":"pullback(_:)","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvvovo\/pullback(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"title":"Parsers.Pullback","abstract":[{"text":"Transforms the ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" of a downstream parser.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/pullback","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","role":"symbol","navigatorTitle":[{"text":"Pullback","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"title":"Parse","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","abstract":[],"title":"Parser","type":"topic"}}}