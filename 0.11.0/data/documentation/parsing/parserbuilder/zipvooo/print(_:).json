{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOO","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOO\/ParserPrinter-Implementations"]]},"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipvooo\/print(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Method","externalID":"s:7Parsing13ParserPrinterPA2A19_EmptyInitializable5InputRpzrlE5printyAF6OutputQzKF::SYNTHESIZED::s:7Parsing13ParserBuilderO7ZipVOOOV","role":"symbol","title":"print(_:)","symbolKind":"method","extendedModule":"Parsing","modules":[{"name":"Parsing"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOO\/print(_:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]}],"kind":"declarations"},{"parameters":[{"name":"output","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A well-structured piece of data to be printed."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"A more nebulous value printed from the given output."}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOO/print(_:)":{"type":"topic","title":"print(_:)","abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"kind":"symbol","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/parsing\/parserbuilder\/zipvooo\/print(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOO\/print(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOO":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOO","url":"\/documentation\/parsing\/parserbuilder\/zipvooo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVOOO","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","title":"ParserBuilder.ZipVOOO","abstract":[],"navigatorTitle":[{"text":"ZipVOOO","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOO/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOO\/ParserPrinter-Implementations","type":"topic","kind":"article","url":"\/documentation\/parsing\/parserbuilder\/zipvooo\/parserprinter-implementations","title":"ParserPrinter Implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"kind":"symbol","abstract":[],"title":"Parser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","url":"\/documentation\/parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"title":"ParserBuilder","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"title":"Parse","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse"}}}