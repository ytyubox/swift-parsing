{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/compactMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/filter(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/flatMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/pipe(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/pullback(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/replaceError(with:)"],"generated":true,"title":"Instance Methods"}],"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipvvvvo\/parser-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"No overview available."}],"schemaVersion":{"major":0,"minor":2,"patch":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/Parser-Implementations"},"sections":[],"metadata":{"role":"collectionGroup","title":"Parser Implementations","modules":[{"name":"Parsing"}]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO/filter(_:)":{"kind":"symbol","title":"filter(_:)","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO6FilterV","kind":"typeIdentifier","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/filter(_:)","url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo\/filter(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","title":"Parsing","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO/replaceError(with:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceError"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier","text":"ReplaceError"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/replaceError(with:)","title":"replaceError(with:)","kind":"symbol","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo\/replaceerror(with:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO/pullback(_:)":{"type":"topic","title":"pullback(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/pullback(_:)","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo\/pullback(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO/eraseToAnyParser()":{"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo\/erasetoanyparser()","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/eraseToAnyParser()","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"type":"topic","title":"eraseToAnyParser()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO/flatMap(_:)":{"abstract":[{"text":"Returns a parser that transforms the output of this parser into a new parser.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/flatMap(_:)","url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo\/flatmap(_:)","title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewParser"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"title":"Parse","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO":{"abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ZipVVVVO"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO","title":"ParserBuilder.ZipVVVVO","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVVVVO"}],"kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO/pipe(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier","text":"Pipe"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/pipe(_:)","type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo\/pipe(_:)","title":"pipe(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"title":"ParserBuilder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO/compactMap(_:)":{"title":"compactMap(_:)","type":"topic","abstract":[{"text":"Returns a parser that outputs the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" result of calling the given closure with the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo\/compactmap(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/compactMap(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier","text":"CompactMap"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVVVO/map(_:)":{"type":"topic","url":"\/documentation\/parsing\/parserbuilder\/zipvvvvo\/map(_:)","title":"map(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVVVO\/map(_:)","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}]}}}