{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"p0"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"p1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"p2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"p3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"p4"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":")"}],"languages":["swift"]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOVO\/init(_:_:_:_:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipovovo\/init(_:_:_:_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOVO"]]},"metadata":{"modules":[{"name":"Parsing"}],"role":"symbol","title":"init(_:_:_:_:_:)","roleHeading":"Initializer","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"P0","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":")"}],"externalID":"s:7Parsing13ParserBuilderO8ZipOVOVOVyAEy_xq_q0_q1_q2_Gx_q_q0_q1_q2_tcfc"},"schemaVersion":{"major":0,"patch":0,"minor":2},"abstract":[{"type":"text","text":"No overview available."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"title":"Parse","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVOVO/init(_:_:_:_:_:)":{"role":"symbol","title":"init(_:_:_:_:_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"P0"},{"text":", ","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P4"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOVO\/init(_:_:_:_:_:)","url":"\/documentation\/parsing\/parserbuilder\/zipovovo\/init(_:_:_:_:_:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipOVOVO":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ZipOVOVO"}],"title":"ParserBuilder.ZipOVOVO","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ZipOVOVO","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipOVOVO","url":"\/documentation\/parsing\/parserbuilder\/zipovovo","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"title":"ParserBuilder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","title":"Parsing","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"}}}