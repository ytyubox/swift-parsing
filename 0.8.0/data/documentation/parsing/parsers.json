{"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/parsers"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional"]}],"schemaVersion":{"minor":2,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"metadata":{"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"symbolKind":"enum","role":"symbol","title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"modules":[{"name":"Parsing"}],"roleHeading":"Enumeration","externalID":"s:7Parsing7ParsersO"},"sections":[],"abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The various operators defined as extensions on ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" implement their functionality as","type":"text"},{"text":" ","type":"text"},{"text":"classes or structures that extend this enumeration. For example, the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","type":"reference","isActive":true},{"text":" operator","type":"text"},{"text":" ","type":"text"},{"text":"returns a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","type":"reference","isActive":true},{"text":" parser.","type":"text"}]}],"kind":"content"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","title":"Parsers.CaseIterableRawRepresentableParser","role":"symbol","navigatorTitle":[{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","title":"Parsing","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"type":"topic","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}],"kind":"symbol","title":"Parsers.BoolParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","navigatorTitle":[{"text":"BoolParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/boolparser","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BoolParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pullback"}],"navigatorTitle":[{"kind":"identifier","text":"Pullback"}],"role":"symbol","type":"topic","title":"Parsers.Pullback","url":"\/documentation\/parsing\/parsers\/pullback","abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Map"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","title":"Parsers.Map","abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given closure."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"url":"\/documentation\/parsing\/parsers\/map","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/oneofmany","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"title":"Parsers.OneOfMany","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/End":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/End","navigatorTitle":[{"kind":"identifier","text":"End"}],"title":"Parsers.End","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/end","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"kind":"symbol","type":"topic","title":"Parsers.IntParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","navigatorTitle":[{"kind":"identifier","text":"IntParser"}],"abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"type":"codeVoice","code":"+"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":" sign for signed integer"},{"type":"text","text":" "},{"type":"text","text":"types) from the beginning of a collection of UTF8 code units."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntParser"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/intparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixThrough":{"url":"\/documentation\/parsing\/parsers\/prefixthrough","kind":"symbol","navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixThrough","abstract":[],"title":"Parsers.PrefixThrough","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/StartsWith":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/StartsWith","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"title":"Parsers.StartsWith","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/startswith","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Lazy":{"url":"\/documentation\/parsing\/parsers\/lazy","kind":"symbol","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Lazy","abstract":[],"title":"Parsers.Lazy","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"abstract":[{"text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Filter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","title":"Parsers.Filter","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/filter"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"type":"topic","abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units."}],"kind":"symbol","title":"Parsers.UUIDParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","navigatorTitle":[{"kind":"identifier","text":"UUIDParser"}],"url":"\/documentation\/parsing\/parsers\/uuidparser","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Newline":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Newline","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"title":"Parsers.Newline","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/newline","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Many":{"navigatorTitle":[{"kind":"identifier","text":"Many"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/many","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Many","type":"topic","abstract":[],"title":"Parsers.Many"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/First":{"url":"\/documentation\/parsing\/parsers\/first","kind":"symbol","navigatorTitle":[{"text":"First","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/First","abstract":[],"title":"Parsers.First","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)":{"kind":"symbol","title":"map(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"url":"\/documentation\/parsing\/parser\/map(_:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"role":"symbol","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","url":"\/documentation\/parsing\/parsers\/stream","abstract":[],"title":"Parsers.Stream","type":"topic","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/AnyParser":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/AnyParser","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"title":"Parsers.AnyParser","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/anyparser","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Always":{"url":"\/documentation\/parsing\/parsers\/always","kind":"symbol","navigatorTitle":[{"text":"Always","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Always","abstract":[],"title":"Parsers.Always","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Skip":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Skip","navigatorTitle":[{"kind":"identifier","text":"Skip"}],"title":"Parsers.Skip","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/skip","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","title":"Parsers.OptionalVoid","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/optionalvoid"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/PrefixUpTo":{"url":"\/documentation\/parsing\/parsers\/prefixupto","kind":"symbol","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/PrefixUpTo","abstract":[],"title":"Parsers.PrefixUpTo","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"abstract":[{"text":"A parser that runs this parser, pipes its output into the given parser, and returns the output","type":"text"},{"text":" ","type":"text"},{"text":"of the given parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","navigatorTitle":[{"text":"Pipe","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/pipe","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pipe","kind":"identifier"}],"title":"Parsers.Pipe","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"kind":"symbol","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","title":"Parsers.ReplaceError","abstract":[{"text":"A parser that replaces its error with a provided output.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/replaceerror","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","title":"Parsers","kind":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Fail":{"title":"Parsers.Fail","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/fail","type":"topic","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Fail","navigatorTitle":[{"kind":"identifier","text":"Fail"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Rest":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Rest","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"title":"Parsers.Rest","kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/parsers\/rest","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"kind":"symbol","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","title":"Parsers.FlatMap","abstract":[{"text":"A parser that transforms the output of another parser into a new parser.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatMap","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/flatmap","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"role":"symbol","title":"Parsers.CompactMap","kind":"symbol","abstract":[{"text":"A parser that outputs the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" result of calling the given transformation with the output","type":"text"},{"text":" ","type":"text"},{"text":"of its upstream parser.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","url":"\/documentation\/parsing\/parsers\/compactmap","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompactMap"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Prefix":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Prefix","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"Parsers.Prefix","url":"\/documentation\/parsing\/parsers\/prefix","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Prefix","type":"topic","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a floating-point number from the beginning of a collection of UTF-8"},{"type":"text","text":" "},{"type":"text","text":"code units."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","url":"\/documentation\/parsing\/parsers\/floatparser","title":"Parsers.FloatParser","kind":"symbol","type":"topic","navigatorTitle":[{"text":"FloatParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatParser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Whitespace":{"url":"\/documentation\/parsing\/parsers\/whitespace","kind":"symbol","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Whitespace","abstract":[],"title":"Parsers.Whitespace","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Conditional":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Conditional","role":"symbol","url":"\/documentation\/parsing\/parsers\/conditional","title":"Parsers.Conditional","abstract":[{"text":"A parser that can parse output from two types of parsers.","type":"text"}],"navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"type":"topic","kind":"symbol"}}}