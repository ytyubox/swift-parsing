{"schemaVersion":{"minor":2,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring"]]},"variants":[{"paths":["\/documentation\/parsing\/fromsubstring\/init(_:)-5n0la"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-5n0la","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"SubstringParser","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]}],"metadata":{"symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":")"}],"modules":[{"name":"Parsing"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"type":"text","text":", "},{"type":"codeVoice","code":"SubstringParser"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"SubstringParser.Input","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"externalID":"s:7Parsing13FromSubstringVAAs10ArraySliceVys5UInt8VGRszrlEyACyAHq_Gq_yXEcfc","extendedModule":"Parsing","roleHeading":"Initializer","title":"init(_:)","role":"symbol"},"abstract":[{"type":"text","text":"No overview available."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"navigatorTitle":[{"kind":"identifier","text":"FromSubstring"}],"role":"symbol","url":"\/documentation\/parsing\/fromsubstring","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromSubstring"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","type":"topic","abstract":[{"type":"text","text":"A parser that transforms a parser on "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" into a parser on another view."}],"title":"FromSubstring"},"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","title":"Parsing","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"title":"Parser","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/init(_:)-5n0la":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SubstringParser","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and "},{"type":"codeVoice","code":"SubstringParser.Input"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-5n0la","url":"\/documentation\/parsing\/fromsubstring\/init(_:)-5n0la","role":"symbol","type":"topic","title":"init(_:)","abstract":[]}}}