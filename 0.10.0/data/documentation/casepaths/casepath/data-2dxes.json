{"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/Conversion-Implementations"]]},"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"text":" into a conversion to ","type":"text"},{"type":"codeVoice","code":"Data"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/data-2dxes"},"metadata":{"symbolKind":"property","modules":[{"name":"CasePaths"}],"role":"symbol","title":"data","extendedModule":"Parsing","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ArraySlice<UInt8>"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier","text":"Conversions"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">>>"}],"roleHeading":"Instance Property","externalID":"s:7Parsing10ConversionPAAs10ArraySliceVys5UInt8VG6OutputRtzrlE4dataAA11ConversionsO3MapVy_xAM11BytesToDataVy_AHGGvp::SYNTHESIZED::s:9CasePaths0A4PathV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","text":"BytesToData","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s10ArraySliceV","text":"ArraySlice","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","text":"UInt8","kind":"typeIdentifier"},{"text":">>> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"A fluent version of ","type":"text"},{"type":"codeVoice","code":"Conversion\/data-swift.type.property-7g9sj"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/casepaths\/casepath\/data-2dxes"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Map","kind":"identifier"}],"title":"Conversions.Map","abstract":[{"text":"A conversion that composes two conversions together by composing their","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","isActive":true,"type":"reference"},{"text":" functions and ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","isActive":true,"type":"reference"},{"text":" functions together.","type":"text"}],"navigatorTitle":[{"text":"Map","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","kind":"symbol","url":"\/documentation\/parsing\/conversions\/map","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BytesToData":{"type":"topic","navigatorTitle":[{"text":"BytesToData","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/bytestodata","title":"Conversions.BytesToData","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BytesToData","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BytesToData","kind":"identifier"}],"abstract":[{"type":"text","text":"A conversion from a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","isActive":true},{"type":"text","text":" of UTF-8 bytes to "},{"type":"codeVoice","code":"Data"},{"type":"text","text":"."}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","navigatorTitle":[{"kind":"identifier","text":"CasePath"}],"title":"CasePath","url":"\/documentation\/casepaths\/casepath","abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"title":"Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","url":"\/documentation\/parsing\/conversions","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"title":"apply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"url":"\/documentation\/parsing\/conversion\/apply(_:)","required":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"title":"unapply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"url":"\/documentation\/parsing\/conversion\/unapply(_:)","required":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/PrependableCollection":{"abstract":[{"type":"text","text":"A collection that supports empty initialization and the ability to prepend a sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements of elements to itself."}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrependableCollection"}],"url":"\/documentation\/parsing\/prependablecollection","navigatorTitle":[{"kind":"identifier","text":"PrependableCollection"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrependableCollection","role":"symbol","title":"PrependableCollection"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/Conversion-Implementations":{"kind":"article","url":"\/documentation\/casepaths\/casepath\/conversion-implementations","title":"Conversion Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/Conversion-Implementations","type":"topic","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/CasePaths":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","title":"CasePaths","url":"\/documentation\/casepaths","abstract":[],"role":"collection","type":"topic"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/data-2dxes":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/data-2dxes","title":"data","url":"\/documentation\/casepaths\/casepath\/data-2dxes","abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"text":" into a conversion to ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}],"conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Map","preciseIdentifier":"s:7Parsing11ConversionsO3MapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"BytesToData","preciseIdentifier":"s:7Parsing11ConversionsO11BytesToDataV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":">>>","kind":"text"}]}}}