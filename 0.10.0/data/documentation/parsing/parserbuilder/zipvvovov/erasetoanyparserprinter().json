{"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/parsing\/parserbuilder\/zipvvovov\/erasetoanyparserprinter()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/ParserPrinter-Implementations"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"text":"An ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","isActive":true,"type":"reference"},{"text":" wrapping this parser-printer.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This form of ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you expose your composed parser-printers as the "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter","isActive":true,"type":"reference"},{"type":"text","text":" type, you can change"},{"type":"text","text":" "},{"type":"text","text":"the underlying implementation over time without affecting existing clients."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Equivalent to passing "},{"code":"self","type":"codeVoice"},{"type":"text","text":" to "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","type":"reference","isActive":true},{"type":"text","text":"."}]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/eraseToAnyParserPrinter()"},"metadata":{"extendedModule":"Parsing","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParserPrinter"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7Parsing13ParserPrinterPAAE010eraseToAnybC0AA0fbC0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing13ParserBuilderO9ZipVVOVOVV","role":"symbol","title":"eraseToAnyParserPrinter()","roleHeading":"Instance Method","modules":[{"name":"Parsing"}],"symbolKind":"method"},"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVOV":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipVVOVOV","kind":"identifier"}],"title":"ParserBuilder.ZipVVOVOV","url":"\/documentation\/parsing\/parserbuilder\/zipvvovov","navigatorTitle":[{"text":"ZipVVOVOV","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV","kind":"symbol","role":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter/init(_:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Creates a type-erasing parser-printer to wrap the given parser-printer."}],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter\/init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVOV/ParserPrinter-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/parserbuilder\/zipvvovov\/parserprinter-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/ParserPrinter-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParserPrinter":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"title":"AnyParserPrinter","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"url":"\/documentation\/parsing\/anyparserprinter","navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVVOVOV/eraseToAnyParserPrinter()":{"type":"topic","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"title":"eraseToAnyParserPrinter()","kind":"symbol","url":"\/documentation\/parsing\/parserbuilder\/zipvvovov\/erasetoanyparserprinter()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVVOVOV\/eraseToAnyParserPrinter()","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"title":"Parse","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"url":"\/documentation\/parsing\/parse","navigatorTitle":[{"text":"Parse","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"title":"ParserBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"}}}