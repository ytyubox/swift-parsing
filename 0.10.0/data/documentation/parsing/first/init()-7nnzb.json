{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/first\/init()-7nnzb"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"platforms":["Linux"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First\/init()-7nnzb","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First"]]},"kind":"symbol","sections":[],"metadata":{"title":"init()","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing5FirstVACyxGycfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol","symbolKind":"init","roleHeading":"Initializer"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/First/init()-7nnzb":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","abstract":[],"url":"\/documentation\/parsing\/first\/init()-7nnzb","type":"topic","title":"init()","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First\/init()-7nnzb"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"navigatorTitle":[{"text":"First","kind":"identifier"}],"type":"topic","kind":"symbol","title":"First","role":"symbol","url":"\/documentation\/parsing\/first","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"}}}