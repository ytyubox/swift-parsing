{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fail\/init()"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()","interfaceLanguage":"swift"},"abstract":[{"text":"Creates a parser that throws an error when it runs.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"}],"sections":[],"kind":"symbol","metadata":{"role":"symbol","extendedModule":"Parsing","roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing4FailVACyxq_Gycfc","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/init()":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()","abstract":[{"text":"Creates a parser that throws an error when it runs.","type":"text"}],"kind":"symbol","title":"init()","url":"\/documentation\/parsing\/fail\/init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"navigatorTitle":[{"text":"Fail","kind":"identifier"}],"type":"topic","kind":"symbol","title":"Fail","role":"symbol","url":"\/documentation\/parsing\/fail","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"}}}