{"abstract":[{"type":"text","text":"Returns a parser that filters output from this parser when its output does not satisfy the"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"name":"predicate","content":[{"inlineContent":[{"type":"text","text":"A closure that takes an output from this parser and returns a Boolean"},{"type":"text","text":" "},{"type":"text","text":"value indicating whether the output should be returned."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that filters its output."}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is similar to ","type":"text"},{"type":"codeVoice","code":"Sequence.filter"},{"text":" in the Swift standard library, as well as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Publisher.filter"},{"text":" in the Combine framework.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser fails if the predicate is not satisfied on the output of the upstream parser. For example,"},{"type":"text","text":" "},{"type":"text","text":"the following parser consumes only even integers and so fails when an odd integer is used:"}]},{"code":["var input = \"43 Hello, world!\"[...]","let number = try Int.parser().filter { $0.isMultiple(of: 2) }.parse(&input)","\/\/ error: processed value 43 failed to satisfy predicate","\/\/  --> input:1:1-2","\/\/ 1 | 43 Hello, world!","\/\/   | ^^ processed input"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print\/filter(_:)"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print\/Parser-Implementations"]]},"sections":[],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","externalID":"s:7Parsing6ParserPAAE6filteryAA7ParsersO6FilterVy_xGSb6OutputQzcF::SYNTHESIZED::s:7Parsing7ParsersO5PrintV","modules":[{"name":"Parsing"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"extendedModule":"Parsing","title":"filter(_:)"},"variants":[{"paths":["\/documentation\/parsing\/parsers\/print\/filter(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"title":"Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","url":"\/documentation\/parsing\/parsers\/filter","kind":"symbol","navigatorTitle":[{"text":"Filter","kind":"identifier"}],"abstract":[{"text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate.","type":"text"}],"title":"Parsers.Filter"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Print/Parser-Implementations":{"kind":"article","url":"\/documentation\/parsing\/parsers\/print\/parser-implementations","title":"Parser Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print\/Parser-Implementations","type":"topic","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Print":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Print","kind":"identifier"}],"title":"Parsers.Print","abstract":[],"navigatorTitle":[{"text":"Print","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print","kind":"symbol","url":"\/documentation\/parsing\/parsers\/print","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Print/filter(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Print\/filter(_:)","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"given predicate."}],"type":"topic","url":"\/documentation\/parsing\/parsers\/print\/filter(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","text":"Filter"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"filter(_:)","role":"symbol"}}}