{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"conversion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"build"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MapConversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ParserPrinter","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","preciseIdentifier":"s:7Parsing13ParserPrinterP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Conversion","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","preciseIdentifier":"s:7Parsing10ConversionP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}]}],"kind":"declarations"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parseprint\/init(_:with:)-4k2am"]}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"init","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10ParsePrintV_4withACyAA7ParsersO13MapConversionVy_qd__qd_0_GGqd_0__qd__yXEtcAIRszAA13ParserPrinterRd__AA0G0Rd_0_5InputQyd_0_6OutputRtd__r0_lufc","title":"init(_:with:)","role":"symbol","roleHeading":"Initializer"},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"title":"ParserBuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"url":"\/documentation\/parsing\/parserbuilder","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint":{"kind":"symbol","url":"\/documentation\/parsing\/parseprint","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}],"abstract":[{"type":"text","text":"An entry to "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","isActive":true},{"type":"text","text":" syntax that requires the builder to be a printer."}],"role":"symbol","navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}],"type":"topic","title":"ParsePrint"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"title":"ParserPrinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-4k2am":{"title":"init(_:with:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","role":"symbol","abstract":[],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/parseprint\/init(_:with:)-4k2am","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"title":"Parsers","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can transform an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value "},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value back into an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"title":"Conversion","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversion"}],"url":"\/documentation\/parsing\/conversion","navigatorTitle":[{"kind":"identifier","text":"Conversion"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConversion":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConversion","navigatorTitle":[{"kind":"identifier","text":"MapConversion"}],"type":"topic","title":"Parsers.MapConversion","url":"\/documentation\/parsing\/parsers\/mapconversion","abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given conversion."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapConversion"}]}}}