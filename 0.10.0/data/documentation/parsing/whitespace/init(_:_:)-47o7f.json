{"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/parsing\/whitespace\/init(_:_:)-47o7f"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init(_:_:)-47o7f"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"]]},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"configuration"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","preciseIdentifier":"s:7Parsing10WhitespaceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Configuration","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum","preciseIdentifier":"s:7Parsing10WhitespaceV13ConfigurationO"},{"kind":"text","text":" = .all) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Conversions","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Identity","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity","preciseIdentifier":"s:7Parsing11ConversionsO8IdentityV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"UTF8","preciseIdentifier":"s:s4UTF8a"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CodeUnit","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing10WhitespaceV","text":"Whitespace"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Length"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing10WhitespaceV13ConfigurationO","text":"Configuration"},{"kind":"text","text":")"}],"title":"init(_:_:)","externalID":"s:7Parsing10WhitespaceVyACyxAA11ConversionsO8IdentityVy_qd__GGx_AC13ConfigurationOyxAH_GtcAHRs_SlRd__11SubSequenceQyd__Rsd__s5UInt8V7ElementRtd__lufc","roleHeading":"Initializer","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","symbolKind":"init","conformance":{"constraints":[{"type":"codeVoice","code":"Length"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"CountingRange"},{"text":", ","type":"text"},{"code":"InputToBytes","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Conversion","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Collection","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"InputToBytes.Input.SubSequence","type":"codeVoice"},{"type":"text","text":", "},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Output.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"InputToBytes.Output.Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/Configuration-swift.enum":{"role":"symbol","url":"\/documentation\/parsing\/whitespace\/configuration-swift.enum","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"title":"Whitespace.Configuration","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/init(_:_:)-47o7f":{"type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Length","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"CountingRange","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Conversion","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Input.SubSequence","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Output.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output.Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"text":".","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Length","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Whitespace","preciseIdentifier":"s:7Parsing10WhitespaceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Length","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:7Parsing10WhitespaceV13ConfigurationO"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/whitespace\/init(_:_:)-47o7f","abstract":[],"title":"init(_:_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init(_:_:)-47o7f"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"title":"Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","kind":"symbol","url":"\/documentation\/parsing\/conversions","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Identity":{"abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Identity","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions\/identity","navigatorTitle":[{"text":"Identity","kind":"identifier"}],"role":"symbol","title":"Conversions.Identity","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Identity"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"type":"topic","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"text":"A parser that consumes whitespace from the beginning of input.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"type":"topic","kind":"symbol","title":"Whitespace","role":"symbol","url":"\/documentation\/parsing\/whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}]}}}