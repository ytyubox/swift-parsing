{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"kind":"symbol","relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UUIDParser","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"UTF8","preciseIdentifier":"s:s4UTF8a"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CodeUnit","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually use","type":"text"},{"text":" ","type":"text"},{"code":"UUID.parser()","type":"codeVoice"},{"text":", which constructs this type.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":2},"variants":[{"paths":["\/documentation\/parsing\/parsers\/uuidparser"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"},"abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/Parser-Implementations"],"title":"Default Implementations"}],"sections":[],"metadata":{"modules":[{"name":"Parsing"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UUIDParser","kind":"identifier"}],"roleHeading":"Structure","symbolKind":"struct","externalID":"s:7Parsing7ParsersO10UUIDParserV","role":"symbol","extendedModule":"Parsing","navigatorTitle":[{"text":"UUIDParser","kind":"identifier"}],"title":"Parsers.UUIDParser"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/init()":{"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/init()","type":"topic","title":"init()","abstract":[],"url":"\/documentation\/parsing\/parsers\/uuidparser\/init()"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"url":"\/documentation\/parsing\/parsers\/uuidparser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UUIDParser","kind":"identifier"}],"title":"Parsers.UUIDParser","navigatorTitle":[{"text":"UUIDParser","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","kind":"symbol","abstract":[{"text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","type":"topic","kind":"symbol","abstract":[],"role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/parse(_:)":{"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/parse(_:)","type":"topic","title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/uuidparser\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/Parser-Implementations":{"title":"Parser Implementations","url":"\/documentation\/parsing\/parsers\/uuidparser\/parser-implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol"}}}