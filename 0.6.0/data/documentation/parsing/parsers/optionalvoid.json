{"abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/init(wrapped:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/Parser-Implementations"]}],"schemaVersion":{"minor":2,"major":0,"patch":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}],"symbolKind":"struct","roleHeading":"Structure","title":"Parsers.OptionalVoid","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}],"externalID":"s:7Parsing7ParsersO12OptionalVoidV","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","role":"symbol"},"variants":[{"paths":["\/documentation\/parsing\/parsers\/optionalvoid"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Wrapped"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually use","type":"text"},{"text":" ","type":"text"},{"code":"if","type":"codeVoice"},{"type":"text","text":" statements in a builder block:"}]},{"type":"codeListing","syntax":"swift","code":["Parse {","  \"Hello\"","  if useComma {","    \",\"","  }","  \" \"","  Rest()","}"]}]}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","type":"topic","kind":"symbol","abstract":[],"role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/parse(_:)","type":"topic","title":"parse(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"?"}],"url":"\/documentation\/parsing\/parsers\/optionalvoid\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/init(wrapped:)":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/init(wrapped:)","type":"topic","title":"init(wrapped:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrapped"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"?)"}],"url":"\/documentation\/parsing\/parsers\/optionalvoid\/init(wrapped:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/Parser-Implementations":{"url":"\/documentation\/parsing\/parsers\/optionalvoid\/parser-implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalVoid"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/optionalvoid","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","title":"Parsers.OptionalVoid","abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OptionalVoid"}],"role":"symbol"}}}