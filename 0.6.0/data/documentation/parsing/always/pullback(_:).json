{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/pullback(_:)"},"metadata":{"roleHeading":"Instance Method","role":"symbol","title":"pullback(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}],"extendedModule":"Parsing","modules":[{"name":"Parsing"}],"symbolKind":"method","externalID":"s:7Parsing6ParserPAAE8pullbackyAA7ParsersO8PullbackVy_xqd__Gs15WritableKeyPathCyqd__5InputQzGlF::SYNTHESIZED::s:7Parsing6AlwaysV"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/always\/pullback(_:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/Parser-Implementations"]]},"schemaVersion":{"minor":2,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A parser that parses new input."}],"type":"paragraph"}]},{"parameters":[{"name":"keyPath","content":[{"inlineContent":[{"type":"text","text":"A key path to pull parsing back along from this parser’s input to a new"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This operator allows you to transform a parser of ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":"s into one on ","type":"text"},{"code":"NewInput","type":"codeVoice"},{"text":"s, via a","type":"text"},{"text":" ","type":"text"},{"text":"writable key path from ","type":"text"},{"code":"NewInput","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":". Intuitively you can think of this as a way of","type":"text"},{"text":" ","type":"text"},{"text":"transforming a parser on local data into one on more global data.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, the parser ","type":"text"},{"type":"codeVoice","code":"Int.parser"},{"text":" parses ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":" collections into integers,","type":"text"},{"text":" ","type":"text"},{"text":"and there’s a key path from ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":", and so we can","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/pullback(_:)"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var input = \"123 Hello world\"[...]","let output = Int.parser.pullback(\\.utf8).parse(&input)","precondition(output == 123)","precondition(input == \"123 Hello world\""]},{"inlineContent":[{"type":"text","text":"This has allowed us to parse "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"s with something that is only defined on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a parser."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Always/Parser-Implementations":{"title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/Parser-Implementations","kind":"article","abstract":[],"url":"\/documentation\/parsing\/always\/parser-implementations","role":"collectionGroup","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","type":"topic","kind":"symbol","abstract":[],"role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","url":"\/documentation\/parsing\/parsers","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","title":"Parsers.Pullback","abstract":[{"type":"text","text":"Transforms the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a downstream parser."}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/pullback","navigatorTitle":[{"text":"Pullback","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Always/pullback(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always\/pullback(_:)","kind":"symbol","url":"\/documentation\/parsing\/always\/pullback(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pullback","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}],"type":"topic","title":"pullback(_:)","abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a parser."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"title":"Always","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","kind":"symbol","abstract":[{"text":"A parser that always succeeds by returning the provided value, but does not consume any of its","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"url":"\/documentation\/parsing\/always","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Always"}],"type":"topic"}}}