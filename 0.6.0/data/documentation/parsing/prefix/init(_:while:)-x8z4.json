{"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")? = nil)"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closed range that provides a minimum number and maximum of elements to consume"},{"type":"text","text":" "},{"type":"text","text":"for parsing to be considered successful."}],"type":"paragraph"}],"name":"length"},{"content":[{"type":"paragraph","inlineContent":[{"text":"An optional closure that takes an element of the input sequence as its argument","type":"text"},{"text":" ","type":"text"},{"text":"and returns ","type":"text"},{"type":"codeVoice","code":"true"},{"text":" if the element should be included or ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" if it should be excluded.","type":"text"},{"text":" ","type":"text"},{"text":"Once the predicate returns ","type":"text"},{"type":"codeVoice","code":"false"},{"text":" it will not be called again.","type":"text"}]}],"name":"predicate"}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"syntax":"swift","code":["Prefix(2...4, while: { $0.isNumber }).parse(\"123456\") \/\/ \"1234\"","Prefix(2...4, while: { $0.isNumber }).parse(\"123\")    \/\/ \"123\"","Prefix(2...4, while: { $0.isNumber }).parse(\"1\")      \/\/ nil"],"type":"codeListing"}],"kind":"content"}],"schemaVersion":{"minor":2,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"variants":[{"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-x8z4"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"symbolKind":"init","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6PrefixV_5whileACyxGSNySiG_Sb7ElementQzcSgtcfc","role":"symbol","title":"init(_:while:)"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-x8z4":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","type":"topic","title":"init(_:while:)","kind":"symbol","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"role":"symbol","url":"\/documentation\/parsing\/prefix\/init(_:while:)-x8z4"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"title":"Prefix","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","type":"topic","kind":"symbol","abstract":[],"role":"collection"}}}