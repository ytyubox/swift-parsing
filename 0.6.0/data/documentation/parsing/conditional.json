{"metadata":{"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"title":"Conditional","navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"modules":[{"name":"Parsing"}],"roleHeading":"Enumeration","symbolKind":"enum","externalID":"s:7Parsing11ConditionalO"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conditional"]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/first(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/second(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/Parser-Implementations"]}],"schemaVersion":{"patch":0,"minor":2,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Conditional"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"First"},{"kind":"text","text":", "},{"text":"Second","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This parser is useful for situations where you want to run one of two different parsers based on"},{"type":"text","text":" "},{"type":"text","text":"a condition, which typically would force you to perform "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","type":"reference","isActive":true},{"type":"text","text":" and incur"},{"type":"text","text":" "},{"type":"text","text":"a performance penalty."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, you can use this parser in a ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","isActive":true},{"text":" operation to use the parsed","type":"text"},{"text":" ","type":"text"},{"text":"output to determine what parser to run next:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["versionParser.flatMap { version in","  version == \"2.0\"","    ? Conditional.first(V2Parser())","    : Conditional.second(LegacyParser())","}"],"type":"codeListing"},{"inlineContent":[{"text":"You wonâ€™t typically construct this parser directly, but instead will use standard","type":"text"},{"text":" ","type":"text"},{"code":"if","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"else if","type":"codeVoice"},{"text":"\/","type":"text"},{"code":"else","type":"codeVoice"},{"text":" statements in a parser builder to automatically build conditional parsers:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["versionParser.flatMap { version in","  if version == \"2.0\" {","    V2Parser()","  } else {","    LegacyParser()","  }","}"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"title":"Conditional","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"url":"\/documentation\/parsing\/conditional"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/parse(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/parse(_:)","type":"topic","url":"\/documentation\/parsing\/conditional\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"title":"parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","url":"\/documentation\/parsing","type":"topic","kind":"symbol","abstract":[],"role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/second(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/second(_:)","type":"topic","url":"\/documentation\/parsing\/conditional\/second(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"second","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Second","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","abstract":[],"title":"Conditional.second(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/Parser-Implementations":{"abstract":[],"title":"Parser Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/Parser-Implementations","kind":"article","type":"topic","url":"\/documentation\/parsing\/conditional\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/eraseToAnyParser()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","role":"symbol","title":"eraseToAnyParser()","url":"\/documentation\/parsing\/parser\/erasetoanyparser()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","url":"\/documentation\/parsing\/parser","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/flatMap(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","type":"topic","url":"\/documentation\/parsing\/parser\/flatmap(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"title":"flatMap(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/first(_:)":{"type":"topic","abstract":[],"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"first","kind":"identifier"},{"text":"(","kind":"text"},{"text":"First","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/conditional\/first(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/first(_:)","title":"Conditional.first(_:)","role":"symbol"}}}