{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"length","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"PartialRangeThrough","kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")? = nil)","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A partial, inclusive range that provides a maximum number of elements to consume.","type":"text"}]}],"name":"length"},{"content":[{"type":"paragraph","inlineContent":[{"text":"An optional closure that takes an element of the input sequence as its argument","type":"text"},{"text":" ","type":"text"},{"text":"and returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the element should be included or ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" if it should be excluded.","type":"text"},{"text":" ","type":"text"},{"text":"Once the predicate returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" it will not be called again.","type":"text"}]}],"name":"predicate"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"code":["Prefix(...4, while: { $0.isNumber }).parse(\"123456\") \/\/ \"1234\"","Prefix(...4, while: { $0.isNumber }).parse(\"123\")    \/\/ \"123\""],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"title":"init(_:while:)","modules":[{"name":"Parsing"}],"roleHeading":"Initializer","role":"symbol","symbolKind":"init","externalID":"s:7Parsing6PrefixV_5whileACyxGs19PartialRangeThroughVySiG_Sb7ElementQzcSgtcfc"},"abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":2},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-6hhnk":{"title":"init(_:while:)","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"role":"symbol","url":"\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing"}}}