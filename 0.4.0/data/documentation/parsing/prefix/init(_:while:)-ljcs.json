{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"length","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")? = nil)","kind":"text"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"An exact number of elements to consume for parsing to be considered successful.","type":"text"}],"type":"paragraph"}],"name":"length"},{"content":[{"inlineContent":[{"text":"An optional closure that takes an element of the input sequence as its argument","type":"text"},{"text":" ","type":"text"},{"text":"and returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the element should be included or ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" if it should be excluded.","type":"text"},{"text":" ","type":"text"},{"text":"Once the predicate returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" it will not be called again.","type":"text"}],"type":"paragraph"}],"name":"predicate"}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"syntax":null,"type":"codeListing","code":["Prefix(4, while: { $0.isNumber }).parse(\"123456\") \/\/ \"1234\"","Prefix(4, while: { $0.isNumber }).parse(\"123\")    \/\/ nil"]}],"kind":"content"}],"abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"variants":[{"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-ljcs"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs"},"schemaVersion":{"patch":0,"major":0,"minor":2},"metadata":{"externalID":"s:7Parsing6PrefixV_5whileACyxGSi_Sb7ElementQzcSgtcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")?)"}],"symbolKind":"init","modules":[{"name":"Parsing"}],"roleHeading":"Initializer","title":"init(_:while:)","role":"symbol"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-ljcs":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")?)","kind":"text"}],"url":"\/documentation\/parsing\/prefix\/init(_:while:)-ljcs","title":"init(_:while:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","kind":"symbol","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","role":"symbol"}}}