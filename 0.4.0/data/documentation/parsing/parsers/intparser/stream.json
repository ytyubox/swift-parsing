{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/stream","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Property","symbolKind":"property","externalID":"s:7Parsing6ParserPAASm5InputRpzrlE6streamAA7ParsersO6StreamVy_xGvp::SYNTHESIZED::s:7Parsing7ParsersO9IntParserV","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6StreamV","text":"Stream"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","title":"stream","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO6StreamV","text":"Stream","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"For example, the following parser can parse an integer followed by a newline from a collection","type":"text"},{"text":" ","type":"text"},{"text":"of UTF8 bytes:","type":"text"}],"type":"paragraph"},{"code":["Parsers.Integer<ArraySlice<UInt8>, Int>()","  .skip(StartsWith(\"\\n\".utf8))"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"This parser can be transformed into one that processes an incoming stream of UTF8 bytes:","type":"text"}],"type":"paragraph"},{"code":["let newlineSeparatedIntegers = Parsers.Integer<ArraySlice<UInt8>, Int>()","  .skip(StartsWith(\"\\n\".utf8))","  .stream"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"And then it can be used on a stream, such as values coming from standard in:"}],"type":"paragraph"},{"code":["var stdin = AnyIterator {","  readLine().map { ArraySlice($0.utf8) }","}","","newlineSeparatedIntegers","  .parse(&stdin)"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"paths":["\/documentation\/parsing\/parsers\/intparser\/stream"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/Parser-Implementations"]]},"schemaVersion":{"major":0,"minor":2,"patch":0},"kind":"symbol","abstract":[{"text":"Transforms the receiver parser into one that can parse streams of input.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"url":"\/documentation\/parsing\/parsers\/stream","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"title":"Parsers.Stream","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that can parse streams of input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"code":"+","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"text":" sign) from the","type":"text"},{"text":" ","type":"text"},{"text":"beginning of a collection of UTF8 code units.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/intparser","kind":"symbol","title":"Parsers.IntParser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntParser","kind":"identifier"}],"navigatorTitle":[{"text":"IntParser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/stream":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Stream","preciseIdentifier":"s:7Parsing7ParsersO6StreamV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/stream","title":"stream","type":"topic","url":"\/documentation\/parsing\/parsers\/intparser\/stream","kind":"symbol","abstract":[{"type":"text","text":"Transforms the receiver parser into one that can parse streams of input."}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"kind":"symbol","url":"\/documentation\/parsing\/parsers","type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"title":"Parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser/Parser-Implementations":{"abstract":[],"url":"\/documentation\/parsing\/parsers\/intparser\/parser-implementations","kind":"article","title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser\/Parser-Implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing"}}}