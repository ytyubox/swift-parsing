{"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"metadata":{"modules":[{"name":"Parsing"}],"roleHeading":"Structure","externalID":"s:7Parsing10PrefixUpToV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"role":"symbol","symbolKind":"struct","title":"PrefixUpTo"},"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/prefixupto"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/possibleMatch"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations"],"generated":true,"title":"Default Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This parser is named after ","type":"text"},{"code":"Sequence.prefix(upTo:)","type":"codeVoice"},{"text":", and uses similar logic under the hood to","type":"text"},{"text":" ","type":"text"},{"text":"consume and return input up to a particular subsequence.","type":"text"}]},{"syntax":"swift","code":["let lineParser = PrefixUpTo<Substring>(\"\\n\")","","var input = \"Hello\\nworld\\n\"[...]","line.parse(&input) \/\/ \"Hello\"","input \/\/ \"\\nworld\\n\""],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/Parser-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/Parser-Implementations","type":"topic","title":"Parser Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/parsing\/prefixupto\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:)-9kyot":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-9kyot","kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","title":"init(_:)","type":"topic","url":"\/documentation\/parsing\/prefixupto\/init(_:)-9kyot","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UTF8View","preciseIdentifier":"s:SS8UTF8ViewV"},{"kind":"text","text":")"}],"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/areEquivalent":{"kind":"symbol","title":"areEquivalent","role":"symbol","abstract":[],"url":"\/documentation\/parsing\/prefixupto\/areequivalent","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/areEquivalent","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"areEquivalent"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/possibleMatch":{"type":"topic","role":"symbol","url":"\/documentation\/parsing\/prefixupto\/possiblematch","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/possibleMatch","title":"possibleMatch","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possibleMatch"},{"kind":"text","text":": "},{"text":"Input","kind":"typeIdentifier"}],"kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"url":"\/documentation\/parsing\/prefixupto","kind":"symbol","title":"PrefixUpTo","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","url":"\/documentation\/parsing\/parser","type":"topic","abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"title":"Parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","url":"\/documentation\/parsing","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","title":"Parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:)-8sywj":{"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/parsing\/prefixupto\/init(_:)-8sywj","title":"init(_:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}]},"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-8sywj"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:)-7b2he":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/prefixupto\/init(_:)-7b2he","title":"init(_:)","kind":"symbol","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:by:)":{"abstract":[],"type":"topic","title":"init(_:by:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:by:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/prefixupto\/init(_:by:)","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/parse(_:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/parse(_:)","type":"topic","url":"\/documentation\/parsing\/prefixupto\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"parse(_:)"}}}